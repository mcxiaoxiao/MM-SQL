[
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find out the average salary of professors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average salary of all the instructors is 77600.18819999999.",
                "query": "SELECT avg(salary) FROM instructor"
            },
            {
                "isuser": true,
                "text": "Find the average salary of the professors of each department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table shows the average salary of all the instructors in each department",
                "query": "SELECT avg(salary), dept_name FROM instructor GROUP BY dept_name"
            },
            {
                "isuser": true,
                "text": "Which department has the highest average salary of professors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Physics is the name of the department that has the highest average salary of instructors.",
                "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Which department has the lowest average salary of professors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Accounting is the name of the department that has the lowest average salary of instructors.",
                "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary)  LIMIT 1"
            },
            {
                "isuser": true,
                "text": "In which department Mr. Mird work for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the department where the instructor with the name 'Mird' works for is Marketing.",
                "query": "SELECT dept_name FROM instructor where name = 'Mird'"
            },
            {
                "isuser": true,
                "text": "How much is the salary Mr. Mird earns currently?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The salary of the instructor with the name 'Mird' is 119921.41.",
                "query": "SELECT \tsalary FROM instructor where name = 'Mird'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome! goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "What is the station ID for London Waterloo",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The station id for London Waterloo is 1. ",
                "query": "SELECT station_id from station where name = \"London Waterloo\" "
            },
            {
                "isuser": true,
                "text": "What trains go to station ID 1? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The trains that go to station id 1 are shown in the result table. ",
                "query": "SELECT T3.* FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id where T1.station_id = 1"
            },
            {
                "isuser": true,
                "text": "Can you give me the names of those trains and tell me when they have service",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names and the times of the trains that go to station id 1 are shown in the result table. ",
                "query": "SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id where T1.station_id = 1"
            },
            {
                "isuser": true,
                "text": "Do those trains go to London Bridge? ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, none of these trains go to London Bridge. ",
                "query": "SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id where T1.station_id = 1 intersect SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id where T1.station_id = 3"
            },
            {
                "isuser": true,
                "text": "How many platforms does London Waterloo station have ? ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The number of platforms that the station with name London Waterloo station has is 19. ",
                "query": "SELECT number_of_platforms from station where name = \"London Waterloo\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the captain ranks",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the captain ranks. For example, it is  Midshipman",
                "query": "SELECT rank FROM captain "
            },
            {
                "isuser": true,
                "text": "Show me Third-rate ship of the line class",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the information of the captain with a class third rate ship of the line. For example, Captain Sir Henry Langford with Captain id 1 has ship with id 1. His age is  40.  The class is third-rate ship of the line and the rank is Midshipman.",
                "query": "SELECT * FROM captain where class = \"Third-rate ship of the line\""
            },
            {
                "isuser": true,
                "text": "Show me the captain rank that has no captain in these class",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "Show me the captain rank that has no captain in Third-rate ship of the line class",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Show me the captain rank that has no captain in Third-rate ship of the line class",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the captain rank tha has no captain in Third-rate ship of the line class. For example, they are Midshipman",
                "query": "SELECT Rank FROM captain where class != \"Third-rate ship of the line\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "machine_repair",
        "turns": [
            {
                "isuser": true,
                "text": "Who are the technicians from team \"CLE\" and \"CWS\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of the technicians from the teams \"CLE\" and \"CWS\".",
                "query": "select Name from technician where \tTeam='CLE' or team='CWS'"
            },
            {
                "isuser": true,
                "text": "Please show me the starting years for them",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the starting years for the technicians from the teams \"CLE\" and \"CWS\".",
                "query": "select Starting_Year from technician where \tTeam='CLE' or team='CWS'"
            },
            {
                "isuser": true,
                "text": "What years are shared?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The starting year shared by the technicians from the teams \"CLE\" and \"CWS\" is the year 2005.",
                "query": "SELECT Starting_Year FROM technician WHERE Team = \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team = \"CWS\""
            },
            {
                "isuser": true,
                "text": "Can you also give me the minimum and maximum starting years?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The minimum starting year is 2002, and the maximum starting year is 2016.",
                "query": "select max(Starting_Year),min(Starting_Year) from technician"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Please list each gender code with its corresponding amount of guests and sort it in descending order by that count?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are each gender code and the corresponding count of guests sorted by the count in descending order.",
                "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
            },
            {
                "isuser": true,
                "text": "What are the full names of all the people with unknown genders?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full names of all the people with unknown gender code.",
                "query": "SELECT guest_first_name, guest_last_name FROM Guests where gender_code = \"Unknown\""
            },
            {
                "isuser": true,
                "text": "What were their birth dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the birth dates of all the people with unknown gender code.",
                "query": "SELECT date_of_birth FROM Guests where gender_code = \"Unknown\""
            },
            {
                "isuser": true,
                "text": "What are the birth dates of all guests with the letter M in their first or last name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the birth dates of all guests with the letter M in their first or last name",
                "query": "SELECT date_of_birth FROM Guests where guest_first_name like '%M%' or guest_last_name like '%M%'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "film_rank",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average gross amount of money made in dollars?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average gross amount of money in dollars is 114827242.38461539.",
                "query": "SELECT avg(gross_in_dollar) FROM film "
            },
            {
                "isuser": true,
                "text": "What films did Nicholas Meyer direct?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the titles of movies directed by Nicholas Meyer.",
                "query": "SELECT Title FROM film WHERE Director  =  \"Nicholas Meyer\" "
            },
            {
                "isuser": true,
                "text": "Did Star Trek II: The Wrath of Khan make more money than the average film?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, Star Trek II: The Wrath of Khan only made 79912963 while the average gross amount for all films is 114827242.38461539.",
                "query": "SELECT gross_in_dollar FROM film WHERE Title = \"Star Trek II: The Wrath of Khan\""
            },
            {
                "isuser": true,
                "text": "Did any movies directed by Walter Hill make more money than Star Trek II: The Wrath of Khan?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, no movies directed by Walter Hill made more money than Star Trek II: The Wrath of Khan.",
                "query": "SELECT gross_in_dollar FROM film WHERE Director = \"Walter Hill\" AND gross_in_dollar - (SELECT gross_in_dollar FROM film WHERE Title = \"Star Trek II: The Wrath of Khan\") > 0"
            },
            {
                "isuser": true,
                "text": "What were those movies directed by Walter Hill?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the movie directed by Walter Hill is 48 Hrs.",
                "query": "SELECT Title FROM film WHERE Director = \"Walter Hill\""
            },
            {
                "isuser": true,
                "text": "What studio produced that movie with name 48 Hrs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The studio that produced the movie 48 Hrs is Paramount.",
                "query": "SELECT Studio FROM film WHERE Title = \"48 Hrs\""
            },
            {
                "isuser": true,
                "text": "What studio produced Star Trek II: The Wrath of Khan?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The studio that produced Star Trek II: The Wrath of Khan is Paramount.",
                "query": "SELECT Studio FROM film WHERE Title = \"Star Trek II: The Wrath of Khan\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "Find the first name of the students who permanently live in the country Haiti.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first names of the students who permanently live in the country Haiti",
                "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' "
            },
            {
                "isuser": true,
                "text": "Please also find the first name of the students who have the cell phone number 09700166582",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the first name of the students who have the cell phone number 09700166582 is Jarvis",
                "query": "SELECT first_name FROM Students WHERE cell_mobile_number = '09700166582'"
            },
            {
                "isuser": true,
                "text": "Can you show me the last name and address for him?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "current address please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "current address please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the last name and the detailed current address of the student who has the cell phone number 09700166582",
                "query": "SELECT T1.last_name, T2.* FROM Students as T1 join addresses as T2 on T1.current_address_id = T2.address_id WHERE T1.cell_mobile_number = '09700166582'"
            },
            {
                "isuser": true,
                "text": "Ok. Can you also give me his email address?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the email address of the student who has the cell phone number 09700166582 is jillian26@example.net",
                "query": "SELECT email_address FROM Students where cell_mobile_number = '09700166582'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_orders",
        "turns": [
            {
                "isuser": true,
                "text": "Which customers have ordered \"food\"?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes. I just want to know the names of which customers have placed orders under the category \"food\"",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes. I just want to know the names of which customers have placed orders under the category \"food\"",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "the table shows the names of customers who have ordered products named \"food\".",
                "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\""
            },
            {
                "isuser": true,
                "text": "Of the names listed in the table, which of them have an item status listed as \"cancel\"?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names of customers who have ordered products named \"food\" also with item \"cancel\" status are George and Devan.",
                "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
            },
            {
                "isuser": true,
                "text": "How many customers have cancelled orders?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of customers who have have once canceled the purchase of the product \"food\" is 2.",
                "query": "SELECT count(T1.customer_name) FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome and bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What are id and name of the products whose price is lower than 600?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids and names of the products whose price is lower than 600 are listed.",
                "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 "
            },
            {
                "isuser": true,
                "text": "What are id and name of the products whose price is higher than 900?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids and names of the products whose price is higher than 900 are listed.",
                "query": "SELECT product_id ,  product_name FROM products WHERE product_price  >  900"
            },
            {
                "isuser": true,
                "text": "How many products have price lower than 600 or higher than 900?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 7 products whose price are lower than 600 or higher than 900.",
                "query": "SELECT count(*) FROM products WHERE product_price  <  600 OR product_price  >  900"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "List the state and enrollment of all the colleges where any students got accepted in the tryout decision.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states and enrollments of the colleges where have any students who got accepted in the tryout decision.",
                "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"
            },
            {
                "isuser": true,
                "text": "What are the states and names of the colleges that all the goalies tried out for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states and names of the colleges that all the goalies tried out for",
                "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos = \"goalie\""
            },
            {
                "isuser": true,
                "text": "What are the states and names of all colleges that didn't accept students in the tryout decision?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states and names of all colleges that didn't accept students in the tryout decision",
                "query": "select state, enr from college where cName not in (SELECT DISTINCT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision = \"yes\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which departments get a commission percentage?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the departments that get a commission percentage.",
                "query": "SELECT *  FROM employees WHERE commission_pct != \"null\""
            },
            {
                "isuser": true,
                "text": "How many employees in these departments get a commission percentage?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of employees in these departments that get a commission percentage is 107.",
                "query": "SELECT count(*)  FROM employees WHERE commission_pct != \"null\" "
            },
            {
                "isuser": true,
                "text": "By department, display average salary of employees who get a commission percentage",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the average salary of employees for each department who gets a commission percentage. For example, the average salary of department 0 is 7000.0.",
                "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "What is the total number of staff members?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of staff members is 15. ",
                "query": "SELECT count(*) from staff"
            },
            {
                "isuser": true,
                "text": "How many of them are females?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Is there a staff member with the first name \"Janessa\"?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Is there a staff member with the first name \"Janessa\"?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, there is staff member with the first name \"Janessa.\" Their staff information is shown in the result table.  ",
                "query": "SELECT * from staff where first_name = \"Janessa\""
            },
            {
                "isuser": true,
                "text": "What is the last name of the staff member with the first name \"Janessa\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name of the staff member with the first name \"Janessa\" is Sawayn. ",
                "query": "SELECT last_name from staff where first_name = \"Janessa\""
            },
            {
                "isuser": true,
                "text": "What is the birthday of the staff member with the first and last name as Janessa and Sawayn?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The birthday of the staff member with first name Janessa and last name Sawayn is 2010-12-08 16:55:14. ",
                "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
            },
            {
                "isuser": true,
                "text": "Thanks.",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the customer who has made the minimum amount of payment in one claim?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the name of the customer who has made the minimum paid amount  in one claim is Mrs. Hanna Willms",
                "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
            },
            {
                "isuser": true,
                "text": "What is the amount claimed for this customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the claimed amount of the customer who has made the minimum paid amount in one claim is 789.19",
                "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
            },
            {
                "isuser": true,
                "text": "Can you also give me  the name of the customer who has made the maximum amount of payment in one claim?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer detail of the  customer who has made the maximum amount of payment in one claim is Lauriane Ferry PhD",
                "query": "SELECT t3.Customer_Details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT max(amount_piad) FROM claim_headers)"
            },
            {
                "isuser": true,
                "text": "Hmmm. Can you please give me the claimed amount for this customer",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the claimed amount of the customer who has made the maximum paid amount in one claim is 818.15",
                "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT max(amount_piad) FROM claim_headers)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "find the distinct names of all wines that have prices higher than some wins from john anthony winery\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The  names of  all  wines  that have prices higher than some wines from John Anthony winery  are  shown  in the  table \n\n",
                "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
            },
            {
                "isuser": true,
                "text": "out of those show me prices higher than 30\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The names of all wines that have prices both higher than some wines from John Anthony winery  and  higher  than  30 are shown in the table",
                "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\") and  Price>30"
            },
            {
                "isuser": true,
                "text": "One last question. out of those show me cases higher than 300\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of all wines that have prices both higher than some wines from John Anthony winery and higher than 300 are shown in the table",
                "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\") and  Price>300"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_mdm",
        "turns": [
            {
                "isuser": true,
                "text": "How many master customer ID numbers are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 9 customer ID in total",
                "query": "SELECT count(master_customer_id) FROM Customer_Master_Index "
            },
            {
                "isuser": true,
                "text": "What are the master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz",
                "query": "SELECT \tmaster_customer_id FROM  Customer_Master_Index where cmi_details != ('Schmidt, Kertzmann and Lubowitz')"
            },
            {
                "isuser": true,
                "text": "What are their cmi cross reference IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the cmi cross reference IDs of customer whose master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz",
                "query": "SELECT \tt1.master_customer_id,cmi_cross_ref_id FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id=t2.master_customer_id where t1.cmi_details not in ('Schmidt, Kertzmann and Lubowitz')"
            },
            {
                "isuser": true,
                "text": "What are their respective source system codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the source_system_code of customers whose master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz",
                "query": "SELECT \tt1.master_customer_id,cmi_cross_ref_id,\tsource_system_code  FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id=t2.master_customer_id where t1.cmi_details != ('Schmidt, Kertzmann and Lubowitz')"
            },
            {
                "isuser": true,
                "text": "What are the renters arrears tax IDs associated with them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows  the renting arrears tax ids related to the customers whose master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz",
                "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome\uff0cgoodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_product",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please find the products with the max page size as \"A4\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the products with the max page size as \"A4\"",
                "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\""
            },
            {
                "isuser": true,
                "text": "Could you please find the products with the pages per minute color smaller than 5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the products with the pages per minute color smaller than 5",
                "query": "SELECT product FROM product WHERE pages_per_minute_color  <  5"
            },
            {
                "isuser": true,
                "text": "Could you please find the products with the max page size as \"A4\" and with the pages per minute color smaller than 5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the products with max page size as \"A4\" and pages per minute color smaller than 5.",
                "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
            },
            {
                "isuser": true,
                "text": "What are the interfaces of those products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the products and corresponding interfaces with max page size as \"A4\" and pages per minute color smaller than 5",
                "query": "SELECT product,interface FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
            },
            {
                "isuser": true,
                "text": "What are the dimensions of those products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the products and corresponding dimensions with max page size as \"A4\" and pages per minute color smaller than 5 ",
                "query": "SELECT product,dimensions FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
            },
            {
                "isuser": true,
                "text": "Could you please find the products with the pages per minute color larger than 5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the products with the pages per minute color larger than 5",
                "query": "SELECT product FROM product WHERE pages_per_minute_color  > 5"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "election",
        "turns": [
            {
                "isuser": true,
                "text": "Who are the delegates on the Appropriations committee?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows all the names of the delegates on the committee named \"Appropriations\".",
                "query": "select Delegate from election where Committee='Appropriations'"
            },
            {
                "isuser": true,
                "text": "What counties are they from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows all the counties of the delegates on the committee named \"Appropriations\".",
                "query": "select T1.County_name from county AS T1 JOIN election AS T2 where T1.County_Id=District and T2.Committee='Appropriations'"
            },
            {
                "isuser": true,
                "text": "What districts are they from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows all the districts of the delegates on the committee named \"Appropriations\".",
                "query": "select District from election where Committee='Appropriations'"
            },
            {
                "isuser": true,
                "text": "What are the populations of the counties they come from, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the population of the counties for the delegates on the committee named \"Appropriations\".",
                "query": "select T1.Population from county AS T1 JOIN election AS T2 where T1.County_Id=District and T2.Committee='Appropriations'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names and distances of aircraft that have more than 5000 distance?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and distances of aircraft that have more than 5000 distance",
                "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 "
            },
            {
                "isuser": true,
                "text": "What are the names and distances of aircraft that have more than 5000 distance and there are at least 5 people who have its certificate?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and distances of aircraft that have more than 5000 distance and there are at least 5 people who have its certificate.",
                "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
            },
            {
                "isuser": true,
                "text": "What is the employee ID of the employee who flew the longest distance?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the employee ID of the employee who flew the longest distance is 142519864",
                "query": "SELECT t1.eid FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid ORDER BY t2.distance desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks! Have a good night!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Which colleges students played in the try out in striker position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "FSU's colleges students played in the try out in striker position.",
                "query": "select cName from Tryout where pPos = 'striker'"
            },
            {
                "isuser": true,
                "text": "And in which state is it located? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college that has students play as a striker in the try out is located in FL.",
                "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'"
            },
            {
                "isuser": true,
                "text": "How about it's enrollment number? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The enrollment number of the college that has students play as a striker in the try out is 19000.",
                "query": "SELECT T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "city_record",
        "turns": [
            {
                "isuser": true,
                "text": "What is the venue of the competition \"1994 FIFA World cup qualification\" hosted by \"Hangzou\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "THere's no  competition \"1994 FIFA World cup qualification\" hosted by \"Hangzou\"",
                "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Hangzhou ( Zhejiang )\" AND T3.competition = \"1994 FIFA World Cup qualification\""
            },
            {
                "isuser": true,
                "text": "ok. What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing\" ( Jiangsu )\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing\" ( Jiangsu )\" are Estadio Rigoberto L\u00f3pez , Managua , Nicaragua and Estadio Cuscatl\u00e1n , San Salvador , El Salvador",
                "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\""
            },
            {
                "isuser": true,
                "text": "What is the GDP of the city Shanghai in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the GDP of the city Shanghai is 1919.57",
                "query": "SELECT GDP FROM city WHERE city = \"Shanghai\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "protein_institute",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all building names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi! The names of all the buildings are listed in the result table. They are Citizens Bank Building, Tampa City Hall, etc",
                "query": "SELECT name FROM building"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update the list to show the number of different institutions in each building?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure! The number of institutions in each building are listed. For example, the building Citizens Bank Building has 2 different institutions.",
                "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id"
            },
            {
                "isuser": true,
                "text": "Can you filter this list to show me only the tallest building?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Thanks! I would be fine just know which is the tallest building.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks! I would be fine just know which is the tallest building.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!  I want to know the name of the tallest building please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!  I want to know the name of the tallest building please.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The name of the building with the largest height is 100 North Tampa",
                "query": "SELECT Name FROM building ORDER BY Height_feet DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome! Goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "culture_company",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show a list of all publishers who did not publish any books in 1989?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no publishers who did not publish any books in 1989.",
                "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you show me a list of all of the book titles published by Alyson?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result tables shows the titles of the books published by \"Alyson\".",
                "query": "select Book_Title from book_club where \tPublisher='Alyson'"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you update that list to show the years that those 3 books were published and  what category they fall under?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the years and the category of each book published by Alyson. ",
                "query": "select Book_Title,Year,Category from book_club where \tPublisher='Alyson'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "What are the ids and names of the medicine that can interact with two or more enzymes? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids and names of the medicine that can interact with two or more enzymes are shown in the result table. One of them is with id 2 and name Aripiprazole",
                "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "How many enzymes can Aripiprazole interact with?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 enzymes can interact with medicine name Aripiprazole.",
                "query": "SELECT COUNT(DISTINCT T2.enzyme_id) FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE name = \"Aripiprazole\""
            },
            {
                "isuser": true,
                "text": "What about Asenapine?",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are also 3 enzymes that can interact with medicine name Asenapine.",
                "query": "SELECT COUNT(DISTINCT T2.enzyme_id) FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE name = \"Asenapine\""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "hi,List out the all color description",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the color descriptions are listed in the result table. There are red, green, yellow, and so on.",
                "query": "SELECT color_description FROM ref_colors"
            },
            {
                "isuser": true,
                "text": "list out the color code for all the product name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The color codes for their corresponding product names are listed in the result table. For example, product name cumin has color code 4.",
                "query": "SELECT color_code, product_name FROM products"
            },
            {
                "isuser": true,
                "text": "list out the typical selling price for all product name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The typical selling price and their corresponding product names are listed in the result table. For example, product name cumin has typical selling price 2878.3",
                "query": "SELECT typical_selling_price, product_name FROM products"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all the unique fault log entry ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are all the unique fault log entry ids.",
                "query": "SELECT distinct fault_log_entry_id FROM Fault_Log"
            },
            {
                "isuser": true,
                "text": "Can you count the number of unique part fault ids that belong to each unique fault log entry id, and then add those values to the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the number of part fault ids for each unique fault log entry id.",
                "query": "SELECT fault_log_entry_id, count(*) FROM Fault_Log_Parts GROUP BY fault_log_entry_id"
            },
            {
                "isuser": true,
                "text": "Amazing, can you display only the entry with a fault log id of 1 as well as the description and record time for that entry with a fault log id of 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the number of part fault ids for the fault log entry with id 1, along with its fault description and fault log entry datetime.",
                "query": "SELECT count(*), T2.*,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id where t1.fault_log_entry_id = 1 GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the artists from Bangladesh?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the artists from Bangladesh are Prity and Farida.",
                "query": "SELECT artist_name FROM artist WHERE country  =  \"Bangladesh\" "
            },
            {
                "isuser": true,
                "text": "Which artists from Bangladesh have never received a rating higher that 7?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the artists who are from Bangladesh and have never received rating higher than 7 are listed.",
                "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
            },
            {
                "isuser": true,
                "text": "Can you add their genders into the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names and gender of the artists who are from Bangladesh and have never received rating higher than 7 are listed.",
                "query": "select artist_name, gender from artist where artist_name in (SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7)"
            },
            {
                "isuser": true,
                "text": "What are their preferred genres?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The preferred genres of the artists who are from Bangladesh and have never received rating higher than 7 are listed. ",
                "query": "select preferred_genre from artist where artist_name in (SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7)"
            },
            {
                "isuser": true,
                "text": "What are the names of the songs they have sung?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of songs that the artists who are from Bangladesh and have never received rating higher than 7 have sung are listed.",
                "query": "select song_name from song where artist_name in (SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "station_weather",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, can you please tell me what is the ID of the station whose maximum precipitation is higher than 50?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hello! This is the list of ids of the station whose maximum precipitation is higher than 50.",
                "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"
            },
            {
                "isuser": true,
                "text": "thank you, could you please also let me know their names and local authorities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "you are welcome. This lists the ids, network names and the local authorities for stations whose maximum precipitation is higher than 50.",
                "query": "SELECT t2.id ,  t2.network_name, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"
            },
            {
                "isuser": true,
                "text": "that was quick, thank you again. then could you please let me know if there is any station which has less than 10 maximum precipitation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are so welcome. There isn't any station whose maximum precipitation is less than 10. ",
                "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  <  10"
            },
            {
                "isuser": true,
                "text": "seems like everybody will have some rain here.. then could you please let me know what is the lowest precipitation we have on the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The lowest precipitation we have is 10",
                "query": "SELECT min(precipitation) FROM weekly_weather"
            },
            {
                "isuser": true,
                "text": "could you please let me know the ID of the stations with 10 precipitation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of ids of  the stations with 10 precipitation",
                "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id where t1.precipitation = 10"
            },
            {
                "isuser": true,
                "text": "what would be the name of the station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of ids and names of the stations with 10 precipitation",
                "query": "SELECT t2.id,t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id where t1.precipitation = 10"
            },
            {
                "isuser": true,
                "text": "Then my last inquiry, could you please let me know Amersham's high temperature and wind speed on Friday?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "For station Amersham on Friday, the high temperature is 55 and wind speed is 17 mph",
                "query": "SELECT t1.high_temperature,t1.wind_speed_mph FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id where t1.day_of_week ='Friday' and T2.network_name='Amersham'"
            },
            {
                "isuser": true,
                "text": "Thanks! hope you have a wonderful day :)",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You too! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all of the apartments with more than 4 bedrooms?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, please!  I believe that's the only discrete identifier of the apartments (at least that I can see)...",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, please!  I believe that's the only discrete identifier of the apartments (at least that I can see)...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  the apartment ids of apartments with more than 4 bedrooms ",
                "query": "select apt_id from Apartments where bedroom_count > 4;"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you list the facility codes for each of those apartment IDs (3 4 6 11 12 13 15)?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the facility codes for the apartments with more than 4 bedrooms ",
                "query": "select T2.facility_code from Apartments as T1 JOIN Apartment_Facilities as T2 ON T1.apt_id = T2.apt_id WHERE T1.bedroom_count > 4"
            },
            {
                "isuser": true,
                "text": "How many people live in the apartments with gym facilities?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Can you please list the 'building id', 'apartment type code' and 'apartment number' for all apartment IDs with more than 4 bedrooms?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you please list the 'building id', 'apartment type code' and 'apartment number' for all apartment IDs with more than 4 bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the building ids, apartment type codes, and apartment numbers for all apartments with more than 4 bedrooms",
                "query": "select \tbuilding_id,apt_type_code,apt_number from Apartments where bedroom_count > 4;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_card_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "How many customers have accounts?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of customers with accounts is 15.",
                "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id"
            },
            {
                "isuser": true,
                "text": "What is the customer first, last name and id with the most number of accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name and ID of the customer with the most number of accounts is Faustino Langworth and 9.",
                "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the customer first, last name and id with the least number of accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name and ID of the customer with the least number of accounts is Susie Wiza and 2.",
                "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "university_basketball",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you please show me a list of all of the school names for all schools that are not of the Public affiliation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hello! This is the list of all schools that do not have public affiliation.",
                "query": "SELECT School FROM university WHERE affiliation != 'Public'"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update that list to include the year that the school was founded?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure! This is the list of names and years of founding for all schools that do not have public affiliation",
                "query": "SELECT School,Founded FROM university WHERE affiliation != 'Public'"
            },
            {
                "isuser": true,
                "text": "Nice!  Can you show me a list of the names of all of the schools?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This shows the list of all schools.",
                "query": "SELECT School FROM university"
            },
            {
                "isuser": true,
                "text": "Wonderful!  Finally, can you update this list to show the affiliation type of each of these schools?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome. This shows the list of the school and the affiliation type of each school",
                "query": "SELECT School,Affiliation FROM university"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "what is the zip code of the highest number of trips taken\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "i would like to know the zip code of trips taken above 200 with humidity below 70\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "i would like to know the zip code of trips taken above 200 with humidity below 70\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The zip code of trips taken above 200 with humidity below 70 is 94107.",
                "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  200"
            },
            {
                "isuser": true,
                "text": "what end station name has the least amount of trips taken but still above 100 trips\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The end station name that has the least amount of trips taken but still above 100 trips is San Francisco Caltrain 2 (330 Townsend).",
                "query": "SELECT \tend_station_name FROM trip GROUP BY zip_code HAVING count(*)  >=  100 order by count(*) asc limit 1"
            },
            {
                "isuser": true,
                "text": "the zip code 94107 what is the humidity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the mean humidity of weather with zip code 94107.",
                "query": "SELECT (mean_humidity) from weather where zip_code = 94107"
            },
            {
                "isuser": true,
                "text": "what was the humidity at the starting station for zip code 94107",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Thanks!\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "behavior_monitoring",
        "turns": [
            {
                "isuser": true,
                "text": "What is the highest average monthly rental of all the students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The highest average monthly rental of all the students is 1113.0996.",
                "query": "SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Hmm, can you tell me the addresses that have the highest average monthly rental?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The address id of the student address that has the highest average monthly rental is 10.",
                "query": "SELECT T2.address_id FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the id and first name of the student whose addresses have the highest average monthly rental?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the  id and first name of the student whose addresses have the highest average monthly rental.",
                "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "which engineer made the least number of visits?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the id, first, and last names of the engineer who has the least number of visits.",
                "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "how many visits did each engineer have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the number of visits of each engineer along with their ids.",
                "query": "SELECT count(*),T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id"
            },
            {
                "isuser": true,
                "text": "can you list the engineer id, first name, and last name of the engineer who had the least number of visits?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id, first, and last names of the engineer who has the least number of visits.",
                "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name ,count(*)FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sports_competition",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the names of all clubs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the name in each club. For example, one of the clubs is AIB.",
                "query": "select name from club"
            },
            {
                "isuser": true,
                "text": "Show me the name of the club that has the id number 3 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the club that has the id number 3 is IFG.",
                "query": "select name from club where Club_ID='3'"
            },
            {
                "isuser": true,
                "text": "Show me the region of the club BK Slide?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The region of club named \"BK Slide\" is \"UK\".",
                "query": "select Region from club where name='BK Slide'"
            },
            {
                "isuser": true,
                "text": "Show me the names of the clubs that do not have any players?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the club that do not have any players is \"HSBIF\".",
                "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "university_basketball",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me a list of colleges that have an enrollment of 15,000 or higher?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Can you provide the name and the location of the schools that have an enrollment of 15,000 or higher?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you provide the name and the location of the schools that have an enrollment of 15,000 or higher?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Ok. Here is the result table of the names and the locations of the schools that have an enrollment of 15,000 or higher. For example, one of the schools is the University of Delaware with location Newark, DE.",
                "query": "SELECT School, Location FROM university WHERE enrollment > 15000"
            },
            {
                "isuser": true,
                "text": "What conference are these schools in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the conferences that the schools that have an enrollment of 15,000 or higher are in. For example, one of the conferences is the Colonial Athletic Association ( D-I )",
                "query": "SELECT Primary_conference FROM university WHERE School in (SELECT School FROM university WHERE enrollment > 15000)"
            },
            {
                "isuser": true,
                "text": "Can you show the school names, location and conferences together?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the table that shows the school names, location, and conferences of the schools that have an enrollment of 15,000 or higher.",
                "query": "SELECT School, Location, Primary_conference FROM university WHERE enrollment > 15000"
            },
            {
                "isuser": true,
                "text": "Are there any colleges in PA that have an enrollment count greater than 15000 that can be added to this table?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, there isn't any college in PA that has an enrollment count greater than 15000.",
                "query": "SELECT School, Location, Primary_conference FROM university WHERE enrollment > 15000"
            },
            {
                "isuser": true,
                "text": "Can you add the enrollment count to the table?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here is the table that shows the school names, locations, conferences, and enrollment counts of the schools that have an enrollment of 15,000 or higher.",
                "query": "SELECT School, Location, Primary_conference, enrollment FROM university WHERE enrollment > 15000"
            },
            {
                "isuser": true,
                "text": "Can you add the minimum enrollment count to the table?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "employee_hire_evaluation",
        "turns": [
            {
                "isuser": true,
                "text": "Which district has the largest number of products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Lahden Stadion has the largest number of products",
                "query": "SELECT district FROM shop ORDER BY number_products DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the manager's name of that shop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Ilkka M\u00e4kel\u00e4 is the manager of the shop which has the largest number of products.",
                "query": "SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many products did he produce at that shop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of products in the shop of that manager which has the largest number of products is 15000.",
                "query": "SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Where is the location of that district?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The location of the district that has the shop with the largest number of products is Lahti",
                "query": "SELECT location FROM shop ORDER BY number_products DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the shop ID number?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The shop id of the shop which has the largest number of products is 8",
                "query": "SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "musical",
        "turns": [
            {
                "isuser": true,
                "text": "Give me the list of nominees that has been nominated multiple times for musicals",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Bob Fosse and Cleavant Derricks are the nominees that have been nominated for more than 1 times for musicals.",
                "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  1"
            },
            {
                "isuser": true,
                "text": "And what musicals were they nominated for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the musicals made by the nominees that have been nominated for more than 1 times are Chicago and Rent.",
                "query": "SELECT name FROM musical GROUP BY Nominee HAVING COUNT(*)  > 1"
            },
            {
                "isuser": true,
                "text": "What year(s) were they nominated in? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the years that the nominees that have been nominated for more than 1 times nominated in.",
                "query": "SELECT year FROM musical GROUP BY Nominee HAVING COUNT(*)  > 1"
            },
            {
                "isuser": true,
                "text": "Who else was also nominated in 1986?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the nominee that was nominated in 1986 besides Bob Fosse is Cleavant Derricks",
                "query": "SELECT distinct nominee FROM musical where year = 1986 and nominee != \"Bob Fosse\""
            },
            {
                "isuser": true,
                "text": "What musicals were they nominated for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The nominee Cleavant Derricks was nominated for Les Mis\u00e9rables and Rent in the year of 1986",
                "query": "SELECT name FROM musical where year = 1986 and nominee = \"Cleavant Derricks\""
            },
            {
                "isuser": true,
                "text": "And in what categories were those nominations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and the categories of the nomination of Cleavant Derricks in the year of 1986",
                "query": "SELECT name, category FROM musical where year = 1986 and nominee = \"Cleavant Derricks\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, how many ratings have the same reviewer and director name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "only 1 rating  have the same reviewer and director name",
                "query": "SELECT count(*) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
            },
            {
                "isuser": true,
                "text": "What is the reviewer name associated with that rating?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the reviewer name associated with the rating which has the same reviewer name and director name is James Cameron",
                "query": "SELECT DISTINCT T3.name  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
            },
            {
                "isuser": true,
                "text": "How about the movie title?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the title of the movie associated with the rating which has the same reviewer name and director name is Avatar",
                "query": "SELECT DISTINCT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
            },
            {
                "isuser": true,
                "text": "What about the number of stars it received?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the number of stars of the movie associated with the rating which has the same reviewer name and director name is 5",
                "query": "SELECT DISTINCT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "I want to know the average population of all cities please\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average population of all cities is 350468.22358421184",
                "query": "SELECT avg(Population) FROM city"
            },
            {
                "isuser": true,
                "text": "And which districts have cities with populations greater than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the districts which have cities with populations greater than the average. For example, one of them is Kabol.",
                "query": "SELECT District FROM city WHERE Population  >  (SELECT avg(Population) FROM city)"
            },
            {
                "isuser": true,
                "text": "Within these districts, how many cities does each have with a population greater than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the number of cities in each district whose population is greater than the average population of cities. For example, district Abidjan has only one city with a population greater than the average.",
                "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all nations whose government is US territory?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the nations whose government form is US territory.",
                "query": "SELECT Name FROM country WHERE GovernmentForm  =  \"US Territory\""
            },
            {
                "isuser": true,
                "text": "Hmm, I also want to know their GNP and population.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the GNP and population of nations whose government form is US territory.",
                "query": "SELECT GNP, population FROM country WHERE GovernmentForm  =  \"US Territory\""
            },
            {
                "isuser": true,
                "text": "Please find out the average GNP and total population of those nations.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the average GNP and total population in all nations whose government form is US territory, which are 510.3333333333333 and 329000.",
                "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What are the average amount purchased and value purchased for the supplier who supplies the most products",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average amount purchased and average value purchased for the supplier who supplies the most products are  shown  in  the  table ",
                "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "How about for the supplier who supplies the least products?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I want the average amount purchased and value purchased for the supplier who supplies the least products",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I want the average amount purchased and value purchased for the supplier who supplies the least products",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average amount purchased and average value purchased for the supplier who supplies the least products are shown in the table",
                "query": "SELECT avg(total_amount_purchased) , avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) LIMIT 1)\n\n"
            },
            {
                "isuser": true,
                "text": "What is the supplier id who supplies the least products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  supplier id who supplies the least products  is 3",
                "query": "SELECT distinct supplier_id FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) LIMIT 1)\n\n"
            },
            {
                "isuser": true,
                "text": "What is the total value purchased for supplier id 3",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total value purchased for supplier id 3 is 120280.76",
                "query": "SELECT sum(total_value_purchased) from Product_Suppliers where supplier_id=3\n\n"
            },
            {
                "isuser": true,
                "text": "What is the \"date supplied to\" of supplier id 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the \"date supplied to\" of supplier id 3  are  shown  in the  table ",
                "query": "SELECT \tdate_supplied_to  from Product_Suppliers where supplier_id=3\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of suppliers whose average amount purchased for each product is above 50000 or below 30000 are 1 and 2.",
                "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) > 50000 OR avg(total_amount_purchased) < 30000"
            },
            {
                "isuser": true,
                "text": "Which of those suppliers purchased less than 30000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of suppliers whose average amount purchased for each product is less than 30000 is 1.",
                "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) < 30000"
            },
            {
                "isuser": true,
                "text": "And how much was their average amount purchased for each product?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the average amount purchased for each product. For example, the average of product 3 is 15752.45.",
                "query": "select product_id, avg(total_amount_purchased) from Product_Suppliers group by product_id"
            },
            {
                "isuser": true,
                "text": "What was their most recent date_supplied_to?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most recent date of the supplied to is \"2018-03-25 12:03:33\".",
                "query": "select date_supplied_to from Product_Suppliers order by date_supplied_to desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Tell me the artist id and album id for title Balls to the Wall ?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Tell me the artist id and album id for title Balls to the Wall ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the id for the album titled \"Balls to the Wall\" is 2, and its artist id is 2 too.",
                "query": "SELECT AlbumID, ArtistId FROM ALBUM where Title = 'Balls to the Wall'"
            },
            {
                "isuser": true,
                "text": "k. Who is the composer for For Those About To Rock (We Salute You) ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the composer for the Album titled 'For Those About To Rock We Salute You' is 'Angus Young, Malcolm Young, Brian Johnson'.",
                "query": "SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId where t1.title = 'For Those About To Rock We Salute You'"
            },
            {
                "isuser": true,
                "text": "Which track id's do not have their composer name in the table...",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "k. Who is the composer for Balls to the Wall ?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "k. Who is the composer for Balls to the Wall ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the composer for the Album titled 'Balls to the Wall' is NULL.",
                "query": "SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId where t1.title = 'Balls to the Wall'"
            },
            {
                "isuser": true,
                "text": "Show the album names , ids and the number of tracks for each album.",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the list of the album name, id and the number of tracks for each album.",
                "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the average ram mib size of the chip models that are never used by any phone",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. This is the average ram mib size of chip models that are never used by any phone.",
                "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
            },
            {
                "isuser": true,
                "text": "How many chips is that which are never used by any phone?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 chips never used by any phone.",
                "query": "SELECT count(*) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
            },
            {
                "isuser": true,
                "text": "Give me all their model names and ram mib",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the model names and ram mib of chips never used by any phone.",
                "query": "SELECT Model_name,RAM_MiB FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
            },
            {
                "isuser": true,
                "text": "What is the highest ram mib from those 8, and tell me how many chips which are used by phones have ram mib equal to or greater than that number",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "How many chips used by phones have a ram mib higher or equal to 64",
                "query": ""
            },
            {
                "isuser": true,
                "text": "How many chips used by phones have a ram mib higher or equal to 64",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 4 chips used by phones that have a ram mib higher or equal to 64.",
                "query": "SELECT count(*) FROM chip_model WHERE model_name IN (SELECT chip_model FROM phone) AND RAM_MiB >= 64"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "gymnast",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there! Can you list all of the hometowns listed in this database?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the hometowns are listed in the result table. They are San Domingo, Bonao, Miami, etc.",
                "query": "SELECT DISTINCT Hometown FROM people"
            },
            {
                "isuser": true,
                "text": "Thank you for that information!  Can you filter that list to show just the hometowns for gymnasts whose total points are more than 57.5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The hometowns for gymnasts whose total points are more than 57.5 are Santo Domingo and Bonao",
                "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
            },
            {
                "isuser": true,
                "text": "Thank you! Can you show all of the names of the gymnasts for those hometowns?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the gymnasts whose hometown is Santo Domingo or Bonao are listed in the result table.",
                "query": "SELECT name FROM people WHERE Hometown = \"Santo Domingo\" or Hometown = \"Bonao\""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the artist ids and their volume issues?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are all the pairs of artist ids and their volume issues of all the artists",
                "query": "SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID"
            },
            {
                "isuser": true,
                "text": "Which volumes have more than 2 weeks on top?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are all the information of volumes which have more than 2 weeks on top.",
                "query": "SELECT T2.* FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know the famous titles of the artists associated with volumes with more than 2 weeks on top.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the famous titles of the artists associated with volumes with more than 2 weeks on top. ",
                "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all employee IDs and their corresponding salaries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all employee IDs and their corresponding salaries. For example, employee number 100 has salary 24000.",
                "query": "SELECT employee_id ,  salary FROM employees;"
            },
            {
                "isuser": true,
                "text": "Awesome!  That's great! Can you filter this list to show only the employee IDs and correpsonding salaries that are above the average salary?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all employee IDs who have a salary above the average and their corresponding salaries. For example, employee number 100 has salary 24000, which is above the average.",
                "query": "SELECT employee_id ,   salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees);"
            },
            {
                "isuser": true,
                "text": "Great!  Now can you display this list to include both the first and last name corresponding to each employee ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all employee IDs who have a salary above the average, their first name and last name, and also their corresponding salaries. For example, employee number 100 named Steven King has salary 24000, which is above the average.",
                "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees );"
            },
            {
                "isuser": true,
                "text": "Thank you so much for that! Can you filter this list to show only the rows in which the employee works in a department which has an employee with the letter J in their name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is all the employee who works in a department with any employee with a 'J' in their first name, and also their wage is above the average. For example,  Nancy Greenburg is an employee among the list.",
                "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "inn_1",
        "turns": [
            {
                "isuser": true,
                "text": "which rooms have a king bed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The rooms that have a king bed are shown in the result table. ",
                "query": "SELECT * FROM Rooms WHERE bedtype  =  'King'"
            },
            {
                "isuser": true,
                "text": "what are the decor of those rooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The different decors of the rooms that have a king bed are shown in the result table. ",
                "query": "SELECT distinct decor FROM Rooms WHERE bedtype  =  'King'"
            },
            {
                "isuser": true,
                "text": "show me the names and the decor of the rooms that have a king bed",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names and decor of the rooms that have a king bed are shown in the result table. ",
                "query": "SELECT roomName, decor FROM Rooms WHERE bedtype  =  'King'"
            },
            {
                "isuser": true,
                "text": "show me the price of the rooms also",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names, decor, and baseprices of the rooms that have a king bed are shown in the result table.",
                "query": "SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype  =  'King'"
            },
            {
                "isuser": true,
                "text": "now sort the list by price",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names, decor, and baseprices of the rooms that have a king bed ordered by basePrice are shown in the result table.",
                "query": "SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype  =  'King' order by basePrice"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of the first names of all customers who rented films before '2005-08-23 02:06:01'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the first names of all customers who rented films before '2005-08-23 02:06:01'. For example, one of the first names is MARY.",
                "query": "SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01' )"
            },
            {
                "isuser": true,
                "text": "Thank you!  That's a lot of people! Can you filter the list to show me only the active customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the first names of all active customers who rented films before '2005-08-23 02:06:01'.",
                "query": "SELECT first_name FROM customer WHERE customer_id IN( SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01' ) AND active = 1"
            },
            {
                "isuser": true,
                "text": "Okay.  Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is average and maximum salary of all employees.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average and maximum salary of all employees  are  shown  in  the table\n",
                "query": "SELECT avg(salary) ,  max(salary) FROM Employee"
            },
            {
                "isuser": true,
                "text": "What name has the highest salary?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  name  of  the employee who has the highest salary is  George Wright",
                "query": "SELECT name FROM Employee order by salary desc  limit 1"
            },
            {
                "isuser": true,
                "text": "What is the employee id and salary of George Wright?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  employee id and salary of George Wright are  shown  in the  table",
                "query": "SELECT eid , salary  FROM Employee  where  name=\"George Wright\""
            },
            {
                "isuser": true,
                "text": "What is the name and employee id of the person with the lowest salary ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name and employee id of the person with the lowest salary  are shown  in  the table",
                "query": "SELECT name , eid   FROM Employee  order by  salary limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome  and  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "mountain_photos",
        "turns": [
            {
                "isuser": true,
                "text": "How many different lens are there?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "No, I meant the total number of lenses",
                "query": ""
            },
            {
                "isuser": true,
                "text": "No, I meant the total number of lenses",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count  of  total camera lenses  is 11",
                "query": "SELECT  count(*)  from  camera_lens"
            },
            {
                "isuser": true,
                "text": "Can you please list the ones that contain substring \"Digital\" in their names?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The names of the camera lens that contain substring \"Digital\" in their names are Olympus M.Zuiko Digital ED 45mm f/1.8,\nOlympus M.Zuiko Digital ED 75mm f/1.8",
                "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\""
            },
            {
                "isuser": true,
                "text": "Can you please also include their id?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The names  and  ids of the camera lens that contain substring \"Digital\" in their names are  shown  in  the table ",
                "query": "SELECT name ,id FROM camera_lens WHERE name LIKE \"%Digital%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  goodbye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "network_2",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the person names and their friends?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the  person names and their friends",
                "query": "SELECT name, friend from personFriend"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know which friends are above 40 years old or below 30 years old. ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I want to know the ages of the friends first, please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I want to know the ages of the friends first, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ages of the friends of all the people",
                "query": "SELECT T2.friend, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend"
            },
            {
                "isuser": true,
                "text": "Please tell me the names of the person who has friends with age above 40 and under age 30.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no person who has both friends with age above 40 and friends with age under age 30",
                "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)"
            },
            {
                "isuser": true,
                "text": "How about the names of different persons who have friends with age above 40 and under age 30?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the person who has friend with age above 40 or under age 30",
                "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) union SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cinema",
        "turns": [
            {
                "isuser": true,
                "text": "Is there a film with the word \"Dummy\" in the title?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, there is a film with the word \"Dummy\" in the title.",
                "query": "SELECT * FROM film WHERE title LIKE \"%Dummy%\""
            },
            {
                "isuser": true,
                "text": "Do any of the other films have the word \"Dummy\" in the title?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. No other films have the word \"Dummy\" in the title.",
                "query": "SELECT * FROM film WHERE title LIKE \"%Dummy%\""
            },
            {
                "isuser": true,
                "text": "What are the names of each of the films?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the film names. For example, one of the film names is The Case of the Mystery Weekend.",
                "query": "SELECT Title FROM film"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "find the student id and personal name of the student whose course id is 2",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the student id and personal name of the student whose course id is 2. For example, the student \"Clotilde\" with the id \"11\" choose the course with id \"2\".",
                "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where T1.course_id='2'"
            },
            {
                "isuser": true,
                "text": "show the date of registration for the student id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date of registration for the student id 1 is \"2015-07-22 13:32:35\".",
                "query": "select \tdate_of_registration from students where student_id='1'"
            },
            {
                "isuser": true,
                "text": "show the login name and password for registration id  2",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The login name and password for registration id 2 are \"jgulgowski\" and \"0f37421f02\".",
                "query": "select T1.login_name, T1.password from students AS T1 JOIN Student_Course_Enrolment AS T2 ON T2.student_id=T1.student_id WHERE registration_id=2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the tourist attractions that can be accessed by bus or walk?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the tourist attractions that can be accessed by bus or walk",
                "query": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""
            },
            {
                "isuser": true,
                "text": "What are their opening hours, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and opening hours of the tourist attractions that can be accessed by bus or walk",
                "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""
            },
            {
                "isuser": true,
                "text": "What are the names of the tourist attractions that can be accessed by shuttle?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the tourist attractions that can be accessed by shuttle.",
                "query": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"shuttle\""
            },
            {
                "isuser": true,
                "text": "What are their opening hours?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are their names and corresponding opening hours in the record.",
                "query": "SELECT Name,opening_hours  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"shuttle\""
            },
            {
                "isuser": true,
                "text": "What are the location ids of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are their names and corresponding location ids ",
                "query": "SELECT Name,Location_ID  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"shuttle\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "activity_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of first name, last name, and faculty ID of all faculty?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here are the first name, last name, and faculty ID of all faculty",
                "query": "SELECT Fname, Lname, FacID from Faculty"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to include the activity name associated with each individual faculty member?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are  the first name, last name, faculty ID with the associated activities for all the faculties",
                "query": "SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T3.actid  "
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you filter this list to remove all professors who are associated with either Canoeing or Kayaking?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first name, last name, faculty ID with the associated activities for all the faculties except for the professors who are associated with either Canoeing or Kayaking",
                "query": "SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T3.actid WHERE T3.activity_name != 'Canoeing' OR T3.activity_name != 'Kayaking'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "body_builder",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all body builder names and their associated birth dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the body builder names and their associated birth dates are listed in the result table. For example, name Jack Campell's birth date is january 1, 1992",
                "query": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id"
            },
            {
                "isuser": true,
                "text": "Could you filter this list to show only the rows which are associated with body builders whose birthday value contains the work \"January\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure! The body builder name and the associated birth date of the body builder whose birthday value contains the word \"January\" are Jack Campbell and January 1, 1992 respectively.",
                "query": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";\n\n"
            },
            {
                "isuser": true,
                "text": "Great! Can you tell me where Jack Campbells birthplace was?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The birth place of name Jack Campbell is Port Huron, Michigan",
                "query": "SELECT birth_place FROM people WHERE name = \"Jack Campbell\"\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "hi, can you tell me the first and last name for the player with player ID: gomezle01?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the first and last name for the player with player ID gomezle01 is Lefty Gomez",
                "query": "SELECT name_first ,  name_last FROM player where player_id = \"gomezle01\""
            },
            {
                "isuser": true,
                "text": "and who is the player represented by player ID: ferreri01?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": " yes. What is the player's first and last name for player ID: ferreri01?",
                "query": ""
            },
            {
                "isuser": true,
                "text": " yes. What is the player's first and last name for player ID: ferreri01?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The player's first and last name for player ID ferreri01 is Rick Ferrell",
                "query": "SELECT name_first ,  name_last FROM player where player_id = \"ferreri01\""
            },
            {
                "isuser": true,
                "text": "in addition to Rick Ferrell, Lefty Gomez, and player ID gehrilo01, can you tell me the first and last names of the other players participating in 1998 all star game?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last name  of the other players participating in 1998 all star game except Rick Ferrell, Lefty Gomez, and player ID gehrilo01",
                "query": "SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and name_first != \"Rick\" or name_last != \"Ferrell\" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and name_first != \"Lefty\" or name_last != \"Gomez\" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and T1.player_id != \"gehrilo01\""
            },
            {
                "isuser": true,
                "text": "great. what is the player with player ID gehrilo01 first and last name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the player with id gehrilo01 is Lou\tGehrig.",
                "query": "SELECT name_first , name_last FROM player  where player_id = \"gehrilo01\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please let me know the genre ID for Latin and Pop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the genre Id's for Latin and Pop.",
                "query": "SELECT GenreId FROM Genre WHERE Name=\"Latin\" OR Name=\"Pop\""
            },
            {
                "isuser": true,
                "text": "That was very quick, thank you very much :) Then, could you please let me know the average duration (milliseconds) of Latin and Pop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome. This is the average duration of tracks of Latin and Pop genres.",
                "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name=\"Latin\" OR T1.Name=\"Pop\""
            },
            {
                "isuser": true,
                "text": "That's an amazingly precise number, thank you again. Then what about the average unit price of Latin and Pop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the average unit price of Latin and Pop Genres.",
                "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average salary for the physics department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average salary for the physics department is 114576.9",
                "query": "SELECT avg(salary) FROM instructor WHERE  dept_name  =  'Physics'"
            },
            {
                "isuser": true,
                "text": "How many instructors in the physics department make less than that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of instructors in the physics department that make less than the average salary for the physics department is 1.",
                "query": "Select count(*) from instructor where dept_name = 'Physics' and salary < (SELECT avg(salary) FROM instructor WHERE  dept_name  =  'Physics')"
            },
            {
                "isuser": true,
                "text": "What is the name and salary of that instructor?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of that instructor in the physics department who makes less than the average salary for the physics department is Shuming and his salary is 108011.81.",
                "query": "Select name, salary from instructor where dept_name = 'Physics' and salary < (SELECT avg(salary) FROM instructor WHERE  dept_name  =  'Physics')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome, goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_1",
        "turns": [
            {
                "isuser": true,
                "text": "what players have a overall rating greater than 80?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of players who have an overall rating greater than 80.",
                "query": "SELECT * FROM Player_Attributes WHERE overall_rating  >  80"
            },
            {
                "isuser": true,
                "text": "of those players how many are right-footed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of players who have an overall rating over 80 and prefer the right foot is 5955.",
                "query": "SELECT count(*) FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot = 'right'"
            },
            {
                "isuser": true,
                "text": "of the players with an overall rating greater than 80 how many are left-footed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of players with an overall rating greater than 80 who prefer the left foot is 1606.",
                "query": "SELECT count(*) FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot = 'left'"
            },
            {
                "isuser": true,
                "text": "of the players with an overall rating greater than 80 how many are right-footed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of players with an overall rating greater than 80 who prefer the right foot is 5955.",
                "query": "SELECT count(*) FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot = 'right'"
            },
            {
                "isuser": true,
                "text": "could add the right-footed and left-footed players that have an overall rating greater than 80 together?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the number of players with an overall rating greater than 80 in terms of their preferred_foot.",
                "query": "SELECT preferred_foot , count(*) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot\n"
            },
            {
                "isuser": true,
                "text": "thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name of Physicians who are affiliate with surgery or Psychiatry department.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of Physicians who are affiliated to surgery or Psychiatry department.",
                "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'"
            },
            {
                "isuser": true,
                "text": "What is the Physician name of the following Employee ID?  tell me the SSN.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Sorry for my mistake. \nWhat is the Physician name of the following Employee ID 2? tell me the SSN.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Sorry for my mistake. \nWhat is the Physician name of the following Employee ID 2? tell me the SSN.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name and SSn of the physician with an employee id of 2.",
                "query": "select name,SSN from physician where employeeid = 2"
            },
            {
                "isuser": true,
                "text": "What is the Physician name of the following Position Staff Internist ? tell me the SSN, and Employee ID,",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here are the name, SSN, and employee ID of the physician with a position of Staff Internist.",
                "query": "select name,SSN,employeeid from physician where position = \"Staff Internist\""
            },
            {
                "isuser": true,
                "text": "which department has most number of head? tell me department ID,",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "3 is the id of the department which has the most head.",
                "query": "select departmentid from department order by head desc limit 1"
            },
            {
                "isuser": true,
                "text": "which department has least number of head? tell me department ID,And department name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id and name of the department with least number of head.",
                "query": "select departmentid,name from department order by head limit 1"
            },
            {
                "isuser": true,
                "text": "good, thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "election",
        "turns": [
            {
                "isuser": true,
                "text": "Which delegates are from countries with population smaller than 100000?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of delegates who are from countries with a population smaller than 100000. For example, one of the delegates is Bates, Gail H. Gail H. Bates",
                "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
            },
            {
                "isuser": true,
                "text": "Can you give the name of the countries with population smaller than 100000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here is the result table of the names of the countries with a population smaller than 100000. For example, one of the countries is Howard.",
                "query": "SELECT County_name FROM county WHERE Population  <  100000"
            },
            {
                "isuser": true,
                "text": "What is the number of counties with population greater than 100000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the number of counties with a population greater than 100000 is 0.",
                "query": "SELECT COUNT(County_name) FROM county WHERE Population  >  100000"
            },
            {
                "isuser": true,
                "text": "Can you give me the name of the counties with population between 50000 and 100000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the counties with a population between 50000 and 100000 ",
                "query": "SELECT County_name FROM county WHERE Population  <  100000 AND Population  >  50000"
            },
            {
                "isuser": true,
                "text": "What are the committee names for the counties with population smaller than 100000?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the committee names of the countries with a population smaller than 100000. For example, one of the committee names is Appropriations. ",
                "query": "SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
            },
            {
                "isuser": true,
                "text": "What are the committee names for the counties with population between 50000-100000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the committee names for the counties with a population between 50000 and 100000. For example, one of the committee names is Environmental Matters.",
                "query": "SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000 AND T1.Population  >  50000 "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show the artist name of f id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The artist name of the one whose file id is \"2\" is \"Prity\".",
                "query": "SELECT \tartist_name FROM files WHERE f_id='2'"
            },
            {
                "isuser": true,
                "text": "Can you show the ids of songs that are available in either mp4 format or have resolution above 720?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the ids of songs that are available in either mp4 format or have resolution above 720. ",
                "query": "SELECT f_id FROM files WHERE formats = \"mp4\" UNION SELECT f_id FROM song WHERE resolution > 720"
            },
            {
                "isuser": true,
                "text": "Can you the artist name of Song Tum robe nirobe?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The artist name of song \"Tum robe nirobe\" is \"Shrikanta\".",
                "query": "select artist_name from song where song_name='Tumi robe nirobe'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome\uff01",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the year that offers the largest number of courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the year that offers the largest number of courses is 2002.",
                "query": "SELECT YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What semester in that year offers the largest number of courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the semester in year of 2002 that offers the largest number of courses is Fall. ",
                "query": "SELECT semester FROM SECTION where year = 2002 GROUP BY semester ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Are there any courses at that time offered in the Chandler building?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. There is all the info of the course section offered in the fall semester of the year 2002 and in the Chandler building.",
                "query": "SELECT * FROM SECTION where semester = 'Fall' and YEAR = 2002 and building = 'Chandler'"
            },
            {
                "isuser": true,
                "text": "What about the Gates building?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is no course section offered in the fall semester of the year 2002 and in the Gates building.",
                "query": "SELECT * FROM SECTION where semester = 'Fall' and YEAR = 2002 and building = 'Gates'"
            },
            {
                "isuser": true,
                "text": "What about in the Whitman building?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is no course section offered in the fall semester of the year 2002 and in the Whitman building.",
                "query": "SELECT * FROM SECTION where semester = 'Fall' and YEAR = 2002 and building = 'Whitman'"
            },
            {
                "isuser": true,
                "text": "What buildings have course sections offered then?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "They are buildings that have course sections offered in the fall semester of the year 2002.",
                "query": "SELECT building FROM SECTION where semester = 'Fall' and YEAR = 2002"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the college whos size is bigger than 10000?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here're the  name of the college whose enrollment size is bigger than 10000",
                "query": "SELECT cName  FROM College WHERE enr  >  10000 "
            },
            {
                "isuser": true,
                "text": "Which of those colleges are located in LA?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here's the information of the college whose size is bigger than 10000 and is located in LA",
                "query": "SELECT * FROM College WHERE enr  >  10000 AND state = \"LA\""
            },
            {
                "isuser": true,
                "text": "What is the enrollment of that college?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the enrollment of the college whose size is bigger than 10000 and is located in LA is 18000",
                "query": "SELECT enr FROM College WHERE enr  >  10000 AND state = \"LA\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show the product name and total order quantity of each product please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product name and total order quantity of each product are listed.",
                "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
            },
            {
                "isuser": true,
                "text": "Could you add the product type codes to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product type code, product name and total order quantity of each product are listed.",
                "query": "SELECT T1.product_name ,  sum(T2.order_quantity),T1.product_type_code FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
            },
            {
                "isuser": true,
                "text": "What is the average product price of all the products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average product price of all the products is 28612946.784182724.",
                "query": "SELECT avg(product_price) from products"
            },
            {
                "isuser": true,
                "text": "Can you list the product names of all products with prices below the average product price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product names of all products whose prices are below the average product price are listed.",
                "query": "select product_name from products where product_price <(SELECT avg(product_price) from products)"
            },
            {
                "isuser": true,
                "text": "The product ids of all products whose prices are above the average product price are listed.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product ids of all products whose prices are above the average product price are listed.",
                "query": "select product_name from products where product_price>(SELECT avg(product_price) from products)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_2",
        "turns": [
            {
                "isuser": true,
                "text": "hey",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "Find all airlines that have fewer than 200 flights.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Find all airlines that have fewer than 200 flights.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The airlines that have fewer than 200 flights are shown in the result table. ",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
            },
            {
                "isuser": true,
                "text": "which ones are London bound?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "what country is their destination of the first three?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "what country is their destination of the first three?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The destination airport of the first three of the airlines that have fewer than 200 flights are show in the result table. The country is not available. ",
                "query": "SELECT T1.Airline, T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 limit 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the drivers' last names who had 11 pit stops and participated in more than 5 race results?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the last names of the drivers who had 11 pit stops and participated in more than 5 race results.",
                "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
            },
            {
                "isuser": true,
                "text": "What are the drivers' last names who had 11 pit stops?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the last names of the drivers who had 11 pit stops.",
                "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11"
            },
            {
                "isuser": true,
                "text": "Did any drivers have more than 10 pit stops?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, there are no drivers that have more than 10 pit stops.",
                "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  10"
            },
            {
                "isuser": true,
                "text": "Did any drivers participate in more than 5 races?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes! Here are the last names and ids for the drivers who participated in more than 5 races.",
                "query": " SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5"
            },
            {
                "isuser": true,
                "text": "What is the average amount of pit stops those drivers had? I have an internal server error on that table, so I don't know if that's the right name for it.",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What are the race ids that the driver with the surname Nakajima was in?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are the race ids that the driver with the surname Nakajima was in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the race ids that the driver with the surname Nakajima was in",
                "query": " SELECT T2.raceID FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid where T1.surname=\"Nakajima\""
            },
            {
                "isuser": true,
                "text": "How many wins does that driver have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no wins for the driver with the surname Nakajima.",
                "query": " SELECT count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid where T1.surname=\"Nakajima\" and T2.rank=1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Have a great day!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Have a great day!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You too. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "twitter_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which users had some tweets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the name of the users who had some tweets.",
                "query": "SELECT name FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"
            },
            {
                "isuser": true,
                "text": "Can you find me the average number of followers for these users?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average number of followers for the users who had some tweets is 33203172.0",
                "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"
            },
            {
                "isuser": true,
                "text": "How about the minimum and maximum number of tweets for these users?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the number of tweets for each user who had some tweets.  As you can see, the maximum number of tweets for these users is 2 and the minimum is 1.",
                "query": "select count(*) from tweets group by uid"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "debate",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the people who have been on the affirmative side of debates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the people who have been on the affirmative side of debates are listed.",
                "query": "SELECT T2.Name  FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"
            },
            {
                "isuser": true,
                "text": "What are their party affiliations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The party affiliations of the people who have  been on the affirmative side of debates are listed.",
                "query": "SELECT T2.Party FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"
            },
            {
                "isuser": true,
                "text": "How many debates did they win total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of wins achieved by the people who were on the affirmative side of debates is 2.",
                "query": "SELECT count(*) FROM debate_people WHERE If_Affirmative_Win = 'T'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "Show me all the claims that are documents.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the claim header ID's that have type code Document.",
                "query": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.document_type_code = \"Document\""
            },
            {
                "isuser": true,
                "text": "Which of these claims is most recently created?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The claim header ID with type Document that was most recently created is 69.",
                "query": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.document_type_code = \"Document\" ORDER BY created_date LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the amount claimed for this claim?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the amounts claimed by this the most recently created claim.",
                "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Please give me the sum of these amounts.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the total amount claimed in the most recently created document.",
                "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufactory_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all companies whose revenue is smaller than the revenue of all companies based in Austin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hewlett-Packard and Winchester 's revenue are the names of companies whose revenue is smaller than the revenue of all companies based in Austin",
                "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
            },
            {
                "isuser": true,
                "text": "What are the companies' revenues whose revenue is smaller than the revenue of all companies based in Austin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The revenues of companies whose revenue is smaller than the revenue of companies based in Austin are 50.0 or 30.0",
                "query": "SELECT Revenue FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
            },
            {
                "isuser": true,
                "text": "What are the revenues of the companies whose revenue is smaller than the revenue of all companies based in Austin?",
                "type": ""
            },
            {
                "isuser": false,
                "text": "v2/manufactory_1/query_feedback/U0VMRUNUIG5hbWUgRlJPTSBtYW51ZmFjdHVyZXJzIFdIRVJFIHJldmVudWUgIDwgIChTRUxFQ1QgbWluKHJldmVudWUpIEZST00gbWFudWZhY3R1cmVycyBXSEVSRSBoZWFkcXVhcnRlciAgPSAgJ0F1c3Rpbicp/692SBkMHuSeWvjL4C/",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the numerical value of those two companies' revenues?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the revenus of Hewlett-Packard is 50.0 and the revenue of  Winchester is 30.0",
                "query": "SELECT name,Revenue FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
            },
            {
                "isuser": true,
                "text": "What are the names of all companies whose revenue is larger than the revenue of all companies based in Austin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of all companies whose revenue is larger than the revenue of all comanies based in austin are Sony, Iomega and Fujitsu.",
                "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
            },
            {
                "isuser": true,
                "text": "What are the numerical values of their revenues, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and revenue is Sony with 120.0, Iomega with 200.0 and Fujitsu with 130.0",
                "query": "SELECT name,revenue FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "musical",
        "turns": [
            {
                "isuser": true,
                "text": "Which nominees have nominated musicals for \"Tony Award\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Bob Fosse and Cleavant Derricks are the distinct nominees that have been nominated musicals for \"Tony Award\".",
                "query": "SELECT distinct Nominee FROM musical WHERE Award  =  \"Tony Award\""
            },
            {
                "isuser": true,
                "text": "Which nominees have nominated musicals for \"Drama Desk Award\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Bob Fosse and Cleavant Derricks are the distinct nominees that have nominated musicals for \"Drama Desk Award\".",
                "query": "SELECT distinct Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""
            },
            {
                "isuser": true,
                "text": "Which of these have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Bob Fosse and Cleavant Derricks are the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\"",
                "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which film actors and actresses played a role in more than 30 films? List their first and last names.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of the actors and actresses who played a role in more than 30 films. For example, Karl Berry is one them who played a role in more than 30 films",
                "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count(*) > 30"
            },
            {
                "isuser": true,
                "text": "What about just actors?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Who had the most films?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Who had the most films?",
                "type": "INFORM_SQL:"
            },
            {
                "isuser": false,
                "text": "It's Penelope Guiness who has played the most movies.",
                "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id limit 1"
            },
            {
                "isuser": true,
                "text": "How many films were all people with names that start with N in?",
                "type": "NOT_RELATED"
            },
            {
                "isuser": false,
                "text": "I'm sorry. But here is no info about film names.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "How many films was actor id 9 in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 25 movies that actor id 9 in.",
                "query": "select count(*) from film_actor where actor_id='9'"
            },
            {
                "isuser": true,
                "text": "What's that person's name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "It's Joe Swank whose actor id  is 9.",
                "query": "select first_name,last_name from actor where actor_id='9'"
            },
            {
                "isuser": true,
                "text": "Is there anyone else with the first name Joe?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is nobody whose first name is \"Joe\" except \"Joe Swank\".",
                "query": "select first_name, last_name from actor where first_name='JOE' and last_name != 'SWANK'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "architecture",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please show me the names of all male architects by their names lexicographically?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the names of all male architects by their names lexicographically.",
                "query": "SELECT name FROM architect WHERE gender = 'male' ORDER BY name"
            },
            {
                "isuser": true,
                "text": "Can you please show me all female architects by their names lexicographically?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of all female architects order by their name lexicographically.",
                "query": "SELECT name FROM architect WHERE gender = 'male' ORDER BY name"
            },
            {
                "isuser": true,
                "text": "can you please show me all the female architects?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows all the names of the female architects.",
                "query": "SELECT name FROM architect WHERE gender = 'male' "
            },
            {
                "isuser": true,
                "text": "List the name, nationality and id of all male architects ordered by their names lexicographically?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the results of  the name, nationality and id of all male architects ordered by their names lexicographically..",
                "query": "SELECT name , nationality , id FROM architect WHERE gender = 'male' ORDER BY name\n"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Display the first name of all employees. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the first names of all employees.",
                "query": "SELECT first_name FROM employees "
            },
            {
                "isuser": true,
                "text": "Show the first name of all employees and their salary. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first name and salary of all employees. For example, Steven has a salary of 24000.",
                "query": "SELECT first_name, salary FROM employees "
            },
            {
                "isuser": true,
                "text": "Show the first name of all employees and their salary for employees whose first name does not contain the letter M. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first name of all employees and their salary for employees whose first name does not contain the letter M. For example, Steven has a salary of 24000.",
                "query": "SELECT first_name,  salary FROM employees WHERE first_name NOT LIKE '%M%'"
            },
            {
                "isuser": true,
                "text": "Show the first name of all employees and list their salary in descending order for employees whose first name does not contain the letter M. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first name of all employees and their salary in descending for employees whose first name does not contain the letter M. For example, Steven has a salary of 24000.",
                "query": "SELECT first_name,  salary FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC"
            },
            {
                "isuser": true,
                "text": "Out of these employees what is the phone number for the employee with the highest salary.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The phone number for the employee whose first name does not contain the letter M with the highest salary is 515.123.4567.",
                "query": "SELECT phone_number FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the email for the employee whose first name does not contain the letter M with the highest salary. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The email for the employee whose first name does not contain the letter M with the highest salary is SKING.",
                "query": "SELECT email FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Show me id of all departments.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the ids of all the departments.",
                "query": "SELECT distinct department_id FROM staff_department_assignments "
            },
            {
                "isuser": true,
                "text": "show me the number of staff of all departments.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the number of staffs in each department. For example, number of staff of department 1 is 2.",
                "query": "SELECT department_id,count(staff_id) FROM staff_department_assignments GROUP BY department_id ORDER BY count(*)"
            },
            {
                "isuser": true,
                "text": "show me the department with lowest staff",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The department with lowest staff is department with the department id '1'.",
                "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks.",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_orders",
        "turns": [
            {
                "isuser": true,
                "text": "Can I receive a list of all orders?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, from that list can I have it sorted by order ID?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, from that list can I have it sorted by order ID?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "My apologies, I meant can I have list of orders which includes the product ids from the orders placed?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "My apologies, I meant can I have list of orders which includes the product ids from the orders placed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "OK ,The orders which includes the product ids from the orders placed are shown  in  the table ",
                "query": "SELECT T1.order_id ,T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id "
            },
            {
                "isuser": true,
                "text": "Can I also have the dates of the order included in the table?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The ids, product ids, order placed dates of the orders are shown in the table.",
                "query": "SELECT T1.order_id ,T2.product_id,T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id "
            },
            {
                "isuser": true,
                "text": "Is it possible to narrow the results?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "Yes, can I narrow the table based on the date order was placed?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, can I narrow the table based on the date order was placed?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "No. Is it possible to only receive results from orders placed from 1975-01-01 to 1976-01-01?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "No. Is it possible to only receive results from orders placed from 1975-01-01 to 1976-01-01?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids, product ids,order placed dates of the orders placed from 1975-01-01 to 1976-01-01 are shown  in the table",
                "query": "SELECT T1.order_id ,T2.product_id,T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the names of top 3 departments?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Top three departments that provide the largest amount of courses?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Top three departments that provide the largest amount of courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Top three departments that provide the largest amount of courses are Cybernetics, Finance, and Psychology.",
                "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Find the names of top 3 departments that provide the lowest amount of courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Top three departments that provide the lowest amount of courses are Marketing, Pol. Sci., Statistics.",
                "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*)  LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What is the average amount of courses that provided by top three departments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average amount of courses that provided by top three departments IS 15.666666666666666",
                "query": "select avg(amount) from (SELECT count(*) as amount  FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "yoU ARE WELCOME",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "party_host",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the hosts that held parties with more than 20 hosts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the host names for parties with number of hosts greater than 20 is Ed Davis",
                "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
            },
            {
                "isuser": true,
                "text": "What are the names of the hosts that held parties with the least number of hosts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the hosts that held parties with the least number of hosts is Kornel David",
                "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID order by T3.Number_of_hosts asc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the location of the party with the oldest host?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the location of the party with the oldest host is Heineken Music Hall Amsterdam",
                "query": "SELECT T3.location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID order by T2.age desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entrepreneur",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please let me know the date of birth of the investors Simon Woodroffe and Peter Jones?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the date of birth of the investors Simon Woodroffe and Peter Jones.",
                "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
            },
            {
                "isuser": true,
                "text": "That was really quick, thank you. Then can you please tell me how much money they requested, respectively?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "lol. You got me. The table shows the money requested of the investors Simon Woodroffe and Peter Jones.",
                "query": "SELECT Money_Requested from entrepreneur where \tInvestor = 'Simon Woodroffe' or Investor = 'Peter Jones'"
            },
            {
                "isuser": true,
                "text": "haha I am sorry, Thanks again for your answer! :) Then could you please let me know which entrepreneur requested for the biggest amount of money?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This one is easy. The table shows the entrepreneur id that requested the greatest amount of money.",
                "query": "SELECT Entrepreneur_ID from entrepreneur order by \tMoney_Requested desc limit 1"
            },
            {
                "isuser": true,
                "text": "Glad that I didn't trouble you again :) Thank you, then could you please let me know the investor's name and company for the ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the entrepreneur ID, investor, and company of the entrepreneur who requested the greatest amount of money.",
                "query": "SELECT Entrepreneur_ID,Investor,Company from entrepreneur order by \tMoney_Requested desc limit 1"
            },
            {
                "isuser": true,
                "text": "That's great! Then this will be my last question, could you please let me know the height and weight of Duncan Bannatyne?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Oops, I didn't expect that. It's fine, Thanks! I appreciate your help, hope you have a great day ahead :)",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oops, I didn't expect that. It's fine, Thanks! I appreciate your help, hope you have a great day ahead :)",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "You are very very very nice! Have a good day~ Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "List grade points by letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the grade points by letter grade. For example, A has grade point 4.0.",
                "query": "SELECT gradepoint,lettergrade FROM GRADECONVERSION"
            },
            {
                "isuser": true,
                "text": "List max of each grade for all letter grades?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The max of grade points for all letter grades is 4.0",
                "query": "SELECT max(gradepoint) FROM GRADECONVERSION"
            },
            {
                "isuser": true,
                "text": "The max for each letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the max grade points for each letter grade. For example, A has a max grade point of 4.0",
                "query": "SELECT LETTERGRADE, max(gradepoint) FROM GRADECONVERSION GROUP BY LETTERGRADE"
            },
            {
                "isuser": true,
                "text": "List the min grade point for each letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of min grade point for each letter grade. For example, A has a min grade point of 4.0",
                "query": "SELECT min(gradepoint), lettergrade FROM GRADECONVERSION group by lettergrade"
            },
            {
                "isuser": true,
                "text": "Find the min grade point for all letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the min grade point for all letter grade is 0.0",
                "query": "SELECT min(gradepoint) FROM GRADECONVERSION "
            },
            {
                "isuser": true,
                "text": "Find the max and min grade point for all letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the max and min grade point for all letter grade are 4.0 and 0.0",
                "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"
            },
            {
                "isuser": true,
                "text": "What of the median?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What of the mean?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What of the mean?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "the mean for all grade points is 2.2846153846153845",
                "query": "SELECT avg(gradepoint)  FROM GRADECONVERSION"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufactory_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all companies based in Austin and their revenues?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The company based in Austin and their revenues is Creative Labs and its revenue is 100.0",
                "query": "select Name,Revenue from Manufacturers where Headquarter='Austin'"
            },
            {
                "isuser": true,
                "text": "Can you list all companies whose revenue is less than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the companies whose revenue is less than 100 are Hewlett-Packard and Winchester.",
                "query": "select Name from Manufacturers where Revenue<100"
            },
            {
                "isuser": true,
                "text": "Thanks! What is the respective revenues of Hewlett-Packard and Winchester?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "As you can see,  the respective revenues of Hewlett-Packard and Winchester are 50.0 and 30.0",
                "query": "select Name,Revenue from Manufacturers where Revenue<100"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "what are the name of the museums?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the museums are in the result table. ",
                "query": "SELECT name from museum"
            },
            {
                "isuser": true,
                "text": "which museums are visited the most?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the museum that was visited the most is in the result table.",
                "query": "SELECT t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "can i have the id and name of the museum?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The id and name of the museum that was visited the most are in the result table. ",
                "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_4",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the airport in Mount Hagen city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the airport in the city named Mount Hagen is Mount Hagen Kagamuga Airport.",
                "query": "SELECT name from airports where city ='Mount Hagen'"
            },
            {
                "isuser": true,
                "text": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of routes with destination airport in Italy operated by the airline with name 'American Airlines' is 13.",
                "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'"
            },
            {
                "isuser": true,
                "text": "How many active airlines are on the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of active airlines on the list is 1255.",
                "query": "SELECT count(*) from airlines where active = 'Y'"
            },
            {
                "isuser": true,
                "text": "What is the elevation of Madang Airport airport?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The elevation of the airport named Madang Airport is 20.",
                "query": "SELECT elevation from airports where name = 'Madang Airport'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "Oh, sorry. I meant to ask what dorm does the student with the last name of Smith live in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dorms that  has student with the last name of Smith living in",
                "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'"
            },
            {
                "isuser": true,
                "text": "What are the amenities of those dorms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the amenities of the dorm that  has student with the last name of Smith living in",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith'"
            },
            {
                "isuser": true,
                "text": "What are the amenities of the dorm that the student with the last name of Jones lives in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the amenities of the dorm that the student with the last name of Jones lives in",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Jones'"
            },
            {
                "isuser": true,
                "text": "What are the amenities of the dorm that the oldest student lives in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the amenities of the dorm that student with the largest age lives in",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.age = (select max(age) from student)"
            },
            {
                "isuser": true,
                "text": "What are the amenities of the dorm that has the most female students living in it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the amenities of the dorm that has the most female students living in it",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T1.dormid = (select T1.dormid from dorm as T1 join lives_in as T4 on T1.dormid = T4.dormid join student as T5 on T4.stuid = T5.stuid where T5.sex = \"F\" group by T1.dormid order by count(*) desc limit 1)"
            },
            {
                "isuser": true,
                "text": "What are the amenities of the dorm that has the smallest student capacity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the amenities of the dorm that has the smallest student capacity",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid jOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid where T1.student_capacity = (select min(student_capacity) from dorm)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Are there parts that have faults?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here are the number of parts that have some faults.",
                "query": "SELECT count(T1.part_id) FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  0"
            },
            {
                "isuser": true,
                "text": "How many parts have more than 2 faults?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of parts that have more than 2 faults is 2",
                "query": "SELECT COUNT(*) FROM (SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2)"
            },
            {
                "isuser": true,
                "text": "What are the parts with more than 2 faults?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the names of the parts with more than 2 faults",
                "query": "SELECT T1.part_name  FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "What are the name's and id's of the parts with more than 2 faults?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and IDs of the parts with more than 2 faults. For example, one of them is top with part id 1.",
                "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please find all the procedures that cost more than 1000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of information about the procedures that cost more than 1000. For example, one of the procedures is Reverse Rhinopodoplasty.",
                "query": "SELECT * FROM procedures WHERE cost  >  1000 "
            },
            {
                "isuser": true,
                "text": "Could you please find all the procedure that Jon Wen was trained in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of information about all the procedure that Jon Wen was trained in. For example, one of the procedures is Reverse Rhinopodoplasty.",
                "query": "SELECT * FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
            },
            {
                "isuser": true,
                "text": "What are the names of the procedures that cost more than 1000 and are procedures John Wen was trained in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the procedures that cost more than 1000 and John Wen was trained in. For example, one of the procedures is Complete Walletectomy.",
                "query": "SELECT name FROM procedures WHERE cost  >  1000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
            },
            {
                "isuser": true,
                "text": "When do all of John Wen's certifications expire?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all John Wen's certifications expiration dates. For example, one of the dates is 2008-12-31.",
                "query": "SELECT T2.CertificationExpires  FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tvshow",
        "turns": [
            {
                "isuser": true,
                "text": "Which titles were directed by Ben Jones or Brandon Vietti?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the titles or cartoons directed by Ben Jones or Brandon Vietti.",
                "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"
            },
            {
                "isuser": true,
                "text": "What are their original air dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the titles of cartoons directed by Ben Jones or Brandon Vietti and their original air dates.",
                "query": "SELECT Title, original_air_date FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"
            },
            {
                "isuser": true,
                "text": "Who are the writers of these cartoons?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the titles of cartoons directed by Ben Jones or Brandon Vietti and their writers.",
                "query": "SELECT Title, written_by FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "What is the apartment code of the apartment with the most number of rooms?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the apartment code of the apartment with the most number of rooms is flat",
                "query": "select apt_type_code from Apartments order by room_count desc limit 1"
            },
            {
                "isuser": true,
                "text": "What about the code with the least rooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the apartment code of the apartment with the least number of rooms is flat",
                "query": "select apt_type_code from Apartments order by room_count  limit 1"
            },
            {
                "isuser": true,
                "text": "What is the building ID  with  apartment Suite 645?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the  building ID of the apartment with the apartment number Suite 645 is 808",
                "query": "select \tbuilding_id from Apartments where apt_number = 'Suite 645'"
            },
            {
                "isuser": true,
                "text": "Thank you!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the number of students whose city code is NYC, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students whose city code is NYC is 0.",
                "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" "
            },
            {
                "isuser": true,
                "text": "What is the number of students who have class senator votes in the spring election cycle?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students who have class senator votes in the spring election cycle is 5.",
                "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE  T2.Election_Cycle  =  \"Spring\""
            },
            {
                "isuser": true,
                "text": "What are the first names and last names of those students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name and last name of the students who have class senator votes in the spring election cycle are listed.",
                "query": "SELECT distinct T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE  T2.Election_Cycle  =  \"Spring\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What are the ids of 3 players that won the most awards?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the ids of 3 players that won the most awards.",
                "query": "SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "Can you show me the names and ids for this list?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The result shows the full names and ids of 3 players that won the most awards.",
                "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "What are the city, state and country for these players?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the birth cities, states and countries of 3 players that won the most awards.",
                "query": "SELECT T1.birth_city , T1.birth_state , T1.birth_country FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "Can you also show me the birth dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the birth year, month and day of 3 players that won the most awards. ",
                "query": "SELECT T1.birth_year, T1.birth_month, T1.birth_day FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the color code that has a color description of 'white'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course, the color code that has a color description of 'white' is '2'.",
                "query": "select color_code from Ref_Colors where color_description='white'"
            },
            {
                "isuser": true,
                "text": "Can you list all product ids and their associated product category codes that have a color code value of 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows all product ids and their associated product category codes that have a color code value of 2. ",
                "query": "select product_id,product_category_code from Products where color_code='2'"
            },
            {
                "isuser": true,
                "text": "Sure, can you add to the table the unit of measure values for the product category codes of Spices and Herbs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The unit of measure values for the product category codes of \"Spices\" and \"Herbs\" are \"Handful\" and \"Weight - pound,kilo\".",
                "query": "select unit_of_measure from Ref_Product_Categories where \nproduct_category_code='Herbs' or product_category_code='Spices'"
            },
            {
                "isuser": true,
                "text": "Please delete that information and only show the product name for the product with a product id of 2.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product name for the product with a product id of 2 is 'peper'.",
                "query": "select product_name from Products where product_id='2'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "how many apartments have bookings with status code \"confirmed\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 7 apartments that have bookings with status code \"confirmed\".",
                "query": "SELECT count(*) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
            },
            {
                "isuser": true,
                "text": "show me the apartment type for the 7 apartments",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all apartment types for those 7 apartments that have bookings with status code \"Confirmed\".",
                "query": "SELECT t2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
            },
            {
                "isuser": true,
                "text": "what are the apartment numbers for those 7?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all apartment numbers for those 7 apartments that have bookings with status code \"Confirmed\".",
                "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "csu_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the degrees conferred in \"San Francisco State University\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the degrees conferred in \"San Francisco State University\".",
                "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"San Francisco State University\""
            },
            {
                "isuser": true,
                "text": "What are the degrees conferred in \"San Francisco State University\" in 2001?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The degrees 4469 is conferred in \"San Francisco State University\" in 2001.",
                "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"San Francisco State University\" AND t2.year = 2001"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "list all department code and department name\n ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of department codes and names. For example, the department code ACCT corresponds with the Accounting department.",
                "query": "SELECT dept_code, dept_name FROM department"
            },
            {
                "isuser": true,
                "text": "show me all the course codes where department name is \"CIS\"\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sorry, I meant to show me all the course codes where department code is \"CIS\"",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Sorry, I meant to show me all the course codes where department code is \"CIS\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of course codes offered by the department with code \"CIS\".",
                "query": "SELECT t2.crs_code FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE t1.dept_code  =  \"CIS\""
            },
            {
                "isuser": true,
                "text": "can I get a count of these courses where department code is \"CIS\"?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of course codes offered by the department with code \"CIS\" is 4.",
                "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE t1.dept_code  =  \"CIS\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "can you show me the name and salary of all instructors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the names and salaries of each professor. For example, McKinnon has a salary of 94333.99.",
                "query": "SELECT name, salary FROM instructor"
            },
            {
                "isuser": true,
                "text": "How much does the biology professor make?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table with the names and salaries of each professor in the Biology department. For example, Queiroz has a salary of 45538.32.",
                "query": "SELECT name, salary FROM instructor WHERE dept_name = \"Biology\""
            },
            {
                "isuser": true,
                "text": "How many professors make more than Valtchev?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors that have a salary greater than the salary of instructor Valtchev is 27.",
                "query": "SELECT count(*) FROM instructor WHERE salary > (SELECT salary FROM instructor WHERE name = \"Valtchev\")"
            },
            {
                "isuser": true,
                "text": "Can you tell me the names of the professors that make more than Valtchev?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of names of instructors that have a higher salary than Valtchev.",
                "query": "SELECT name FROM instructor WHERE salary > (SELECT salary FROM instructor WHERE name = \"Valtchev\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "How long is the total lesson time took by customer with first name Rylan and last name Goodwin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "11 is the total lesson time took by the customer with first name Rylan and last name Goodwin",
                "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
            },
            {
                "isuser": true,
                "text": "What's the status of the lesson by the customer with first name Rylan and last name Goodwin",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the status codes of lessons taken by the customer with first name Rylan and last name Goodwin",
                "query": "SELECT T1.lesson_status_code FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
            },
            {
                "isuser": true,
                "text": "What's the customer id of the customer with first name Rylan and last name Goodwin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "10 is the customer id of the customer with first name Rylan and last name Goodwin",
                "query": "SELECT customer_id FROM customers WHERE first_name = \"Rylan\" AND last_name = \"Goodwin\";"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all the colleges and their enrollments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are all the colleges and their enrollments",
                "query": "SELECT cName, enr  FROM college "
            },
            {
                "isuser": true,
                "text": "Which college has the largest enrollment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college with the name OU has the largest enrollment",
                "query": "SELECT cname FROM college WHERE enr = (SELECT max(enr) FROM college)"
            },
            {
                "isuser": true,
                "text": "Hmm, I also want to know which colleges have enrollments that are less than the largest size.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the colleges that have enrollments that are less than the largest size.",
                "query": "SELECT cname FROM college WHERE enr < (SELECT max(enr) FROM college)"
            },
            {
                "isuser": true,
                "text": "Can you list the states of those colleges?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of name and state of the colleges that have enrollments that are less than the largest size",
                "query": "SELECT cname, state FROM college WHERE enr < (SELECT max(enr) FROM college)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_4",
        "turns": [
            {
                "isuser": true,
                "text": "what are the busiest airport in china?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "busiest source airport",
                "query": ""
            },
            {
                "isuser": true,
                "text": "busiest source airport",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Beijing Capital International Airport is the busiest source airport that runs the most number of routes in China",
                "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is the source airport id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The source airport id of the busiest source airport that runs the most number of routes in China is 3364",
                "query": "SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is the airline for source airport?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the distinct airlines that depart from the busiest source airport that runs the most number of routes in China",
                "query": "select distinct airline from routes where src_apid = (SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "document_management",
        "turns": [
            {
                "isuser": true,
                "text": "Show the Document code for document type code Book?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the document code for document type code \"Book\".",
                "query": "SELECT document_code FROM documents WHERE document_type_code='Book'"
            },
            {
                "isuser": true,
                "text": "Show the name of the document that has been accessed the greatest number of times?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the document that has been accessed the greatest number of times is \"Relationships between History and Arts\".",
                "query": "SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show the name of the documents and the count of how many times each has been accessed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the name of the documents and the count of how many times each has been accessed.",
                "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the states that have some college students playing in the mid position but not the goalie position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The state that have some college students playing in the mid position but not the goalie position is listed here. The only one is OK.",
                "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"
            },
            {
                "isuser": true,
                "text": "What about states that have some college students playing in the goalie position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states with some college students playing in the goalie position.",
                "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"
            },
            {
                "isuser": true,
                "text": "What about in the striker position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the state list with some college students playing in the striker position. FL is the only one.",
                "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"
            },
            {
                "isuser": true,
                "text": "What is the college name for that one?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college name where some college students playing in the striker position is FSU.",
                "query": "SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"
            },
            {
                "isuser": true,
                "text": "Was there a decision on that position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the decision on the striker position is listed.",
                "query": "SELECT decision from Tryout WHERE pPos  =  'striker'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average savings account balance?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average savings account balance is 166751716.5.",
                "query": "SELECT avg(balance) FROM savings"
            },
            {
                "isuser": true,
                "text": "Which accounts with checking accounts have savings account balances higher than the average savings balance? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Wang's account has a checking account and has a savings account balance higher than the average savings balance.",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM savings))"
            },
            {
                "isuser": true,
                "text": "What is its checking account balance? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The checking balance of the account with a checking account whose savings balance is higher than the average savings balance is 2000.0.",
                "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT avg(balance) FROM savings))"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "How much is the salary for employee id 163?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Employee with id 163 has salary 9500.",
                "query": "SELECT salary FROM employees WHERE employee_id = 163"
            },
            {
                "isuser": true,
                "text": "What is employee id 163 full name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee with id 163 has first name Danielle and last name Greene.",
                "query": "SELECT first_name, last_name FROM employees WHERE employee_id = 163"
            },
            {
                "isuser": true,
                "text": "Show me the full name for the employees that get more salary then employee 163?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of full names ( first names and last names ) for those employees who get more salary than the employee whose id is 163",
                "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
            },
            {
                "isuser": true,
                "text": "What department does employee 163 work under?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee with id 163 works under department with id 80.",
                "query": "SELECT department_id FROM employees WHERE employee_id = 163"
            },
            {
                "isuser": true,
                "text": "How many employee's work for employee's 163 department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 34 employees who work for the same department as the employee with id 163.",
                "query": "SELECT count(*) from employees where department_id = (select department_id from employees where employee_id = 163)"
            },
            {
                "isuser": true,
                "text": "Who is the head of this department?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of ids for managers who work for the same department as the employee with id 163. ",
                "query": "SELECT distinct manager_id from employees where department_id = (select department_id from employees where employee_id = 163)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "university_basketball",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there! Can you tell me how many school have an affiliation type that is not public?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 school has an affiliation type that is not public",
                "query": "SELECT COUNT(*) FROM university WHERE affiliation != 'Public'"
            },
            {
                "isuser": true,
                "text": "Can you please tell me the name of that school and the enrollment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The school and enrollment of the university has an affiliation type that is not public are Lebanon Valley College and 2100.0",
                "query": "SELECT school, enrollment FROM university WHERE affiliation != 'Public'"
            },
            {
                "isuser": true,
                "text": "What year was that school founded?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The university that has an affiliation type that is not public was founded in 1866.0",
                "query": "SELECT founded FROM university WHERE affiliation != 'Public'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Drama_Workshop_Groups",
        "turns": [
            {
                "isuser": true,
                "text": "What is the address for FJA Filming?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the address of the store with name FJA Filming.",
                "query": "SELECT T1.* FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
            },
            {
                "isuser": true,
                "text": "What state is that in?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The state where the store with name FJA Filming is in is Nebraska.",
                "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
            },
            {
                "isuser": true,
                "text": "Are there any other businesses in Nebraska?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is just a store named \"FJA Filming\".",
                "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Nebraska\" "
            },
            {
                "isuser": true,
                "text": "What is the city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The store named FJA Filming is in the city New Lonzoville.",
                "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
            },
            {
                "isuser": true,
                "text": "Last what is the phone number?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The phone number of the store named FJA Filming is +65(1)3590790358.",
                "query": "SELECT Store_Phone FROM Stores WHERE Store_Name  =  \"FJA Filming\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the visitor who visited a museum opened before 2009 and a museum opened after 2011 is Fernando Gago.",
                "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011"
            },
            {
                "isuser": true,
                "text": "What museum did he visit before 2009?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the museum that the visitor who visited a museum opened before 2009 and a museum opened after 2011 and also visited before 2009 is Plaza Museum.",
                "query": "SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name = (SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011)"
            },
            {
                "isuser": true,
                "text": "What is the ticket price at the Plaza Museum?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The price per ticket at Plaza Museum is 16.006999999999998.",
                "query": "SELECT t2.total_spent / t2.Num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.name = \"Plaza Museum\""
            },
            {
                "isuser": true,
                "text": "How many people visited the plaza museum in 2009?\n",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the average number of tickets sold at the Plaza Museum?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the average number of tickets sold at the Plaza Museum?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is Fernando Gago's membership level?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is Fernando Gago's membership level?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The level of membership of Fernando Gago is 6.",
                "query": "SELECT level_of_membership FROM visitor WHERE name = \"Fernando Gago\""
            },
            {
                "isuser": true,
                "text": "How old is Fernando Gago?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The age of the visitor Fernando Gago is 36.",
                "query": "SELECT age FROM visitor WHERE name = \"Fernando Gago\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "What are the booking start and end dates of the apartments with more than 2 bedrooms ?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the booking start and end dates of the apartments with more than 2 bedrooms. For example, one of them is 2016-09-26 17:13:49 and 2016-09-26 17:13:49.",
                "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
            },
            {
                "isuser": true,
                "text": "What are the dates for apartment 585 ?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "the booking start and end dates for apartment 585 are 2017-04-07 04:53:27 and 2017-04-07 04:53:27.",
                "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE t2.apt_number = \"Apt. 585\""
            },
            {
                "isuser": true,
                "text": "Okay, what are the dates for the apartment in building 225 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table for the booking start and end dates for the apartment in building with id 225. For example, one of them is 2016-09-26 17:13:49 and 2016-09-26 17:13:49.",
                "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE t2.building_id = \"225\""
            },
            {
                "isuser": true,
                "text": "What are the apartment numbers of all apartments with more than 2 bedrooms ?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the apartment numbers of all apartments with more than 2 bedrooms. For example, one of them is Apt. 859.",
                "query": "SELECT  T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "can you tell me all the enzymes that work in the cytosol?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of all enzymes that work in the cytosol.",
                "query": "SELECT name from enzyme where location = \"Cytosol\""
            },
            {
                "isuser": true,
                "text": "which of those enzymes is in the medicine with the name Aripiprazole?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows names of all enzymes that work in the cytosol and is in the medicine with the name Aripiprazole.",
                "query": "SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T2.name  =  'Aripiprazole' and T3.location = \"Cytosol\""
            },
            {
                "isuser": true,
                "text": "are there any other enzymes that are not in the cytosol that have the name Aripiprazole?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows names of all enzymes that work in locations other than the cytosol and is in the medicine with the name Aripiprazole.",
                "query": "SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T2.name  =  'Aripiprazole' and T3.location != \"Cytosol\""
            },
            {
                "isuser": true,
                "text": "and can you tell me what the interaction type is for ALA synthase?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "inhibitor is the interaction type is for ALA synthase",
                "query": "SELECT distinct(T1.interaction_type) FROM medicine_enzyme_interaction AS T1  JOIN enzyme AS T2 ON T1.enzyme_id  =  T2.id WHERE T2.name  =  'ALA synthase' "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "theme_gallery",
        "turns": [
            {
                "isuser": true,
                "text": "How many exhibitions have an attendance of more than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of exhibitions that have an attendance of more than 100 is 13.",
                "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 "
            },
            {
                "isuser": true,
                "text": "How many exhibitions have a ticket price below 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of exhibitions that have a ticket price below 10 is 0.",
                "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE  T2.ticket_price  <  10"
            },
            {
                "isuser": true,
                "text": "What are the dates of the exhibitions who have an attendance of more than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table shows the dates of the exhibitions that have an attendance of more than 100 is shown.",
                "query": "SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 "
            },
            {
                "isuser": true,
                "text": "What was the theme of the party held in the latest year?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The theme of the party held in the latest year was Summer.",
                "query": "SELECT theme FROM  exhibition order by Year desc limit 1"
            },
            {
                "isuser": true,
                "text": "What was the ticket price of that party?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ticket price of the party held in the latest year is 9.95.",
                "query": "SELECT Ticket_Price FROM  exhibition order by Year desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_bus",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the driver ids and whether they drive full time or not? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the driver ids and whether or not they drive full time.",
                "query": "SELECT Driver_ID, If_full_time FROM school_bus"
            },
            {
                "isuser": true,
                "text": "Hmm, I also want to know their years working.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the driver ids, years working and whether or not they drive full time.",
                "query": "SELECT Driver_ID, Years_Working, If_full_time FROM school_bus"
            },
            {
                "isuser": true,
                "text": "Can you tell me the name of the driver who is driving the school bus with the longest working history?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Henry Genga is the name of the driver who is driving the school bus with the longest working history.",
                "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id ORDER BY years_working DESC LIMIT 1\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you please list all of the first and last names for all of the students in the database?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " here is  all of the first and last names for all of the students in the database",
                "query": "SELECT LastName\t,FirstName from list"
            },
            {
                "isuser": true,
                "text": "Excellent!  Could you filter that list to show only the students who were taught by the teacher with the last name Moyer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the students who were taught by the teacher with the last name Moyer",
                "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.lastname  =  \"MOYER\""
            },
            {
                "isuser": true,
                "text": "Great!  Could you update this list to include the grade of each student?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the First Name, Last Name and Grade of the students who were taught by the teacher with the last name Moyer",
                "query": "SELECT T1.firstname ,  T1.lastname,Grade FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.lastname  =  \"MOYER\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the highest dose prescribed for any medication?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What information do you want for the prescriptions? Do you want all information or just the dose amount?",
                "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "I wanted the name of the physician that prescribed the highest dose, but I believe you've already provided that information?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes the name of the physician that prescribed the highest dose is John Dorian.",
                "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Show me all the employees in the same department as Clara.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is all the information of all the employees in the same department as the employee with a first name Clara.",
                "query": "SELECT * FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"
            },
            {
                "isuser": true,
                "text": "Can you show me their hire dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of hire dates of the employees in the same department as the employee with a first name Clara. For example, one of them is 1987-08-01",
                "query": "SELECT hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"
            },
            {
                "isuser": true,
                "text": "What is their average salary?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average salary of the employees in the same department as the employee with a first name Clara is 8955.882352941177.",
                "query": "SELECT  avg(SALARY) FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name of instructors who are advisors of students from the Math department, and sort the results by students' total credit.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table, which is ordered by students' total credit, that shows the name of instructors who are advisors of the students from the Math department.",
                "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred"
            },
            {
                "isuser": true,
                "text": "Find name of students in the Math department",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the name of students in the Math department.",
                "query": "select name from student where dept_name='Math'"
            },
            {
                "isuser": true,
                "text": "Give me IDs of instructors in the Marketing department",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows ids of instructors in the Marketing department.",
                "query": "select ID from instructor where dept_name='Marketing'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the top 3 artists with the largest number of songs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the top 3 artists with the largest number of songs",
                "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name  GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What about the top 3 artists with the largest number of songs whose language is Bangla?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the top 3 artists with the largest number of songs whose language is Bangla",
                "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3\n\n"
            },
            {
                "isuser": true,
                "text": "What are their preferred genres?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the preferred genre of the top 3 artists with the largest number of songs whose language is Bangla ",
                "query": "SELECT T1.preferred_genre FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3\n\n"
            },
            {
                "isuser": true,
                "text": "Could you list the names of all artists that prefer the genre folk and speak the language Bangla?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Farida is the only artist that prefer the genre folk and speak the language Bangla",
                "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"bangla\" AND T1.preferred_genre = \"folk\"\n\n"
            },
            {
                "isuser": true,
                "text": "How about the names of all artists that prefer the genre folk?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Farida is the only artist that prefer the genre folk",
                "query": "SELECT artist_name FROM artist  WHERE preferred_genre = \"folk\"\n\n"
            },
            {
                "isuser": true,
                "text": "How about the names of all artists that prefer the genre tagore?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Shrikanta is the only artist that prefer the genre tagore",
                "query": "SELECT artist_name FROM artist  WHERE preferred_genre = \"tagore\"\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What are the staff names with job title code Sales Person?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The results table shows the staff names of the sales persons. ",
                "query": "SELECT T1.staff_name  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" "
            },
            {
                "isuser": true,
                "text": "What are their genders?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and genders of the Sales Persons.",
                "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
            },
            {
                "isuser": true,
                "text": "What are the staff names and genders for people with job title code Sales Person?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the staff names and genders of the people with job title code Sales Person. ",
                "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" "
            },
            {
                "isuser": true,
                "text": "How about with job title code Clerical Staff?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table shows the staff names and genders of the people with job title code Clerical Staff. ",
                "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Clerical Staff\""
            },
            {
                "isuser": true,
                "text": "Which of the people with job title code Sales Person are not Clerical Staff?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This result table shows the staff_name, and staff_gender entries of those with the job title code Sales Person but not Clerical Staff. ",
                "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Sales Person\" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Clerical Staff\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you provide me with a list of all customer names and addresses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the all customer name and address ",
                "query": "select customer_name,customer_address from Customers;"
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show me the rows that correspond to the customers who have both new and pending orders?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here are the customer name and address which correspond to the customers who have both new and pending orders",
                "query": "SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = \"New\" INTERSECT SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = \"Pending\""
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you tell me how many customer customers have an order status code of \"Completed\" or \"PartFilled\"?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here are 5 customers who have an order status code of \"Completed\" or \"PartFilled\"",
                "query": "select count(order_id) from Customer_Orders where order_status_code = 'Completed' or order_status_code ='PartFilled'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "What is the organisation ID of the organisation with grant amount of 4094.542??",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The organisation ID of the organisation with grant amount of 4094.542 is 10.",
                "query": "SELECT organisation_id from grants where grant_amount = 4094.542"
            },
            {
                "isuser": true,
                "text": "What is its grant start date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grant start date of the grant with an amount of 4094.542 is 2016-11-20 00:18:51",
                "query": "SELECT grant_start_date from grants where grant_amount = 4094.542"
            },
            {
                "isuser": true,
                "text": "What about its end date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grant end date of the grant with an amount of 4094.542 is 2004-10-24 09:09:39",
                "query": "SELECT grant_end_date from grants where grant_amount = 4094.542"
            },
            {
                "isuser": true,
                "text": "What is the grant amount of the organisation with the id 14?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grant amounts of the grant with an organisation id of 14 are shown in the table.",
                "query": "SELECT grant_amount from grants where organisation_id = 14"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "which dno has no stuid associated with it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all DNO with no stuid associated with it.",
                "query": "SELECT DNO from Department where DNO not in (select DNO from Minor_in)"
            },
            {
                "isuser": true,
                "text": "what are the dname's of those DNO's?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The departments' name of departments with no stuid associated with it are shown in the table.",
                "query": "SELECT DName from Department where DNO not in (select DNO from Minor_in)"
            },
            {
                "isuser": true,
                "text": "sort the department names alphabetically",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The departments' name of departments with no stuid associated with it ordered alphabetically are shown in the table. ",
                "query": "SELECT DName from Department where DNO not in (select DNO from Minor_in) order by DName "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_management",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  How are you?  Can you please provide me with a list of all department IDs, department names, and their respective years of creation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hello! Here are all the department IDs, department names, and their respective years of creation",
                "query": "SELECT department_id, name, creation FROM department "
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you filter this list to include only the rows that contain the most common (most frequently occurring) year of creation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the department IDs, department names, and their respective years of creation of the departments with the most common year of creation",
                "query": "select Department_ID, Name, Creation from department where creation = (SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Perfect! Can you tell me what is the total combined budget of these two departments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total combined budget of these two departments, which have most the most common creation year, is 21.06",
                "query": "select sum(Budget_in_Billions) from department where creation = (SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " The distinct names of all wines that have prices higher than some wines from John Anthony winery  are shown   in  the  table ",
                "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
            },
            {
                "isuser": true,
                "text": "Find the price of all wines that have prices higher than some wines from John Anthony winery.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The prices of all wines that have prices higher than some wines from John Anthony winery  is shown in the table.",
                "query": "SELECT Price FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
            },
            {
                "isuser": true,
                "text": "Find the score of all wines that have prices higher than some wines from John Anthony winery.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The score of all wines that have prices higher than some wines from John Anthony winery  are    in the table",
                "query": "SELECT Score  FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all document descriptions that contain the word \"Initial\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all document descriptions that contain the word \"initial\".",
                "query": "SELECT document_description FROM Document_Types WHERE document_description LIKE 'Initial%'"
            },
            {
                "isuser": true,
                "text": "Can you list the document type code associated with that document description?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "APP is the code of the document type that associated with a description that contains the word \"initial\".",
                "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
            },
            {
                "isuser": true,
                "text": "Are there any other document type codes associated with a description that contains the word \"initial\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "APP is the only code of the document type here that associated with a description that contains the word \"initial\".",
                "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "decoration_competition",
        "turns": [
            {
                "isuser": true,
                "text": "show the total distinct leader names of the college associated with the members of all country",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the the total distinct leader names of the college associated with the members of all country. ",
                "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID"
            },
            {
                "isuser": true,
                "text": "find the college id for the college location Ottawa",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college id for the college located in Ottawa is \"1\".",
                "query": "select college_id from college where college_location='Ottawa'"
            },
            {
                "isuser": true,
                "text": "find the member name and college location for the member id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the member id 1 is \"Jack Nicklaus\",and the college location for him is \"Ottawa\".",
                "query": "select T2.Name, T1.College_Location from college AS T1 JOIN member AS T2 ON T2.College_ID=T1.College_ID WHERE Member_ID=1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufacturer",
        "turns": [
            {
                "isuser": true,
                "text": "what are the companies that produce the most expensive furniture",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes, the names of the company that produces the most expensive furniture",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes, the names of the company that produces the most expensive furniture",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Tomorrow is the name of the company that produces the most expensive furniture.",
                "query": "SELECT t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is the id of this name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "7 is the id of the company that produces the most expensive furniture.",
                "query": "SELECT t1.Manufacturer_ID FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "list both the id and number of shops for the company that produces the most expensive furniture in the same table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id and number of shops for the company that produces the most expensive furniture in the same table.",
                "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "What are the issue date of 34th England Academy Prize?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the issue date of a volume presented in the music festival of 34th England Academy Prize is '27 December 1986 - 10 January'.",
                "query": "SELECT T2.Issue_Date FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Music_Festival = \"34th England Academy Prize\""
            },
            {
                "isuser": true,
                "text": "What are the music festivals of Everybody Have Fun Tonight song? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the music festivals of Everybody Have Fun Tonight song is 34th Japan Academy Prize.",
                "query": "SELECT T1.Music_Festival FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Song = \" Everybody Have Fun Tonight \""
            },
            {
                "isuser": true,
                "text": "Show the songs that have result \"nominated\" at music festivals.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of songs that have a \"nominated\" result at music festivals.",
                "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you please list the different interaction types for me?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hello, the different interaction types are shown in the result table.",
                "query": "SELECT DISTINCT interaction_type from medicine_enzyme_interaction"
            },
            {
                "isuser": true,
                "text": "Great!  Can you provide me with the name, location, and product for each enzyme that is associated with the \"inhibitor\" interaction type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name, location, and product for each enzyme that is associated with the \"inhibitor\" interaction type is shown in the result table. ",
                "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to show the chromosome associated with each enzyme on this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the name, location, product, and chromosome type for each enzyme that is associated with the \"inhibitor\" interaction type is shown in the result table. ",
                "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product, T1.chromosome FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "culture_company",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please show me the publishers with a book published in 1989?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the publishers with a book published in 1989",
                "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989"
            },
            {
                "isuser": true,
                "text": "Could you please show me the publishers with a book published in 1990?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the publishers with a book published in 1990",
                "query": "SELECT publisher FROM book_club WHERE YEAR  =  1990"
            },
            {
                "isuser": true,
                "text": "Which publishers published books in 1989 and 1990?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the publishers with a book published in 1989 and a book in 1990",
                "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many students are living in the dorms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 34 total students living in dorms.",
                "query": "SELECT count(*) FROM Student"
            },
            {
                "isuser": true,
                "text": "Do they all have all amenities?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "These are all dorms with amenities. There are total 7 dorms, so all dorms have an amenity. However, not all dorms have all amenities.",
                "query": "SELECT DISTINCT dormid FROM Has_amenity "
            },
            {
                "isuser": true,
                "text": "How many dorms do not have a TV lounge?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the dorms that have a TV lounge. There is total 7 dorms, so there are 4 dorms with no TV lounge.",
                "query": "SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge'"
            },
            {
                "isuser": true,
                "text": "How many students are in those four dorms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are total 9 students in the dorms which don\u2019t have TV lounge ",
                "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
            },
            {
                "isuser": true,
                "text": "What are the first names of those nine students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first names of the students in the dorms which don\u2019t have TV lounge ",
                "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
            },
            {
                "isuser": true,
                "text": "What are their ages?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the ages of the students in the dorms which don\u2019t have TV lounge ",
                "query": "SELECT T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_mission",
        "turns": [
            {
                "isuser": true,
                "text": "List the name of ships that are not involved in any mission",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the ship that is not involved in any mission is Author.\n",
                "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
            },
            {
                "isuser": true,
                "text": "Which ships have been decommissioned?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ship ID of the ships that have been decommissioned are 1,2,6,7.\n",
                "query": "SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%'"
            },
            {
                "isuser": true,
                "text": "Give me the names of ships that have been decommissioned",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the ships that have been decommissioned are Corbridge, Farringford, Ariadne, Appam",
                "query": "Select Name from ship \nwhere Ship_ID in (\nSELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "gymnast",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all of the hometowns?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all the hometowns. For example, one of them is Santo Domingo. ",
                "query": "SELECT Hometown FROM people "
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you filter this list ot show only the hometowns that have both people older than 23 years of age and people younger than 20 years of age?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Santo Domingo is the hometown that has both people older than 23 years of age and people younger than 20 years of age.",
                "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you tell me how many people in total have Santo Domingo as their Hometown?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of people who have Santo Domingo as their Hometown is 5.",
                "query": "SELECT count(*) FROM people WHERE Hometown = \"Santo Domingo\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the first and last names of all employees who work in any department located in London please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last names of the employee who works in any department located in London are Susan and Mavris.",
                "query": "SELECT first_name ,  last_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
            },
            {
                "isuser": true,
                "text": "What are the first and last names of the person with the second lowest salary?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last names of the person with the second lowest salary are Steven Markle and Hazel Philtanker.",
                "query": "SELECT first_name ,  last_name,salary  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id order by salary"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is title of album which track Balls to the Wall belong to?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the album which track Balls to the Wall belongs to is For Those About To Rock We Salute You.",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"
            },
            {
                "isuser": true,
                "text": "Hmmm. What is title of album which track Fast as a Shark belong to?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the album which track named Fast As a Shark belongs to is For Those About To Rock We Salute You. ",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Fast As a Shark\";"
            },
            {
                "isuser": true,
                "text": "And who is the composer for the album?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The composers for the album to which track named Fast As a Shark belongs are F. Baltes, S. Kaufman, U. Dirkscneider & W. Hoffman.",
                "query": "SELECT T2.composer FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Fast As a Shark\";"
            },
            {
                "isuser": true,
                "text": "What is title of album which track For Those About To Rock (We Salute You) belong to?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of album which track For Those About To Rock (We Salute You) belongs to is For Those About To Rock We Salute You. ",
                "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"For Those About To Rock (We Salute You)\";"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "product_catalog",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of catalog with number 8",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of catalog entries with level number 8.",
                "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\""
            },
            {
                "isuser": true,
                "text": "Could you please show me their attribute ID",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the attribute ids of catalog entries with level number 8.",
                "query": "SELECT t2.attribute_id FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\""
            },
            {
                "isuser": true,
                "text": "What about their attribute value",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the attribute values of catalog entries with level number 8.",
                "query": "SELECT t2.attribute_value FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\""
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "when did the transactions that were less that 3000 occur?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the date of the transactions that were less than 3000.",
                "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000"
            },
            {
                "isuser": true,
                "text": "which transactions were sales?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the the transaction ids of those with the transaction type code \"SALE\".",
                "query": "select transaction_id from Transactions where transaction_type_code='SALE'"
            },
            {
                "isuser": true,
                "text": "ok i see the transactions of the sales. and then what are the ones that were purchases?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the the transaction ids of those with the transaction type code \"PUR\".",
                "query": "select transaction_id from Transactions where transaction_type_code='PUR'"
            },
            {
                "isuser": true,
                "text": "what investors were involved with those transactions that were under 3000?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the investors that were involved with the transactions that were under 3000.",
                "query": "SELECT T2.investor_id FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "How many faculty members are in building Barton?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of faculty members in building Barton is 20",
                "query": "SELECT count(*) FROM FACULTY WHERE Building  =  \"Barton\" "
            },
            {
                "isuser": true,
                "text": "Please list the faculty members in building Barton.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all the information about faculty members in building Barton.",
                "query": "SELECT * FROM FACULTY WHERE Building  =  \"Barton\" "
            },
            {
                "isuser": true,
                "text": "Can you please get just their last names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the last names of the faculty members in building Barton. For example, one of them is Runolfsson.",
                "query": "SELECT lname FROM FACULTY WHERE Building  =  \"Barton\" "
            },
            {
                "isuser": true,
                "text": "Of the faculty members in building Barton, how many are in each rank?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of rank and the number of faculty members in each rank of building Barton. For example, there are 4 Associate Professors.",
                "query": "SELECT rank, count(*) FROM FACULTY WHERE Building  =  \"Barton\" group by rank"
            },
            {
                "isuser": true,
                "text": "Can you please list the last names of the faculty in Barton one more time, in alphabetical order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the last names of the faculty in Barton order by their last names alphabetically. For example, the first one is Andreou.",
                "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "gas_company",
        "turns": [
            {
                "isuser": true,
                "text": "Hi can you show me all the headquarters of a company in backing industry?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Sorry, yes banking!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Sorry, yes banking!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows all the headquarters of the companies in the banking industry.",
                "query": "SELECT headquarters FROM company WHERE main_industry = 'Banking'"
            },
            {
                "isuser": true,
                "text": "Thank you! Can you now tell me the all the headquarters of a company in Oil and gas?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course, here is the result table that shows all the headquarters of the companies in the oil and gas industry.",
                "query": "SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'"
            },
            {
                "isuser": true,
                "text": "Great, what about all the headquarters with both a company in oil and gas and a company in banking?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that show all headquarters with both companies in banking industry and companies in oil and gas.",
                "query": "SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_policies",
        "turns": [
            {
                "isuser": true,
                "text": "What date was the claim made?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the dates when the claims were made is shown.",
                "query": "SELECT Date_Claim_Made FROM Claims "
            },
            {
                "isuser": true,
                "text": "Looking at the claim for 2018-06-14 what date was it settled?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date when the claim for 2018-06-14 was settled was 2017-12-20.",
                "query": "SELECT Date_Claim_Settled FROM Claims  where Date_Claim_Made='2018-06-14'"
            },
            {
                "isuser": true,
                "text": "Which of the claims had only one settlement?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "There is no claim which had only one settlement.",
                "query": "SELECT Claim_ID from claims where Amount_Settled = 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Do you mean the ids of the claims that had only one settlement?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is is the number of patients who are not using Procrastin-X?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 patients who are not using the medication of Procrastin-X",
                "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
            },
            {
                "isuser": true,
                "text": "What are their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of patients who are not using the medication of Procrastin-X",
                "query": "SELECT name FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
            },
            {
                "isuser": true,
                "text": "And what is their address? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the addresses of patients who are not using the medication of Procrastin-X ",
                "query": "SELECT address FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "loan_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all of the customers with a credit score below 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about customers with a credit score below 100.",
                "query": "select * from customer where credit_score < 100"
            },
            {
                "isuser": true,
                "text": "Can you provide me with a list of all of the loans that both Mary and Jack received?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of all loans that both Mary and Jack received.",
                "query": "select t2.loan_type from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where t1.cust_name = \"Mary\" intersect select t4.loan_type from customer as t3 join loan as t4 on t3.cust_id = t4.cust_id where t3.cust_name = \"Jack\" "
            },
            {
                "isuser": true,
                "text": "Can you show me which bank branch provided the highest number of loans to customers with credit scores below 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "downtown is the name of the bank that provided the greatest total amount of loans to customers with credit score is less than 100.",
                "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thank. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "station_weather",
        "turns": [
            {
                "isuser": true,
                "text": "I need to know which train route passes through the most stations, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The train \"Ananthapuri Express\" passes through the most stations.",
                "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many stations does this train run through?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The train that passes through the most stations passes through 3 train stations.",
                "query": "SELECT count(*) FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the names of those stations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the ids of the train station that the train that passes through the most stations passes through. They are 3,7 and 8.",
                "query": "SELECT t2.station_id FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "That's great - finally, can you please tell me the number of the Ananthapuri Express train?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The numbers of the train \"Ananthapuri Express\" are \"16724\" and \"16723\".",
                "query": "select train_number from train where name='Ananthapuri Express'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "swimming",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the names of all the swimmers who have won more than once?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Oussama Mellouli and Craig Stevens are the swimmers who have won more than once.",
                "query": "SELECT t1.name  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What are their nationalities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The nationalities of the swimmers who have won more than once are Tunisia and Australia correspondingly.",
                "query": "SELECT t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Can you list the names and nationalities of the swimmers who have never won?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of names and nationalities of the swimmers who have never won.",
                "query": "SELECT t1.name, t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' except SELECT t1.name, t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "What is the status code of the customer with the last name Kohler or first name Marina?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the status codes of the customer with the last name Kohler or first name Marina",
                "query": "SELECT customer_status_code  FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
            },
            {
                "isuser": true,
                "text": "What are the names of each of those codes?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the mobile phone number of the customer with the last name Kohler or first name Marina?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the mobile phone number of the customer with the last name Kohler or first name Marina?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the phone numbers of the customer with the last name Kohler or first name Marina ",
                "query": "SELECT phone_number  FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
            },
            {
                "isuser": true,
                "text": "How about their email addresses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are email addresses of the customer with the last name Kohler or first name Marina",
                "query": "SELECT email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_mission",
        "turns": [
            {
                "isuser": true,
                "text": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000 is \"Battle ship\".",
                "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000"
            },
            {
                "isuser": true,
                "text": "Show the types of ships with tonnage between 3000 and 5000.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The types of ships with tonnage between 3000 and 5000 are \"Cargo ship\" and \"Battle ship\".",
                "query": "SELECT distinct TYPE FROM ship WHERE Tonnage > 3000 and Tonnage<5000"
            },
            {
                "isuser": true,
                "text": "What is the nationality of the ship with maximum tonnage?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The nationality of the ship with maximum tonnage is \"United Kingdom\".",
                "query": "SELECT Nationality FROM ship order by Tonnage desc limit 1"
            },
            {
                "isuser": true,
                "text": "Can you give me the nationality of the ship with minimum tonnage.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The nationality of the ship with minimum tonnage is \"United States\".",
                "query": "SELECT Nationality FROM ship order by Tonnage limit 1"
            },
            {
                "isuser": true,
                "text": "What is the maximum and the minimum tonnage for a cargo ship?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the maximum and the minimum tonnage for a cargo ship. The maximum is 5816 and the minimum is 3035.",
                "query": "SELECT \tmax(Tonnage),min(Tonnage) FROM ship WHERE \tType='Cargo ship'"
            },
            {
                "isuser": true,
                "text": "Hmmm. Can you also give me the maximum and the minimum tonnage for a battle ship?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the maximum and the minimum tonnage for a battle ship. The maximum is 7781 and the minimum is 3146.",
                "query": "SELECT \tmax(Tonnage),min(Tonnage) FROM ship WHERE \tType='Battle ship'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "shop_membership",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the branch with the greatest amount of memberships that were registered in the year 2016?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the branch with the greatest amount of memberships that were registered in the year 2016 is Alexandre",
                "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the year that branch opened?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the branch with the greatest amount of memberships that were registered in the year 2016 is opened in the year of 2001",
                "query": "SELECT T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Can you list the name and membership amount of the branch that had the least amount of memberships that were opened in the year 2017?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the name and membership amount of the branch that had the least amount of memberships that were opened in the year 2017",
                "query": "SELECT name, membership_amount FROM branch where membership_amount = (select min(membership_amount) from branch where open_year like \"%2017%\")"
            },
            {
                "isuser": true,
                "text": "Can you list the name and opening year of the branch that opened the earliest?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the name and opening year of the branch that opened the earliest",
                "query": "SELECT name, open_year FROM branch where open_year = (select min(open_year) from branch)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the results of music festivals and the number of music festivals that have had each, ordered by this count",
                "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you provide me with the country and state province county information for the staff member named Janessa Sawayn?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, that is correct!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, that is correct!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The staff member with first name Janessa and last name Sawayn corresponds to country USA and state province county Connecticut.",
                "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
            },
            {
                "isuser": true,
                "text": "Great!  Can you tell me how many other staff also have \"Connecticut\" as their state province county?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 other staff besides the previous subject having \"Connecticut\" as their state province county.",
                "query": "SELECT count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE state_province_county = 'Connecticut'"
            },
            {
                "isuser": true,
                "text": "Can you please list the fist name and last name of these two other staff?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The two other staff that have \"Connecticut\" as their state province county have names Jedidiah Herzog and Ludie Kuphal.",
                "query": "SELECT first_name, last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE state_province_county = 'Connecticut'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "match_season",
        "turns": [
            {
                "isuser": true,
                "text": "What colleges do the players play for?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I'm sorry, do you mean you wanna see the whole collages' names?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the all of the names of collages.",
                "query": "SELECT distinct College FROM match_season "
            },
            {
                "isuser": true,
                "text": "Thank you. And what are the names of the players who play for those schools?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the players who play for those schools.",
                "query": "SELECT Player FROM match_season "
            },
            {
                "isuser": true,
                "text": "Thank you. Which players play midfielder?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the whole player names who play the midfielder. For example, the Steve Ralston Category:Articles with hCards is playing midfielder.",
                "query": "SELECT Player FROM match_season WHERE Position='Midfielder'"
            },
            {
                "isuser": true,
                "text": "Which college have both players with position midfielder and players with position defender?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The collage 'Maryland' has both players with position midfielder and players with position defender.",
                "query": "SELECT College FROM match_season WHERE POSITION = \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION = \"Defender\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the number of games played for students under the age of 20?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Students under the age of 20 played 257 games.",
                "query": "SELECT sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
            },
            {
                "isuser": true,
                "text": "What are the total hours per week students under the age of 20 played games?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Students under the age of 20 played total of 158 hours per week.",
                "query": "SELECT sum(hoursperweek)  FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
            },
            {
                "isuser": true,
                "text": "What is the most common sport name those students played?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Athletics is the name of the most common sport played by students under the age of 20.",
                "query": "SELECT sportName,count(*) from sportsinfo where stuid in (select stuid from student where age < 20) group by sportname order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please show me the list of all appellations those produce wine after 2008?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the appellations that produce wines after the year of 2008",
                "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008"
            },
            {
                "isuser": true,
                "text": "That's a big list, thank you. Then could you please exclude Central Coast area from them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the appellations that produce wines after the year of 2008 but not in Central Coast area.",
                "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""
            },
            {
                "isuser": true,
                "text": "That's great, thank you. Could you please show me the list of states where these appellations are located at?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states for the appellations which produce wines after the year of 2008 but not in Central Coast area.",
                "query": "select state from APPELLATIONS where appelation in (SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\")"
            },
            {
                "isuser": true,
                "text": "Wow, other than Central Coast is all California. Thank you, are there any appellations those are not in California?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There are not appellations which are not in California.",
                "query": "select Appelation from APPELLATIONS where state != \"California\""
            },
            {
                "isuser": true,
                "text": "Oh.. actually somewhat expected that. Thank you, then could you please let me know the average price of all wines?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the average price for all wines.",
                "query": "select avg(price) from wine"
            },
            {
                "isuser": true,
                "text": "Then could you please show me the list of wines those are more expensive than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the information of wines which are more expensive than the average price of all wines",
                "query": "select * from wine where price > (select avg(price) from wine)"
            },
            {
                "isuser": true,
                "text": "Wow great, thank you. This will be my last question, could you please let me know which ones of them are good to drink now?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "There are 466 wines which can be drunk now.",
                "query": "select count(*) from wine where Drink = \"now\""
            },
            {
                "isuser": true,
                "text": "Thanks! ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "What is the highest grade point?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the highest grade point is 4.0",
                "query": "SELECT max(gradepoint)  FROM GRADECONVERSION"
            },
            {
                "isuser": true,
                "text": "What is the highest grade point for each letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the highest grade point for each letter grade.",
                "query": "SELECT lettergrade, max(gradepoint)  FROM GRADECONVERSION group by lettergrade"
            },
            {
                "isuser": true,
                "text": "Can you show both the highest and lowest grade point for each letter grade?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the highest and lowest grade point for each letter grade. For example,  the highest and lowest grade point for A is 4.0 and 4.0.",
                "query": "SELECT lettergrade, max(gradepoint), min(gradepoint)  FROM GRADECONVERSION group by lettergrade"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "What is the number of the apartment with the greatest number of bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Apt. 908 is the number of the apartment with the largest number of bedrooms.",
                "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the number of the apartment with the least number of bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Suite 645 is the number of the apartment with the least number of bedrooms.",
                "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count  LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the apartment type code of the apartment with the greatest number of bathrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Studio is the type code of the apartment with the greatest number of bathrooms.",
                "query": "SELECT apt_type_code FROM Apartments ORDER BY bathroom_count desc  LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many rooms does that apartment have, and what is the number of that apartment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the total number of room and apartment number of the apartment with the greatest number of bathrooms.",
                "query": "SELECT room_count, apt_number FROM Apartments ORDER BY bathroom_count desc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which player has the highest salary on the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the id of  player who has the highest salary on the list is rodrial01",
                "query": "select player_id from salary order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "How many players has the birth country in USA?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 16504 players who  have the birth country USA",
                "query": "select count(player_id) from player where birth_country = 'USA'"
            },
            {
                "isuser": true,
                "text": "State the team id which has the highest rank in the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the team id of the team that has the highest rank is PH1",
                "query": "select team_id from team order by rank limit 1"
            },
            {
                "isuser": true,
                "text": "List player's first name and last name who received salary from team Washington Nationals in both 2005 and 2007?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the first names and last names of the players who received salaries from team Washington Nationals in both 2005 and 2007",
                "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_2",
        "turns": [
            {
                "isuser": true,
                "text": "What is the first and last name of all students 18 years old who have vice president votes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Lisa Apap is the student who is 18 years old who has vice president votes.",
                "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
            },
            {
                "isuser": true,
                "text": "Ok, what is the first and last name of the student who has president votes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Charles Norris, Stacy Prater, and Dinesh Kumar are the first and last names of the students who have president votes.",
                "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_Vote"
            },
            {
                "isuser": true,
                "text": "What are all of the vote categories that students can have?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "President, Vice President, Secretary, Treasurer, Class President, and Class Senator are the vote categories that students can have.",
                "query": "SELECT * from voting_record"
            },
            {
                "isuser": true,
                "text": "Ok, and of the students who had President votes how many were males?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "6 students are males and have president votes.",
                "query": "SELECT DISTINCT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  = \"M\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "theme_gallery",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name for the artist with the most number of exhibitions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the artist with the most number of exhibitions is Vijay Singh.",
                "query": "SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What country is he from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The country of the artist with the most number of exhibitions is Fiji.",
                "query": "SELECT T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What other artists are from there?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There is no other artist from the country of the artist with the most number of exhibitions.",
                "query": "select * from artist where country = (SELECT T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What other artists are the same age as him?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There is no other artist of the same age as the artist with the most number of exhibitions.",
                "query": "select * from artist where age = (SELECT T2.age FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Are there any other artists that joined in the same year?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There is no other artist that joined in the same year as the artist with the most number of exhibitions.",
                "query": "select * from artist where Year_Join = (SELECT T2.Year_Join FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Who is the artist with the least number of exhibitions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the artist with the least number of exhibitions.",
                "query": "SELECT T2.* FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you please provide me with a list of the player IDs and player names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of player ids and player names.",
                "query": "SELECT player_api_id, player_name FROM Player"
            },
            {
                "isuser": true,
                "text": "Can you update this list to show both the heights for each player, as well as each of their overall scores?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the player ids, names, height and overall rating of all players. ",
                "query": "SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you filter this list to show only the players who have an overall rating higher than 85?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the player ids, names, height and overall rating of players with overall rating higher than 85.",
                "query": "SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.overall_rating > 85"
            },
            {
                "isuser": true,
                "text": "Excellent!  Finally, could you filter this list to show only the players with a height that is greater than 180 cm?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the player ids, names, height and overall rating of players with overall rating higher than 85 and height greater than 180.",
                "query": "SELECT player_api_id FROM Player WHERE height > 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "list the makers who designed more than 3 car models",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the information of the makers who designed more than 3 car models.",
                "query": "SELECT T1.* FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
            },
            {
                "isuser": true,
                "text": "what is the id of these makers",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "4 and 6 are the ids of the makes who designed more than 3 car models.",
                "query": "SELECT T1.id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
            },
            {
                "isuser": true,
                "text": "make a list so that the full name and id of the makers who designed more than 3 car models appear in the same table ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full name and id of the makes who designed more than 3 car models appear in the same table.",
                "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "State the email id of custormer id 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The email of custormer id 1 is \"luisg@embraer.com.br\".",
                "query": "select email from customer where customerid='1'"
            },
            {
                "isuser": true,
                "text": "How many employees are from Calgary city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 employees from the city \"Calgary\".",
                "query": "select count(*) from employee where city='Calgary'"
            },
            {
                "isuser": true,
                "text": "Please show the employee first names and ids of employees who serve at least 10 customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the employee first names and ids of employees who serve at least 10 customers. For example, the employee with the first name \"Puja\" served at least 10 customers and the support rep id is \"3\".",
                "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 10"
            },
            {
                "isuser": true,
                "text": "State the title of employee id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of employee id 2 is \"Sales Manager\".",
                "query": "select title from employee where employeeid= 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  the first names, last names and department ids for the employees who earn such amount of salary which is the smallest salary of any of the departments.",
                "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
            },
            {
                "isuser": true,
                "text": "Which of those has the highest salary?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the first name and last name and department id for those employees who earn such amount of salary which is the highest salary of any of the departments.",
                "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MAX(salary) FROM employees GROUP BY department_id)"
            },
            {
                "isuser": true,
                "text": "Of the people who earn the smallest salary in each department, who has the highest salary?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Give me the first and last name of the highest paid employee",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Give me the first and last name of the highest paid employee",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here are the first and last name of the highest paid employee",
                "query": "select FIRST_NAME,LAST_NAME from employees order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "Give me their salary and their manager's salary",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Give me the name and salary of the highest paid employee and their manager",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Give me the name and salary of the highest paid employee and their manager",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the name and salary of the highest paid employee and their manager",
                "query": "select first_name,last_name,salary,manager_id from employees order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "List the names of all the customers that use email as a contact channel. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the customer names that use email as the contact channel.",
                "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"
            },
            {
                "isuser": true,
                "text": "List the names of all the customers that use email as a contact channel and the date they became a member. \n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the names of all the customers that use email as a contact channel and the date they became a member.",
                "query": "SELECT t1.customer_name, t1.date_became_customer FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"
            },
            {
                "isuser": true,
                "text": "Find the name and active to date of the customers that use email as the contact channel. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the names and active to date of the customers that use email as the contact channel. For example, Devin Mills was active to 2018-03-23 13:37:14.",
                "query": "SELECT t1.customer_name ,  t2.active_to_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"
            },
            {
                "isuser": true,
                "text": "What is the payment method of Devin Mills.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The payment method of the customer with name Devin Mills is Cheque.",
                "query": "SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name = \"Devin Mills\""
            },
            {
                "isuser": true,
                "text": "What is the customer id of Devin Mills. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer ID of the customer with name Devin Mills is 9.",
                "query": "SELECT DISTINCT t1.customer_id FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name = \"Devin Mills\""
            },
            {
                "isuser": true,
                "text": "List the names of all the customers with the same payment method as Devin Mills. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of names of all the customers with the same payment method as the customer with name Devin Mills.",
                "query": "SELECT DISTINCT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.payment_method = (SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name = \"Devin Mills\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "scientist_1",
        "turns": [
            {
                "isuser": true,
                "text": "Fine the name of the project for which a scientist whose name contains \"Smith\" is assigned to.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the projects for which a scientist whose name contains \"Smith\" is assigned to",
                "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"
            },
            {
                "isuser": true,
                "text": "What is the first name of \"Smith\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full names of the scientists whose name contains \u2018Smith\u2019",
                "query": "SELECT name from scientists WHERE name LIKE '%Smith%'"
            },
            {
                "isuser": true,
                "text": "Which \"Smith\" is working on Aerodynamics and Gas Mileage project?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the scientists working on the project Aerodynamics and Gas Mileage. ",
                "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = \"Aerodynamics and Gas Mileage\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "document_management",
        "turns": [
            {
                "isuser": true,
                "text": "can you please list the document types with the count of document structure code?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the document type and the count of document structure code for each document type.",
                "query": "SELECT count(document_structure_code), document_type_code FROM documents GROUP BY document_type_code"
            },
            {
                "isuser": true,
                "text": "can you filter out the results where count less than 4 and only show more than 4\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the document type and the count of document structure code for the document type with more than 4 documents.",
                "query": "SELECT count(document_structure_code), document_type_code FROM documents GROUP BY document_type_code HAVING count(*) > 4"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "shop_membership",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please show the membership level with the greatest number of members?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the membership level with the greatest number of members is 6.",
                "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the member ids of the people who have that membership level?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the member ids of the people who have the membership level with the greatest number of members.",
                "query": "select Member_ID from member where level in (SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What are their names, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of the names of the people who have the membership level with the greatest number of members",
                "query": "select Name from member where level in (SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What about the membership level with the least number of members?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the membership level with the least number of members is 2.",
                "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the member ids of the people who have that membership level?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the member ids of the people who have the membership level with the least number of members.",
                "query": "select member_id from member where level in (SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) ASC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What is their name, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here we show the names of the people who have the membership level with the least number of members.",
                "query": "select name from member where level in (SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) ASC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_market",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of phones and the districts of markets they are on, in ascending order of the ranking of the market. For example, IPhone 5s has a district of Alberta.",
                "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"
            },
            {
                "isuser": true,
                "text": "Which carriers are active in Alberta?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The carriers that are active in Alberta are Sprint and TMobile",
                "query": "SELECT T3.carrier FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID where T2.District = \"Alberta\""
            },
            {
                "isuser": true,
                "text": "Where else is TMobile active?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other districts in which TMobile is active are  British Columbia and Quebec.",
                "query": "SELECT T2.district FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID where T3.carrier = \"TMobile\" and T2.district != \"Alberta\""
            },
            {
                "isuser": true,
                "text": "And which phones do they support?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the phones supported by TMobile",
                "query": "SELECT T3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID where T3.carrier = \"TMobile\""
            },
            {
                "isuser": true,
                "text": "Which phones does TMobile support?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " The phones that supported by  TMobile are IPhone 6s, IPhone 7, and IPhone X",
                "query": "SELECT name FROM phone where carrier = \"TMobile\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "machine_repair",
        "turns": [
            {
                "isuser": true,
                "text": "show names of technicians by order of quality rank of machine they are assigned from worst to best",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the names of the technicians in ascending order of the quality rank of the machine they are assigned is shown.",
                "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
            },
            {
                "isuser": true,
                "text": "Which technician is the oldest?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the Name of the oldest technician?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the Name of the oldest technician?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the oldest technician is Eddie Collins.",
                "query": "SELECT name from technician order by age DESC limit 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the Team with the most number of value points?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the Team with the most number of value points is Honda.",
                "query": "SELECT team from machine order by value_points DESC limit 1"
            },
            {
                "isuser": true,
                "text": "What was the Making Year of the Machine series With the lowest quality rank?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The making year of the machine with the lowest quality rank is 1992.",
                "query": "SELECT Making_Year from machine order by  quality_rank limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wta_1",
        "turns": [
            {
                "isuser": true,
                "text": "what are the names of the tourneys?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the different tourneys are shown in the result table. ",
                "query": "SELECT distinct tourney_name FROM matches "
            },
            {
                "isuser": true,
                "text": "are there any tourneys that have more than 10 matches?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the names of the tourneys with more than 10 matches are shown in the result table. ",
                "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
            },
            {
                "isuser": true,
                "text": "are these the tourneys with more than 10 matches?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the names of the tourneys with more than 10 matches are shown in the result table. ",
                "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "behavior_monitoring",
        "turns": [
            {
                "isuser": true,
                "text": "Show the detention type code for the detention with id 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The detention type code of the detention with id 1 is AFTER.",
                "query": "SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code where detention_id=1"
            },
            {
                "isuser": true,
                "text": "Show the code and description of the least frequent detention type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The code and description of the least frequent detention type are LUNCH and lunch-time respectively.",
                "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show the code and description of the most frequent detention type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The code and description of the most frequent detention type are AFTER and After School respectively.",
                "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*)DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Full name of faculty id 1082?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The full name of faculty ID 1082 is Giuliano Mark.",
                "query": "SELECT Lname, Fname FROM FACULTY WHERE FacID=1082"
            },
            {
                "isuser": true,
                "text": "Room and phone no. of id 1121?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The room and phone number of the faculty with id 1121 are 219 and 3593 respectively.",
                "query": "SELECT Room, Phone FROM FACULTY WHERE FacID=1121"
            },
            {
                "isuser": true,
                "text": "Provide the rooms of faculties with rank professor who live in building NEB?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The rooms of faculties with rank professor who live in building NE are listed in the table.",
                "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "machine_repair",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  How many technicians are there in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 10 technicians.",
                "query": "SELECT count(*) from technician"
            },
            {
                "isuser": true,
                "text": "Can you show me a list of all of the technicians names the machines they are assigned to repair?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!  Can you show me their names and their machine ids that they are assigned to repair?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!  Can you show me their names and their machine ids that they are assigned to repair?",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here are the names of technicians and the ids of the machines they are assigned to repair",
                "query": "SELECT T2.Name ,  T1.machine_id FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID"
            },
            {
                "isuser": true,
                "text": "Great!  Also add to that list the starting year and age of each technician?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names, starting years and ages of the technicians and the ids of the machines they are assigned to repair",
                "query": "SELECT T2.Name ,  T1.machine_id,T2.starting_year,T2.age FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many employees have the job title Manager?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 employees that have manager in their job title.  ",
                "query": "SELECT count(*) from employees where title like \"%manager%\""
            },
            {
                "isuser": true,
                "text": "Which one manages the most employees?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "All the information about the manager who manages the most employees is shown in the result table. ",
                "query": "SELECT T2.*  FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "How many employees does she manage?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The number of employees the employee that manage the most number of employees is 3. ",
                "query": "SELECT  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "And their names?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last names of the employees that the employee that manages the most number of employees are shown in the result table. ",
                "query": "SELECT first_name, last_name FROM employees where reports_to = (SELECT T2.id FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Great! Can you list the first and last name of the employee that manages them?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the employee that manages the most number of employees is shown in the result table. ",
                "query": "SELECT T2.first_name, T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Okay! I appreciate all your help. Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_2",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show the SourceAirport FlightNo 28?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The source airports of the flight whose number is 28 are \"APG\" and \"ABQ\".",
                "query": "SELECT SourceAirport FROM Flights WHERE FlightNo='28'"
            },
            {
                "isuser": true,
                "text": "Can you show the City of Airportcode APG?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city with the airport code \"APG\" is \"Aberdeen\".",
                "query": "select city from airports where airportcode='APG'"
            },
            {
                "isuser": true,
                "text": "Can Show the names of airports which do not have any flight in and out?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of airports which do not have any flight in and out. For example, the airport \"Phillips AAF\" does not have any flight in and out.",
                "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sports_competition",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the club names and ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The club names and ids are shown in the result table. ",
                "query": "SELECT name, club_id FROM CLub "
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know the player ids, names and their club ids.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The player id, names and their cubs of all the players are shown in the result table. ",
                "query": "SELECT player_id, name, club_id FROM player "
            },
            {
                "isuser": true,
                "text": "Please list the names of those clubs that do not have any players.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the clubs that do not have any players are shown in the result table. ",
                "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "city_record",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me Regional Population and GDP for City ID 2 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The regional population and GDP for city id 2 are 8004680 and 614.55.",
                "query": "SELECT regional_population, GDP FROM city WHERE city_id = 2"
            },
            {
                "isuser": true,
                "text": "Tell me temperature for City ID 2 for Jan, Apr and Oct",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The temperature of Jan, Apr, and Oct for city id 2 are listed in the table.",
                "query": "SELECT Jan, Apr, Oct FROM temperature WHERE city_id = 2"
            },
            {
                "isuser": true,
                "text": "tell me which city had high temperature in the month of May ?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "high value of temperature...\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "high value of temperature...\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Higher than 21",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Higher than 21",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cities that have temperature higher than 21 in the month of Mar are Nanjing, Suzhou, Jinhua,  and Jiaxing",
                "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar > 21"
            },
            {
                "isuser": true,
                "text": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cities whose temperature in Mar is lower than that in July and which have also served as host cities are Jiaxing, Nanjing, Shanghai, and Wuxi.",
                "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the most expensive wine made in the year 2006?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The information about the most expensive wine made in the year 2006 is shown now.",
                "query": "SELECT * FROM WINE WHERE year = 2006 order by price desc limit 1"
            },
            {
                "isuser": true,
                "text": "Great, can you show me all wines that have a higher price than the one currently in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The information on wines with a price more expensive then all wines made in the year 2006 is shown.",
                "query": "SELECT * FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
            },
            {
                "isuser": true,
                "text": "Can you show only the name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of wines with a price more expensive then all wines made in the year 2006  is Darius II",
                "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "inn_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you find the first and last names of all people who paid more than the rooms' base prices?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first and last names of all people who paid more than the rooms' base prices",
                "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
            },
            {
                "isuser": true,
                "text": "Could you add in the rates they paid to the table please?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The reservation rate, please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "The reservation rate, please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first, last names and the reservation rate of all people who paid more than the rooms' base prices",
                "query": "SELECT T1.firstname ,  T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
            },
            {
                "isuser": true,
                "text": "Can you find the first and last names of all people who paid less than the rooms' base prices?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first and last names of all people who paid less than the rooms' base prices",
                "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  <  0"
            },
            {
                "isuser": true,
                "text": "Could you add in the reservation rates they paid to the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, these are the first, last names and the reservation rate of all people who paid more than the rooms' base prices",
                "query": "SELECT T1.firstname ,  T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  <  0"
            },
            {
                "isuser": true,
                "text": "What is the name of the room that was booked most often?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "That would be CAS.",
                "query": "SELECT Room FROM Reservations GROUP BY Room ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "create a table with a column for department id and a column for department name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows a column for department id and a column for department name.",
                "query": "select DEPARTMENT_ID,DEPARTMENT_NAME from  departments"
            },
            {
                "isuser": true,
                "text": "Show the total number of employee ids for each department id",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the total number of employee's id for each different department id.",
                "query": "select T1.DEPARTMENT_ID, count(*) from  departments AS T1 JOIN employees AS T2 where  T1.DEPARTMENT_ID = T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID"
            },
            {
                "isuser": true,
                "text": "Add a column with department name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the department name as well as the total number of employee's id for each different department id.",
                "query": "select T1.DEPARTMENT_ID, T1.DEPARTMENT_NAME, count(*) from departments AS T1 JOIN employees AS T2 where T1.DEPARTMENT_ID = T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all of the customer IDs and the corresponding customer names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer IDs and their corresponding customer names are listed in the result table. For example, customer Ahmed has a customer id of 1",
                "query": "SELECT customer_name ,  customer_id FROM customers"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you filter this list to show only the rows for customers who have an address in the state of TN?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All names and ids of customers who have an address in the state of TN are shown in the table. They are customer Lukas with customer id 3, and customer Kenya with customer id 13",
                "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
            },
            {
                "isuser": true,
                "text": "Great!  Can you provide me with the customer addresses for those two customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer addresses for those two customers who have an address in the state of TN are updated.",
                "query": "SELECT customer_address FROM customers WHERE customer_address LIKE \"%TN%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many films are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of films that are there 1000. ",
                "query": "SELECT count(*) from film "
            },
            {
                "isuser": true,
                "text": "What is the range of dates they were made?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The range of release_years that the films were made are shown in the result table. ",
                "query": "SELECT min(release_year), max(release_year) from film"
            },
            {
                "isuser": true,
                "text": "What is the range of rental cost for the films?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The minimum and maximum of the rental rate for the films is shown in the result table. ",
                "query": "SELECT min(rental_rate), max(rental_rate) from film"
            },
            {
                "isuser": true,
                "text": "Which film has the most actors and actresses?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "film name?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "film name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the film that has the most actors and actresses is LAMBS CINCINATTI.",
                "query": "SELECT T2.title  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "film id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The film id of the film that has the most actors and actresses is 508.",
                "query": "SELECT T2.film_id  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "film description?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The film description of the film that has the most actors and actresses is A Insightful Story of a Man And a Feminist who must Fight a Composer in Australia.",
                "query": "SELECT T2.description  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Which customer bought the most items?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "That would be lovely.\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "That would be lovely.\n",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": " the name of the customer that has purchased the most items is Clifford Pagac",
                "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many did he purchase?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the customer who has purchased the most items has purchased 40 items in total",
                "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How did he pay?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The payment method of the customer who has purchased the most items is Cheque.",
                "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "When did he become a customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date that the customer who has purchased the most items became a customer is 2018-02-24 10:24:23",
                "query": "SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many became customers before that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 customer who became a customer before  The date that the customer who has purchased the most items became a customer.",
                "query": "SELECT count(*)  FROM customers where date_became_customer < (SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1)"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "What are the first names of the students that minor in the department with DNO 140?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of the students that minor in the department with DNO 140 is Susan.",
                "query": "SELECT T2.Fname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
            },
            {
                "isuser": true,
                "text": "What are the last names of the students that minor in the department with DNO 140?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last names of the students that minor in the department with DNO 140 is Lee.",
                "query": "SELECT T2.Lname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
            },
            {
                "isuser": true,
                "text": "What are the ages of the students with the last name Lee?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ages of the students with the last name Lee are listed.",
                "query": "SELECT age from Student where LName = 'Lee'"
            },
            {
                "isuser": true,
                "text": "What are the department numbers of the students with the last name Smith?",
                "type": "NOT_RELATED"
            },
            {
                "isuser": false,
                "text": "What are the student ids of the students with the last name Smith?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are the student ids of the students with the last name Smith?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The student ids of the students with the last name Smith are listed.",
                "query": "SELECT StuID from Student where LName = 'Smith'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which team had the most players in the all star games?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the team that had the most players in the all star games.",
                "query": "SELECT * FROM all_star GROUP BY team_id ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "WHich player has the most all star games played?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the player that has the most all star games played.",
                "query": "SELECT T1.* FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "What is his id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "aaronha01 is the id of the player that has the most all star games played.",
                "query": "SELECT T1.player_id FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome! Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "Show the first name and last name for the customer with account name 900.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name and last name for the customer with account name 900 are Meaghan and Keeling",
                "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
            },
            {
                "isuser": true,
                "text": "What is a login name of Dee A Larkin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The login name for the customer whose customer first name, customer middle initial, customer last name are Dee, A, and Larkin  is xhartmann",
                "query": "SELECT login_name FROM customers WHERE Customer_first_name = \"Dee\" AND Customer_middle_initial = \"A\" AND Customer_last_name = \"Larkin\""
            },
            {
                "isuser": true,
                "text": "Final question is How many customers in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 15 customers in total.",
                "query": "SELECT COUNT(customer_id) FROM customers"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "no problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show the dates of transactions with at least 100 share count?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the dates of transactions with at least 100 share count.",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know the dates of transactions with amount bigger than 100 please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the dates of transactions with amount bigger than 100.",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE  amount_of_transaction  >  100"
            },
            {
                "isuser": true,
                "text": "Can you list the dates of transactions for all of them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the dates of transactions with at least 100 share count or amount bigger than 100.",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >  100"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "debate",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the names of the people who were on the affirmative side of debates with an audience bigger than 200?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the people who were on the affirmative side of debates with an audience bigger than 200.",
                "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"
            },
            {
                "isuser": true,
                "text": "Of those three, who is the oldest?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "James Humphrey is the oldest person who was on the affirmative side of debates with an audience bigger than 200. ",
                "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200 order by T3.age desc limit 1"
            },
            {
                "isuser": true,
                "text": "What party affiliation does James Humphrey hold?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "James Humphrey is affiliated with the Republican party.",
                "query": "SELECT party from people where name = \"James Humphrey\""
            },
            {
                "isuser": true,
                "text": "What district does James Humphrey represent?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "James Humphrey represents the district New York 2 ",
                "query": "SELECT district from people where name = \"James Humphrey\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Find the id of customers whose address contains WY state and do not use credit card for payment.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the customer whose address contains WY state and do not use credit card for payment is 4",
                "query": "SELECT customer_id FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
            },
            {
                "isuser": true,
                "text": "Can I have the customer's name please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the customer whose address contains WY state and do not use credit card for payment is Lexus",
                "query": "SELECT customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
            },
            {
                "isuser": true,
                "text": "Please find the id and name of customers whose address contains WY state and use credit card for payment.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id and name of customers whose address contains WY state and use credit card for payment",
                "query": "SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
            },
            {
                "isuser": true,
                "text": "Hmm. Can you please give me his email address and phone?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the email address and phone of customers whose address contains WY state and use credit card for payment",
                "query": "SELECT customer_email, customer_phone FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "theme_gallery",
        "turns": [
            {
                "isuser": true,
                "text": "Show the theme for exhibitions with records of an attendance below 100",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the  themes for exhibitions with records of attendance below 100",
                "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 "
            },
            {
                "isuser": true,
                "text": "Show the theme for exhibitions with records of an attendance above 500",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the themes for exhibitions with records of attendance above 500. For example, one of the themes is Santa Claus.",
                "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
            },
            {
                "isuser": true,
                "text": "Show me the dates of those exhibitions",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the dates of the exhibitions with records of attendance above 500. For example, one of the dates is December 2.",
                "query": "SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "architecture",
        "turns": [
            {
                "isuser": true,
                "text": "Can I please have a list of architects who have built at least two bridges, or at least one mill?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Can you please tell me the names and the ids of the architects who have built two bridges?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you please tell me the names and the ids of the architects who have built two bridges?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names and the ids of the architects who have built two bridges are 3, Zaha Hadid and 4, Mies Van Der Rohe.",
                "query": "SELECT T1.id ,  T1.name  FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2"
            },
            {
                "isuser": true,
                "text": "Are these architects male, or female?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Among the architects who have built two bridges, one of them is male and another one is female.",
                "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 "
            },
            {
                "isuser": true,
                "text": "Great. Would you please list the ids, names and genders of architects have built one mill?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the ids, names, and genders of architects have built one mill. For example, one of them is Frank Gehry with id being 2 who is male.",
                "query": " SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1"
            },
            {
                "isuser": true,
                "text": "Has Zaha Hadid built any bridges longer than 200 meters?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No Zaha Hadid has not built any bridges longer than 200 meters.",
                "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id WHERE T1.Name = \"Zaha Hadid\" AND length_meters > 200"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "Good morning, could you please let me know the IDs of the stations those are located in San Francisco?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the ids of stations that are located in San Francisco.",
                "query": "SELECT id FROM station WHERE city = \"San Francisco\" "
            },
            {
                "isuser": true,
                "text": "That's a big list, thank you. Then could you please let me know which of these stations has more than 10 bikes available?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome. Here is the result table shows the ids of stations that are located in San Francisco and have bike availability above 10.",
                "query": "SELECT id FROM station WHERE city = \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING bikes_available > 10"
            },
            {
                "isuser": true,
                "text": "That was fast, thank you again :) Could you please let me know which station is located in the highest latitude? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "It's my pleasure to help you. The name of the station located in the highest latitude is \"Embarcadero at Sansome\".",
                "query": "select name from station order by lat desc limit 1"
            },
            {
                "isuser": true,
                "text": "Awesome, then could you please let me know the installation date of the station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course, the installation date of the station located in the highest latitude is \"8/6/2013\".",
                "query": "select installation_date from station order by lat desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thank you, then could you please let me know if there are any stations those have earlier installation date than 8/6/2013?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, and there is 61 stations have earlier installation date than 8/6/2013.",
                "query": "select count(*) from station where installation_date<'8/6/2013'"
            },
            {
                "isuser": true,
                "text": "Wow that's a lot. Thank you again, this will be my last question :) Could you please let me know the ID of the station which has the biggest number of docks available among these 61 stations? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course, the station with id \"61\" has the biggest number of docks available among these 61 stations which have earlier installation date than 8/6/2013.",
                "query": "select id from station where installation_date<'8/6/2013' order by dock_count desc limit 1"
            },
            {
                "isuser": true,
                "text": "You make things really clear, I believe the people who get to work with you are lucky! :) I really appreciate your time and help, hope you have a wonderful day ahead. Thanks!",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "farm",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Which cities have populations larger than 1000? List their ids.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city ids for cities that have  populations larger than 1000 are 1, 2, and 3.",
                "query": "SELECT city_id FROM city WHERE population > 1000"
            },
            {
                "isuser": true,
                "text": "What is the theme for these cities?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The themes of competitions with host cities having populations larger than 1000 are Carnival M is back!, Codehunters, and MTV Asia Aid",
                "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
            },
            {
                "isuser": true,
                "text": "Which cities have populations less than 1000? List their ids.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city ids of the cities that have populations less than 1000 are 4 and 5",
                "query": "SELECT DISTINCT T1.CITY_ID FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  <  1000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "How many products have a price higher than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of products that have a price higher than the average is 3. ",
                "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "Can you give me the product names for these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product names for the products that have a price higher than the average are shown in the result table. ",
                "query": "SELECT product_name FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "And how many products have a price lower than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of products with a price lower than the average is 12. ",
                "query": "SELECT count(*) FROM products WHERE product_price < (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "May I have their product names please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The distinct product names of the products with a price lower than the average are shown in the result table. ",
                "query": "SELECT distinct product_name FROM products WHERE product_price < (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many flights have an origin of Los Angeles?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 flights that have an origin of Los Angeles.",
                "query": "SELECT count(*) FROM Flight WHERE origin  =  \"Los Angeles\""
            },
            {
                "isuser": true,
                "text": "How many of those are going to Honolulu?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 flights that have an origin of Los Angeles and a destination of Honolulu.",
                "query": "SELECT count(*) FROM Flight WHERE origin  =  \"Los Angeles\" and destination = \"Honolulu\""
            },
            {
                "isuser": true,
                "text": "What is their departure date and arrival date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the departure date and arrival date for all flights that have an origin of Los Angeles and a destination of Honolulu",
                "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the full name and id of the college with the largest number of baseball players?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The full name and id of the college with the largest number of baseball player sis shown in the result table. ",
                "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "And how many players go there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of players that go to the college with the largest number of baseball players is 107. ",
                "query": "select count(distinct player_id) from player_college where college_id = (SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1);"
            },
            {
                "isuser": true,
                "text": "And where is that college located?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college with the largest number of baseball players is located in Austin, TX, USA. ",
                "query": "SELECT T1.city, T1.state, T1.country FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "And what year did the largest number of baseball players attend that college?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The year in which the largest number of baseball players attended the college was 1979.",
                "query": "Select year from player_college where college_id = (SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1) group by college_id order by year desc limit 1"
            },
            {
                "isuser": true,
                "text": "How many baseball players attended that college in 2018?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of baseball players that attended the college with id in 2018 is 0.  ",
                "query": "Select count(player_id) from player_college where year = \"2018\" and college_id = \"texas\"\n\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_company",
        "turns": [
            {
                "isuser": true,
                "text": "How many airports has pilot Thompson driven an aircraft?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of airports which the pilot Thompson drove an aircraft is 6.",
                "query": "SELECT count(*) FROM airport WHERE id IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );"
            },
            {
                "isuser": true,
                "text": "How many airports had Thompson driven by August 1963?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of airports which the pilot Thompson drove an aircraft by August 16, 1963 is 9.",
                "query": "SELECT count(*) FROM airport as T1 JOIN flight as T2 on T1.id = T2.airport_id WHERE T2.pilot  =  'Thompson' and T2.date > 'August 16, 1963';"
            },
            {
                "isuser": true,
                "text": "What is the flight number of the aircraft Thompson drove in  March 1, 1963",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The flight number of the flight Thompson drove on March 1, 1963 is M2-F1 #0.",
                "query": "SELECT Vehicle_Flight_number FROM flight WHERE pilot  =  'Thompson' and date = 'March 1, 1963';"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "pets_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all of the student IDs for students who have pets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all distinct student ids for students who have pets is shown in the result table. ",
                "query": "SELECT distinct T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "isuser": true,
                "text": "Great!  Can you show me the name (first and last), major and age of those two students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name, last name, major and age of the two students with pets is shown in the result table. ",
                "query": "SELECT distinct T1.Fname, T1.Lname, T1.major, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "isuser": true,
                "text": "Great!  Now can you filter this list to show me which student(s) have a pet other than a cat?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name, last name, major and age of the student(s) who do not have a cat are shown in the result table. ",
                "query": "SELECT Fname, Lname, major, age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Which schools have goalie player? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the schools have goalie player. For example, one of them is LSU",
                "query": "SELECT cName FROM tryout WHERE pPos  =  \"goalie\""
            },
            {
                "isuser": true,
                "text": "And which schools don't have a goalie player? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the schools don't have goalie player. For example, one of them is FSU.",
                "query": "SELECT cName FROM tryout WHERE pPos  !=  \"goalie\""
            },
            {
                "isuser": true,
                "text": "And what is their total number of enrollment? ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The total number of the enrollment of colleges which don't have a gloalie player is 41000.",
                "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "race_track",
        "turns": [
            {
                "isuser": true,
                "text": "give me the race class with the most number of races ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The race class with the most number of races is DP/GT.",
                "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1\n\n"
            },
            {
                "isuser": true,
                "text": "on what date is it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The dates of the race class with the most number of races are as follows.",
                "query": "SELECT Date FROM race WHERE Class = (SELECT Class FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1)\n\n"
            },
            {
                "isuser": true,
                "text": "list the race id",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the race ids of races with a class that has the most number of races.",
                "query": "SELECT Race_ID FROM race WHERE Class = (SELECT Class FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1)\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "musical",
        "turns": [
            {
                "isuser": true,
                "text": "What 1986 movie was nominated for a Tony Award for Best Book of a Musical?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the movie that was produced in 1986 and nominated for a Tony Award for Best Book of a Musical is The Phantom of the Opera",
                "query": "select name from musical where year = 1986 and category = 'Best Book of a Musical' and Result = 'Nominated'"
            },
            {
                "isuser": true,
                "text": "How many actors appeared in it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 2 actors who appeared in the movie that was produced in 1986 and nominated for a Tony Award for Best Book of a Musical",
                "query": "SELECT count(T1.Name) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE  t2.year = 1986 and t2.category = 'Best Book of a Musical' and t2.Result = 'Nominated'"
            },
            {
                "isuser": true,
                "text": "What are their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the names of actors who appeared in the movie that was produced in 1986 and nominated for a Tony Award for Best Book of a Musical",
                "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE t2.year = 1986 and t2.category = 'Best Book of a Musical' and t2.Result = 'Nominated'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "loan_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can show you the customer name of customer ID 1?",
                "type": ""
            },
            {
                "isuser": false,
                "text": "* I have left the chat *",
                "query": "SELECT cust_name from customer where cust_id = 1"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Can you show the average account balance of customers with credit score lower than 50 for each account type and their corresponding account types?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you show the average account balance of customers with credit score lower than 50 for each account type and their corresponding account types?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average account balance of customers with score lower than 50 for each account type and their corresponding account types are listed.",
                "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the id, forename and number of races of all drivers who have at least participated in two races?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the ids, forenames and numbers of races of all drivers who have at least participated in two races is shown.",
                "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "What is the driver reference and nationality of Fernando?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The driver reference and nationality of the driver whose forename is Fernando are alonso and Spanish respectively.",
                "query": "SELECT driverRef , nationality  FROM drivers where forename='Fernando'"
            },
            {
                "isuser": true,
                "text": "What position and how many wins does the forename Fernando have?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The position of the driver with forename Fernando when he ranked 1 is 6 and the number of times that he ranked 1 is 22.",
                "query": "SELECT T2.position, count(*)  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid  where T1.forename='Fernando' and rank = 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "decoration_competition",
        "turns": [
            {
                "isuser": true,
                "text": "list the name of the members in the order of their rank in rounds",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows  the names of members in ascending order of their rank in rounds",
                "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "isuser": true,
                "text": "include member id in this table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the names of members and member id   in ascending order of their rank in rounds",
                "query": "SELECT T1.Name ,t1.Member_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "isuser": true,
                "text": "also include the college id in this table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the names of members, member id and college id in ascending order of their rank in rounds",
                "query": "SELECT T1.Name ,t1.Member_ID,T1.College_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_for_hire",
        "turns": [
            {
                "isuser": true,
                "text": "what is the daily hire cost of the product id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the daily hire cost of the product for hire with id  of 1 is  26.15",
                "query": "SELECT daily_hire_cost\t FROM Products_for_Hire where product_id=1"
            },
            {
                "isuser": true,
                "text": "what is the status date of the product name Book collection C ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the status date of the product for hire with name Book collection C  is 2018-03-18 05:25:55",
                "query": "SELECT status_date FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE product_name =\"Book collection C\""
            },
            {
                "isuser": true,
                "text": "what is the product description of the booking id 2 ?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "there are no products for hire with booking id 2 ",
                "query": "SELECT product_description  FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE booking_id  =  2"
            },
            {
                "isuser": true,
                "text": "what is the product description of the product id 3 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the product description of the product for hire with id 3 is The Great Gatsby",
                "query": "SELECT product_description  FROM Products_for_Hire where product_id=3"
            },
            {
                "isuser": true,
                "text": "what are the names of products whose availability equals to 1 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the names of products whose availability equals to 1 ",
                "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1"
            },
            {
                "isuser": true,
                "text": " Okay Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome, goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average oldest students with different sex?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the average and oldest age for students with different sex?\n\n\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the average and oldest age for students with different sex?\n\n\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the average and oldest age of students with different sex.",
                "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all students who took any course in the fall semester of the year 2003?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the names of students who have taken any course in the fall semester of year 2003.",
                "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"
            },
            {
                "isuser": true,
                "text": "What about in the spring semester?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the names of students who have taken any course in the spring semester of year 2003. |",
                "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Spring' AND YEAR  =  2003)"
            },
            {
                "isuser": true,
                "text": "What about in 2004?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the names of students who have taken any course in the spring semester of year 2004.",
                "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Spring' AND YEAR  =  2004)"
            },
            {
                "isuser": true,
                "text": "What course id were offered in that semester?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of course ids that were offered in the spring semester of year 2004.",
                "query": "SELECT distinct id FROM takes WHERE semester  =  'Spring' AND YEAR  =  2004"
            },
            {
                "isuser": true,
                "text": "What's the grade of 10838?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grade of the take with id 10838 in the spring semester in the year 2004 is C+.",
                "query": "SELECT grade FROM takes WHERE semester  =  'Spring' AND YEAR  =  2004 and id = 10838"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "how many students are enrolled in a bachelor degree program?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students enrolled in a bachelor degree program is 8.",
                "query": "SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'"
            },
            {
                "isuser": true,
                "text": "what are their student IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the student IDs enrolled in a bachelor degree program.",
                "query": "SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'"
            },
            {
                "isuser": true,
                "text": "Who are the students with student id 9?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first, middle, and last names of the student with ID 9 is Reva Golda Osinski.",
                "query": "SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE t1.student_id = 9"
            },
            {
                "isuser": true,
                "text": "what about id 7?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first, middle, and last names of the student with ID 7 is Frida Aisha Huel.",
                "query": "SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE t1.student_id = 7"
            },
            {
                "isuser": true,
                "text": "what are the degrees of the students in the bachelor program?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first, middle, and last names and the degree of the students in the bachelor program. For example, Reva Golda Osinski has degree Bachelor.",
                "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'"
            },
            {
                "isuser": true,
                "text": "what are the different degree descriptions available?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the different degree summary descriptions.",
                "query": "SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id"
            },
            {
                "isuser": true,
                "text": "what were the student ids in the bachelor program again?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the student IDs of the students in the bachelor program.",
                "query": "SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'"
            },
            {
                "isuser": true,
                "text": "what are those students first name, middle name, and last names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the first, middle, and last name of the students in the bachelor program.",
                "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all of the students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the names of all of the students",
                "query": "select lastname,firstname from list"
            },
            {
                "isuser": true,
                "text": "Which classroom has the largest number of students?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the id of the classroom which has the largest number of students is 109",
                "query": "select classroom from list group by classroom order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "How many students are in that classroom?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 8 students in the classroom which has the largest number of students.",
                "query": "select count(*) from list group by classroom order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the teacher who teaches in that classroom?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the names of the teacher who teaches in the classroom which has the largest number of students.",
                "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_1",
        "turns": [
            {
                "isuser": true,
                "text": "list the salaries in ascending order",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table with the salaries of all the employees in ascending order. For example, the lowest salary of them is 20.",
                "query": "SELECT \tsalary FROM Employee ORDER BY salary ASC"
            },
            {
                "isuser": true,
                "text": "show the least three salaries in the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table with the lowest three salaries of all employees. For example, the lowest salary of them is 20.",
                "query": "SELECT \tsalary FROM Employee ORDER BY salary ASC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "list the name of the employees with the lowest salaries",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the employee with the lowest salaries is \"Milo Brooks\".",
                "query": "SELECT name FROM Employee ORDER BY salary ASC limit 1"
            },
            {
                "isuser": true,
                "text": "what is the id of him?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee id for the employee with the lowest salary is \"574489457\".",
                "query": "SELECT eid FROM Employee ORDER BY salary ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "county_public_safety",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all of the cities including city IDs and city names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows all of the cities including city IDs and city names",
                "query": "SELECT City_ID,Name FROM city "
            },
            {
                "isuser": true,
                "text": "Thanks for that!  Can you filter this list to show only the cities that have populations of more than 20,000, and display the corresponding population for each city?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Can you update this list with the population value that corresponds to each city?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you update this list with the population value that corresponds to each city?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Oh, I am sorry about that.  Can you please show me a list of all of the cities located in counties that for which the county has a population over 20,000?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oh, I am sorry about that.  Can you please show me a list of all of the cities located in counties that for which the county has a population over 20,000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the names of all of the cities located in counties that for which the county has a population over 20,000",
                "query": "SELECT  Name FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_policies",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, I was wondering how many claims are made?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi. There are 15 claims.",
                "query": "SELECT count(*) FROM Claims"
            },
            {
                "isuser": true,
                "text": "About how many settlements does each claim correspond to?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of claim id and the number of settlements for each claim.",
                "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"
            },
            {
                "isuser": true,
                "text": "That is so helpful.  Is there a month of the year that brings in more claims than another?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "No problem, what is the average amount of days for a claim to be settled?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "No problem, what is the average amount of days for a claim to be settled?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average amount of days for a claim to be settled is 0.47.",
                "query": "SELECT avg(Date_Claim_Settled - Date_Claim_Made) from Claims"
            },
            {
                "isuser": true,
                "text": "Claim number 801 had 4 settlements, what was the largest one?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, both.  ",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, both.  ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list showing the settlement id with the amount claimed and amount settled. So 512 has most amount claimed and 476 most amount settled.",
                "query": "SELECT T2.settlement_id,T2.amount_claimed,T2.amount_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id where T1.claim_id=801"
            },
            {
                "isuser": true,
                "text": "Did another claim besides 801 carry a larger individual settlement?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, claim with id 843 has a settlement with id 897 with a larger settlement of amount 1885.",
                "query": "SELECT T1.Claim_id ,  T2.Settlement_ID, T2.amount_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id where T1.claim_id != 801 and T2.amount_settled>1805"
            },
            {
                "isuser": true,
                "text": "Great, I appreciate your help.",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wedding",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all churches please?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Ah yes!  Can you please provide me with a list containing both?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Ah yes!  Can you please provide me with a list containing both?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. All church names and their corresponding church ids are listed. For example, church id 1's name is Pure Church of Christ",
                "query": "SELECT Church_id, name FROM church"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Could you filter that list to show only the  church names and ids of churches that have hosted 2 or more weddings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure! The list of he church names and  churches ids of churches that have hosted 2 or more weddings are updated.",
                "query": "SELECT T1.name, T1.church_id FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Alright!  Can you show me a list of all church names and the total number of weddings that each church has hosted?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all church names of churches that have hosted weddings are shown in the result table. Each of the church has hosted 1 wedding.",
                "query": "SELECT T1.name, T1.church_id FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "riding_club",
        "turns": [
            {
                "isuser": true,
                "text": "what are the names of the players?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the player names. For example, one of the names is Jean Luc Bouch\u00e9.",
                "query": "SELECT Player_name FROM Player"
            },
            {
                "isuser": true,
                "text": "Is Jameson Tomas the rank 1 coach?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, he is. Here are the names of all coaches whose rank is 1.",
                "query": "SELECT coach_name from coach where rank = 1"
            },
            {
                "isuser": true,
                "text": "Who has been coached by Jameson Tomas?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Jean Luc Bouch\u00e9, Fiona Shiells, and Niki Ashton have been coached by Jameson Tomas.",
                "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Coach_name  =  \"Jameson Tomas\" "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "station_weather",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all train names for trains that are associated with the local authority of Chiltern?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes ,all train names for trains that are associated with the local authority of Chiltern are shown  in  the table",
                "query": "SELECT distinct t3.name  FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\""
            },
            {
                "isuser": true,
                "text": "That's great!  Can you update that list to also include all of the arrival times for the trains that have Chiltern listed as their station's local authority?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "all of the arrival times  and  all  train names for the trains that have Chiltern listed as their station's local authority are shown  in the table",
                "query": "SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\""
            },
            {
                "isuser": true,
                "text": "Great!  Finally, can you update this list to also include The train ID and train number for each?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "all of the train arrival times ,train names  and train  ids for the trains that have Chiltern listed as their station's local authority are shown  in the table",
                "query": "SELECT t3.name , t3.time,t3.train_number ,t2.train_id  FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_policies",
        "turns": [
            {
                "isuser": true,
                "text": "hi I was wondering how many policies Ellsworth Paucek has?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of policies associated with Ellsworth Paucek is 2.",
                "query": "SELECT count(*) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id WHERE T1.customer_details = \"Ellsworth Paucek\""
            },
            {
                "isuser": true,
                "text": "do you know how many total customers had more than 1 policy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of customers that had more than 1 policy is 4.",
                "query": "SELECT count(*) FROM (SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1)"
            },
            {
                "isuser": true,
                "text": "could you tell me those four customer's details and their ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the customer details and IDs of customers that had more than 1 policy. For example, Ellsworth Paucek has ID 2.",
                "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "scientist_1",
        "turns": [
            {
                "isuser": true,
                "text": "how many projects are presented on the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "THe number of projects presented on the table is 14.",
                "query": "SELECT count(*) FROM projects"
            },
            {
                "isuser": true,
                "text": "list out the projects names",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the projects names. For example, one of them is Aerodynamics and Gas Mileage.",
                "query": "SELECT name FROM projects"
            },
            {
                "isuser": true,
                "text": "which project are least hours on the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The project that has least hours on the table has a name Aerodynamics of Air Hockey.",
                "query": "SELECT name from projects WHERE hours  =  (SELECT min(hours) FROM projects)"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please let me know what is the average savings balance of all customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average savings balance of all customers is 166751716.5. ",
                "query": "SELECT avg(balance) from savings"
            },
            {
                "isuser": true,
                "text": "Awesome, thank you. Then could you please show me the ID of the customers who have higher balance than this average?",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "The ID of the customer who has a higher balance than this average is 2. ",
                "query": "SELECT custid from savings where balance > (select avg(balance) from savings)"
            },
            {
                "isuser": true,
                "text": "oh that's a bit surprising, maybe this person is elevating the average a lot. Thank you, then could you please show me this customer's balance on both CHECKING and SAVINGS table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The checking and saving balance of the customers whose savings balance is higher than the average savings balance is shown in the result table. ",
                "query": "SELECT T2.balance,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
            },
            {
                "isuser": true,
                "text": "That's great, thank you. Then could you please let me know what is the sum of those two accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The sum of the checking and saving balance of the customer whose savings balance is higher than the average savings balance is 1000001999.0.",
                "query": "SELECT T2.balance + T3.balance  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
            },
            {
                "isuser": true,
                "text": "Thank you. Then could you please let me know what would be the difference between the balances of the two accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The difference of the checking and saving balance of the customer whose savings balance is higher than the average savings balance is 999997999.0.",
                "query": "SELECT T3.balance - T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
            },
            {
                "isuser": true,
                "text": "Thanks! nice working with you, hope you have a great day ahead!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye! ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all the different product types?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are two different product types: clothes, and hardware.",
                "query": "SELECT distinct product_type_code  FROM products GROUP BY product_type_code"
            },
            {
                "isuser": true,
                "text": "Sweet!  Can you update this list to show what the maximum product price is for both Clothes and Hardware, and include the minimum product price for each?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The maximal price for clothes is 939.57, the minimal price is 408.82. The maximal price for hardware is 971.44, the minimal price is 612.46.",
                "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code;"
            },
            {
                "isuser": true,
                "text": "Cool!  Can you show me a list of all of the different product names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all the different product names. For example, there are red jeans and yellow jeans.",
                "query": "select distinct  product_name from products;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all of the colleges located in the state of LA?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the names of the colleges located in the state of LA",
                "query": "SELECT cName FROM College WHERE state = \"LA\""
            },
            {
                "isuser": true,
                "text": "Awesome! Can you show me a list that contains both the colleges in LA and those located in AZ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the names of the colleges that located in LA or AZ",
                "query": "SELECT cName FROM College WHERE state = \"LA\" or state = \"AZ\""
            },
            {
                "isuser": true,
                "text": "Thank you!  So if I were to ask you for a list of all colleges in LA with an enrollment of more that 15000 and all colleges in the stat of LA with an enrollment of less than 13000, then it would be just these two colleges, correct?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here is the list of all colleges in LA with an enrollment of more that 15000 and all colleges in the stat of LA with an enrollment of less than 13000.",
                "query": "SELECT cName FROM College WHERE enr < 13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr > 15000 AND state = \"LA\""
            },
            {
                "isuser": true,
                "text": "Sure!  What is the average enrollment of ASU and LSU?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average enrollment of the college ASU and the college LSU is 15000",
                "query": "SELECT avg(enr) from college where cName = \"ASU\" or cName = \"LSU\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "How many models does each car maker make?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the full name of car makers and the number of models they made. For example, the car maker \"American Motor Company\" made 1 model.",
                "query": "SELECT T1.FullName , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
            },
            {
                "isuser": true,
                "text": "What are all the ids of car makers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the ids of car makers.",
                "query": "SELECT  Id  FROM CAR_MAKERS"
            },
            {
                "isuser": true,
                "text": "And what is their country ids? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the countries of all car makers.",
                "query": "SELECT  Country  FROM CAR_MAKERS "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the salary and name of the employee who has the least number of certificates on aircrafts with distance more than 5000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The salary and name of the employee who has the least number of certificates on aircrafts with distance more than 5000 are 178345 and Mary Johnson.",
                "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Okay. What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000 are 289950 and George Wright.",
                "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the salary and name of the employee who has the most number of certificates on aircraft with distance less than 5000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The salary and name of the employee who has the most number of certificates on aircraft with distance less than 5000 are 289950 and George Wright.",
                "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  <  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Show details of all investors that made transactions with sgare greater than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is list that contains the details of all investors that made transactions with sgare greater than 100.",
                "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
            },
            {
                "isuser": true,
                "text": "What is the transaction id of all investors that made transactions with sgare greater than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains all transaction id of all investors that made transactions with sgare greater than 100.",
                "query": "SELECT t2.transaction_id FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
            },
            {
                "isuser": true,
                "text": "What is the transaction type code of transaction id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The transaction type code of transaction id 2 is PUR.",
                "query": "SELECT t2.transaction_type_code FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE t2.transaction_id = 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "pilot_record",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the pilots with IDs 1 and 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the pilots with IDs 1 and 2 are Patrick O'Bryant and Jermaine O'Neal",
                "query": "select pilot_name from pilot where pilot_ID = 1 or pilot_ID = 2"
            },
            {
                "isuser": true,
                "text": "How many records do they have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The numbers of records of the pilots with IDs 1 and 2 are shown in the table.",
                "query": "SELECT T2.Pilot_id ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID where T2.pilot_ID = 1 or T2.pilot_id = 2 GROUP BY T2.Pilot_id"
            },
            {
                "isuser": true,
                "text": "Which year did they join?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The join years of the pilots with IDs 1 and 2 are shown in the table",
                "query": "SELECT pilot_ID ,  join_year FROM  pilot  where pilot_ID = 1 or pilot_id = 2 "
            },
            {
                "isuser": true,
                "text": "Which are their teams?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the teams of the pilots with IDs 1 and 2",
                "query": "SELECT pilot_ID ,  team FROM  pilot  where pilot_ID = 1 or pilot_id = 2 "
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "document_management",
        "turns": [
            {
                "isuser": true,
                "text": "Find the total access count of all documents in the most popular document type.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total access count of all documents in the most popular document type is \"11807\".",
                "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show me the access count for books?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the access counts for document type code of \"Book\".",
                "query": "SELECT access_count FROM documents where document_type_code='Book'"
            },
            {
                "isuser": true,
                "text": "How about in paper?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the access counts for document type code of \"Paper\".",
                "query": "SELECT access_count FROM documents where document_type_code='Paper'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "How many fault logs are there in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 15 fault logs in total",
                "query": "SELECT count(fault_log_entry_id) FROM Fault_Log "
            },
            {
                "isuser": true,
                "text": "How many of those fault logs had faulty parts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "9 of fault logs had faulty parts",
                "query": "select count(*)\nfrom\n(\nSELECT fault_log_entry_id FROM Fault_Log where fault_log_entry_id in (\nselect fault_log_entry_id from Fault_Log_Parts)\n  )"
            },
            {
                "isuser": true,
                "text": "What was the fault log ID with the least number of faulty parts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "fault log entry id of 6 has the least number of faulty parts",
                "query": "SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) asc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What was its description?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Description of fault log id with the least number of faulty parts is failed parts",
                "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) asc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Did it have a record time?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the fault log entry datetime of fault log id with the least number of faulty parts is 2018-02-28 20:15:25",
                "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) asc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What was the fault log ID with the most number of faulty parts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "fault log entry id of  1 has the most number of faulty parts",
                "query": "SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What was its description?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the description the fault log ID with the most number of faulty parts is system error",
                "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How about the record time?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the fault log entry datetime of fault log ID with the most number of faulty parts is 2018-03-21 04:25:00",
                "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome\uff0cgoodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "can you show me a list of login name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the login names. Some login names are annamae.hoppe, wmiller, ahartmann and etc",
                "query": "SELECT login_name FROM students"
            },
            {
                "isuser": true,
                "text": "can you show me a list of password?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the passwords of students. Some passwords are db8765bb6f, 35faf8182a, 8e064ec4e6",
                "query": "SELECT password FROM students"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which department IDs have manager ids that are from 0-100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The department ids that have manager ids from 0- 100 are shown in the result table. ",
                "query": "SELECT department_id FROM departments where manager_id >= 0 and manager_id <= 100"
            },
            {
                "isuser": true,
                "text": "What about from 100 - 200?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The department ids that have manager ids from 100- 200 are shown in the result table.",
                "query": "SELECT department_id FROM departments where manager_id >= 100 and manager_id <= 200"
            },
            {
                "isuser": true,
                "text": "What are the employee ids who work in those departments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee ids who work in the departments that have manager ids from 100- 200 are shown in the result table. ",
                "query": "SELECT employee_id FROM employees WHERE department_id IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
            },
            {
                "isuser": true,
                "text": "What about employees who don't work with employees in those departments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details of the employees who do not work in the departments that have manager ids from 100- 200 are shown in the result table. ",
                "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Please show me the type of grape available at Old Kraft Vineyard\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Please show me the type of grape available at Old Kraft Vineyard\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The type of grape in the wine with a name of Old Kraft Vineyard is Zinfandel.",
                "query": "SELECT Grape FROM wine WHERE Name = \"Old Kraft Vineyard\""
            },
            {
                "isuser": true,
                "text": "What are other wineries that also have Zinfandel?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the wineries that have grape Zinfandel. ",
                "query": "SELECT winery FROM wine WHERE Grape = \"Zinfandel\""
            },
            {
                "isuser": true,
                "text": "Can you give me the top three wineries with the most white wines?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Brander, Kistler and Peter Michael are the top three wineries with the most white wines.",
                "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Which of these have the most white wines?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Brander is the winery that has the most white wines.",
                "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 1"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "activity_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the ids of the students who participate in Canoeing and Kayaking.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of the students who participate in canoeing and kayaking are in the following table.",
                "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"
            },
            {
                "isuser": true,
                "text": "What is activity name of activity id 770?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The activity name of activity id 770 is Mountain Climbing.",
                "query": "SELECT activity_name FROM Activity WHERE actid = 770"
            },
            {
                "isuser": true,
                "text": "Finally how many participate students?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students that participate in the activity with id 770 is 6",
                "query": "SELECT count(stuid) FROM Participates_in WHERE actid = 770"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Do you have any more questions?",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "What were the dates that APP sent their grants?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table listing all the sending dates of the document with a type code \"APP\". They are 1986-11-30 07:56:35, 2004-01-23 11:57:08, etc",
                "query": "SELECT sent_date FROM Documents where document_type_code=\"APP\""
            },
            {
                "isuser": true,
                "text": "Ah. And how many grants can APP have total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 10 grants with document type of APP.",
                "query": "SELECT count(grant_id) FROM Documents where document_type_code=\"APP\""
            },
            {
                "isuser": true,
                "text": "No, I mean what is the maximum number of grants that APP can have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The maximum number of grant id that a document with a type code APP can have is 15.",
                "query": "SELECT max(grant_id) FROM Documents where document_type_code=\"APP\""
            },
            {
                "isuser": true,
                "text": "I see. Can you list the id and number for every grand that APP has?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the ids are listed in the table. The ids are 5, 13, 13, etc. and there are 10 of them.",
                "query": "SELECT grant_id FROM Documents where document_type_code=\"APP\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You have done a great job! Please activate the Submit and Leave button so we can end the conversation.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "You have done a great job! Please activate the Submit and Leave button so we can end the conversation.",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "Sure. Glad it helps. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the first names of all students who are taking classes from the accounting department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "William and Anne are the first names of all students who are taking classes from the accounting department",
                "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting'"
            },
            {
                "isuser": true,
                "text": "What are the first names of all students who are taking classes from the Computer Info. Systems department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the first names of all students who are taking classes from the Computer Info. Systems department.",
                "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"
            },
            {
                "isuser": true,
                "text": "What are the first names of all students who are taking classes from both the accounting department and the Computer Info. Systems department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "William and Anne are the first names of all students who are taking classes from the accounting department and the Computer Info. Systems department",
                "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please find all the names of the students who took some course and got an A?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "William and Bowser are the first and last name of the student who took some course and got A.",
                "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A'"
            },
            {
                "isuser": true,
                "text": "Could you please find all the names of the students who took some course and got a C?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of the students who took some course and got a C.",
                "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C'"
            },
            {
                "isuser": true,
                "text": "What are their student numbers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the student numbers of the students who took some course and got a C",
                "query": "SELECT  t1.stu_num FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C'"
            },
            {
                "isuser": true,
                "text": "What are the class codes for the students who took some course and got a C?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the class codes for the students who took some course and got a C",
                "query": "SELECT t2.class_code FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C'"
            },
            {
                "isuser": true,
                "text": "What are the student class and gpa of each of those students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the student class and GPA of each of students who took some course and got a C.",
                "query": "SELECT stu_class, stu_GPA FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "behavior_monitoring",
        "turns": [
            {
                "isuser": true,
                "text": "What are the dates of assessment notes for students with first name 'Fanny'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the dates of the assessment notes for the student with the first name 'Fanny'",
                "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""
            },
            {
                "isuser": true,
                "text": "Could you tell me the dates students with first name 'Fanny' left the university?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the date on which the student with the first name 'Fanny' left the university is 2018-03-12 15:05:53",
                "query": "SELECT date_left_university FROM Students WHERE first_name  =  \"Fanny\""
            },
            {
                "isuser": true,
                "text": "What are the cell mobile numbers of students with the first name 'Fanny'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the cell mobile numbers of students with the first name 'Fanny' is (820)260-5721",
                "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  \"Fanny\""
            },
            {
                "isuser": true,
                "text": "Do you have text of notes of students with the first name \"Fanny\"?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "there are no text of notes of the student with the first name \"Fanny\"",
                "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Tracking_DB",
        "turns": [
            {
                "isuser": true,
                "text": "How many documents are named \"Robin CV\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 document that has name \"Robin CV\"",
                "query": "SELECT count(*) from all_documents where document_name  =  \"Robin CV\""
            },
            {
                "isuser": true,
                "text": "What is the document id of that document?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the document id of the document with name Robin CV is 7",
                "query": "SELECT document_id from all_documents where document_name  =  \"Robin CV\""
            },
            {
                "isuser": true,
                "text": "What is the date in location from for this document?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The document with name \"Robin CV\"  has been in its location from the date of 2017-01-06 23:17:22",
                "query": "SELECT T2.Date_in_Location_From from all_documents as T1 join Document_Locations as T2 on T1.document_id = T2.document_id where T1.document_name  =  \"Robin CV\""
            },
            {
                "isuser": true,
                "text": "What is the date in location to date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The document with name \"Robin CV\" has been in its location until the date of 2008-06-08 12:45:38",
                "query": "SELECT T2.Date_in_Locaton_To from all_documents as T1 join Document_Locations as T2 on T1.document_id = T2.document_id where T1.document_name  =  \"Robin CV\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_campaigns_ecommerce",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please provide me with a list of all customer names and phone numbers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the customer names and phone number is shown in the result table. ",
                "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id"
            },
            {
                "isuser": true,
                "text": "Can you filter that list of customers to show only those who have 'No Response' as their outcome code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the customer names and phone number that have an outcome code \"No Response\" is shown in the result table. ",
                "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.outcome_code = \"No Response\""
            },
            {
                "isuser": true,
                "text": "Can you please provide me with the phone number and email addresses of these five customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The phone numbers and email addresses of the customers that have an outcome code of \"No Response\" are shown in the result table. ",
                "query": "SELECT T1.customer_phone, T1.customer_email FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.outcome_code = \"No Response\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_orders",
        "turns": [
            {
                "isuser": true,
                "text": "Find the customer id of Savannah? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the customer id of customer with name Savannah is 1",
                "query": "SELECT customer_id FROM customers where customer_name = \"Savannah\""
            },
            {
                "isuser": true,
                "text": "Which date of order placed in Alberto?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date of order placed by Alberto is 1983-09-08 12:32:49",
                "query": "SELECT  T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE t1.customer_name = \"Alberto\""
            },
            {
                "isuser": true,
                "text": "What are the customer details of order id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the customer details of order id 2 is est.",
                "query": "SELECT  customer_details FROM customers  WHERE customer_id = \"2\""
            },
            {
                "isuser": true,
                "text": "Find the details of all distinct customers who have orders with status \"On Road\".",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the details of all distinct customers who have orders with status \"On Road\". For example, one of them is  deleniti.",
                "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "How many transactions have the type code PUR?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 transactions with the transaction type code PUR.",
                "query": "SELECT count(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\""
            },
            {
                "isuser": true,
                "text": "How many transactions have a share count larger than 50?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 10 transactions having a share count larger than 50.",
                "query": "SELECT count(*) FROM TRANSACTIONS WHERE share_count  >50"
            },
            {
                "isuser": true,
                "text": "What is the least amount of transactions that have both a type code of PUR and a share count larger than 50?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "0 is the minimum amount of transactions that have both a type code of PUR and a share count larger than 50.",
                "query": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50"
            },
            {
                "isuser": true,
                "text": "How many transactions have the type code PUR and a share count larger than 50?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 transactions having the type code PUR and a share count larger than 50",
                "query": "SELECT count(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "restaurant_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which major has between 2 and 30 number of students? List major and the number of students.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and the enrollments of the majors that has between 2 and 30 number of students",
                "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
            },
            {
                "isuser": true,
                "text": "Which major has highest number of students?List the students First name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Major 600 has highest number of students. Here are students' first names",
                "query": "SELECT Major ,  Fname FROM Student where major = (select major from student group by major order by count(*) desc limit 1)"
            },
            {
                "isuser": true,
                "text": "Which major has least number of students?List the students First name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Major 100 has highest number of students. Here are students' first names",
                "query": "SELECT Major ,  Fname FROM Student where major = (select major from student group by major order by count(*) asc limit 1)"
            },
            {
                "isuser": true,
                "text": "Thanks for your co-operation.",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_product",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you tell me what is the sum total of the populations of the three districts with the largest area?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the sum total of the populations of the three districts with the largest area is 7478157.0",
                "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you tell me the district name associated with the largest population?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the district that has the largest population is Faisalabad District ",
                "query": "SELECT District_name FROM district where City_Population = (select max(City_Population) from district)"
            },
            {
                "isuser": true,
                "text": "Wonderful!  Can you show me the city's population total and the city's area?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city population and the city area of the district that has the largest population is 2793721.0 and 147.0 respectively.",
                "query": "SELECT \tCity_Population, City_Area FROM district where City_Population = (select max(City_Population) from district)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "List the 3 highest salaries of the players in 2001?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The 3 highest salaries of the players in 2001 are shown in the result table. ",
                "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "List the 3 highest salaries of players on ATL in 2001.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The 3 highest salaries of players on ATL in 2001 are shown in the result table. ",
                "query": "SELECT salary FROM salary WHERE YEAR  =  2001 and team_id = \"ATL\" ORDER BY salary DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "List the 3 highest salaries of players in the NL in 2001.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The 3 highest salaries of players of league id NL in year 2001 are shown in the result table. ",
                "query": "SELECT salary FROM salary WHERE YEAR  =  2001 and league_id = \"NL\" ORDER BY salary DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "List the 3 highest salaries of players in the AL in 2001",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The 3 highest salaries of players in the league AL in 2001 are shown in the result table. ",
                "query": "SELECT salary FROM salary WHERE YEAR  =  2001 and league_id = \"AL\" ORDER BY salary DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the titles of all the albums of the artist AC/DC?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The titles of all the albums of the artist AC/DC  are For Those About To Rock We Salute You and Let There Be Rock",
                "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
            },
            {
                "isuser": true,
                "text": "What about for the artist Aerosmith?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Find the titles of all the albums of the artist Aerosmith please?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Find the titles of all the albums of the artist Aerosmith please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title  of all the albums of the artist Aerosmith   is Big Ones",
                "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  = \"Aerosmith\""
            },
            {
                "isuser": true,
                "text": "What are the titles of all the albums by artist id 4?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of all the albums by the artist with id 4 is Jagged Little Pill.",
                "query": "SELECT Title FROM ALBUM where \tArtistId=4"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_finance",
        "turns": [
            {
                "isuser": true,
                "text": "Which donators have a donation amount above 8.5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the donators with donation amount above 8.5 are listed in the result table. ",
                "query": "Select donator_name from endowment where amount > 8.5"
            },
            {
                "isuser": true,
                "text": "Which school ids have at least two of those donators?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The school ids that have at least two of the donors with donation amounts above 8.5 are listed in the result table. ",
                "query": "SELECT T2.School_id FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What are the schools names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of schools that have more than one donator with donation amount above 8.5 are shown in the result table. ",
                "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the names of all the tourist attractions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all the tourist attractions",
                "query": "SELECT name from tourist_attractions"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know the names of the tourist attractions that can be reached by bus.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the tourist attractions that can be reached by bus",
                "query": "SELECT name from tourist_attractions where how_to_get_there = \"bus\""
            },
            {
                "isuser": true,
                "text": "Can you also tell me the name of the tourist attraction that is at address 254 Ottilie Junction?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result of the name of the tourist attraction that is at address 254 Ottilie Junction",
                "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"254 Ottilie Junction\""
            },
            {
                "isuser": true,
                "text": "Can you list the location names of the tourist attractions that can be reached by bus?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the location names of the tourist attractions that can be reached by bus",
                "query": "SELECT T1.location_Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.how_to_get_there = \"bus\""
            },
            {
                "isuser": true,
                "text": "Can you list the location addresses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the addresses of the tourist attractions that can be reached by bus",
                "query": "SELECT T1.address FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.how_to_get_there = \"bus\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "How many times at most can a course enrollment result show in different transcripts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most number times of a course enrollment result show in different transcripts is 4.",
                "query": "SELECT count(*)  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the course enrollment ids for those, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "0 is the student course id of the course whose enrollment result shows the most number times in different transcripts.",
                "query": "SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the least number of times of a course enrollment result shows in different transcripts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the least number of times of a course enrollment result shows in different transcripts is 1.",
                "query": "SELECT count(*) FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the course enrollment ids for those, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2 is the student course id of the course whose enrollment result shows the least number times in different transcripts.",
                "query": "SELECT  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the average student course id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average of student course ids is 9664788.666666666.",
                "query": "SELECT avg(student_course_id) FROM Transcript_Contents"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "The song The way was issued on what date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The song The Way was issued on 27 December 1986 - 10 January",
                "query": "SELECT Issue_Date FROM volume WHERE Song LIKE \"%The Way%\""
            },
            {
                "isuser": true,
                "text": "the song The way was issued what volume?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the song The way was issued in volume 45:14 \u00a7",
                "query": "SELECT volume_Issue FROM volume WHERE Song LIKE \"%The Way%\""
            },
            {
                "isuser": true,
                "text": "what's the artist id for Everybody Have Fun Tonight",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The artist id for Everybody Have Fun Tonight is 2. Please ask more complex questions.",
                "query": "SELECT artist_id FROM volume WHERE Song LIKE \"%Everybody Have Fun Tonight%\""
            },
            {
                "isuser": true,
                "text": "Give me the issue date of the volume with the minimum weeks on top",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the issue date of the volume with the minimum weeks on top is 17 January",
                "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1\n\n"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "real_estate_properties",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the properties with more that one room?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the properties with more than 1 room",
                "query": "SELECT property_name FROM Properties WHERE room_count  >  1"
            },
            {
                "isuser": true,
                "text": "What are the names of the properties that are either houses or apartments with more than one room?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the properties that are either houses or apartments with more than one room",
                "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1"
            },
            {
                "isuser": true,
                "text": "How many rooms do each of those have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and number of rooms of the properties that are either houses or apartments with more than one room",
                "query": "SELECT property_name, room_count FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name, room_count FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1"
            },
            {
                "isuser": true,
                "text": "Are there any apartments with only one room?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is no apartment with only 1 room.",
                "query": "SELECT count(*) FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  =  1"
            },
            {
                "isuser": true,
                "text": "What is the average agreed selling price of all houses with more than one room?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "4201.8 is the average agreed selling price of all houses with more than one room",
                "query": "SELECT avg(agreed_selling_price) FROM Properties WHERE property_type_code  =  \"House\" AND room_count  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks.bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_software_problems",
        "turns": [
            {
                "isuser": true,
                "text": "Please list staff names of staff assigned to at least 1 problem",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "both",
                "query": ""
            },
            {
                "isuser": true,
                "text": "both",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the staff first names and last names of staff assigned to at least 1 problem",
                "query": "SELECT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
            },
            {
                "isuser": true,
                "text": "Now just list the staff who are assigned to problem id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first name and last name of staffs who are assigned to problem id 1.",
                "query": "SELECT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_2",
        "turns": [
            {
                "isuser": true,
                "text": "How many airports are there?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 100 airports",
                "query": "SELECT count(*) from airports"
            },
            {
                "isuser": true,
                "text": "How many have departing flights?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 100 airports that have flights depart from",
                "query": "SELECT count(distinct sourceairport) from flights"
            },
            {
                "isuser": true,
                "text": "How many will arrive in ASY?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 19 flights having ASY as its destination airport",
                "query": "SELECT count(*) from flights where destairport like \"%ASY%\""
            },
            {
                "isuser": true,
                "text": "Of those flights, how many come from APG and ABR?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 flights having ASY as its destination airport and having APG or ABR as its source airport",
                "query": "SELECT count(*) from flights where destairport like \"%ASY%\" and sourceairport like \"%APG%\" UNION SELECT count(*) from flights where destairport like \"%ASY%\" and sourceairport like \"%ABR%\""
            },
            {
                "isuser": true,
                "text": "Are there any other flights planned to depart from APG or ABR and what are the flight number of all flights planning to depart?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here are the flight nos of the flights having APG or ABR as its source airport and don't have ASY as their destination airport.",
                "query": "SELECT flightno from flights where (sourceairport like \"%APG%\" or sourceairport like \"%ABR%\") and destairport not like \"%ASY%\""
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the id and last name of the driver who participated in the most races after 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id and last name of the driver who participated in the most races after 2010 is '1' and 'Hamilton'.",
                "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the id of the driver who participated in the least races after 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the driver who participated in the least races after 2010 is \"812\".",
                "query": "SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Hmm. Can you also give me his last name.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name of the driver who participated in the least races after 2010 is \"Chandhok\".",
                "query": "SELECT T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Okay. How many races did he participate in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The driver who participated in the least races after 2010 participated in just 1 race after 2010.",
                "query": "SELECT count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) limit 1"
            },
            {
                "isuser": true,
                "text": "How many races did Hamilton participate in after 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The driver with last name \"Hamilton\" participated in 137 races after 2010.",
                "query": "SELECT count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 and T1.surname='Hamilton' GROUP BY T1.driverid"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "employee_hire_evaluation",
        "turns": [
            {
                "isuser": true,
                "text": "Which cities do more than one employee under age 30 come from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Bath has more than one employee under age 30.",
                "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Which cities do more than one employee over age 30 come from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "None has more than one employee under age 30.",
                "query": "SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What are the names and ages of all employees over age 30?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the name and ages of all employee over age 30. For example,  Mark Regan\tis 43 years old.",
                "query": "SELECT Name, Age FROM employee WHERE age  >  30 "
            },
            {
                "isuser": true,
                "text": "What are the names and ages of all employees under age 30?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the name  and ages of all employees under age 30 . For example,   George Chuter is 23 years old.",
                "query": "SELECT Name, Age FROM employee WHERE age  <  30 "
            },
            {
                "isuser": true,
                "text": "What cities are all employees under age 29 from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of cities of employees with an age under 29.",
                "query": "SELECT City FROM employee WHERE age  <  29"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "Show the train name and station name for each train",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of name and station name for each train. For eaxmple,  The station name is London Waterloo with the train Ananthapuri Express",
                "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"
            },
            {
                "isuser": true,
                "text": "Give me total passengers on each station",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of  total passenegers on each station. ",
                "query": "SELECT Total_Passengers FROM station"
            },
            {
                "isuser": true,
                "text": "Give me main services for each station",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the main services for each station.",
                "query": "SELECT Main_Services FROM station"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, can you tell me how many trips there have been, starting from\n August?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There has been 9959 trips starting from August.",
                "query": "SELECT count(*) FROM trip WHERE start_date LIKE \"8/%\""
            },
            {
                "isuser": true,
                "text": "oh wow that's a lot! and how many stations have those started from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The trips starting from August are from 69 stations.",
                "query": "SELECT count(distinct start_station_name) FROM trip WHERE start_date LIKE \"8/%\" "
            },
            {
                "isuser": true,
                "text": "is there a station that had the most trips starting from August?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. San Francisco Caltrain 2 (330 Townsend) is the name of the station with most trips starting from August.",
                "query": "SELECT start_station_name FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "how many trips started from there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "643 trips have started from the station with most trips starting from August.",
                "query": "SELECT count(*) FROM trip WHERE start_station_name = (SELECT start_station_name FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Could you tell me the ID and name of the San Francisco station?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Could you tell me the ID and name of the San Francisco station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the name and id of the San Francisco Caltrain 2 (330 Townsend) station.",
                "query": "SELECT distinct start_station_name ,  start_station_id FROM trip WHERE start_station_name = 'San Francisco Caltrain 2 (330 Townsend)'"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "What tracks belong to genre Rock?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the info of tracks whose genre name is Rock.",
                "query": "SELECT T2.* FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"
            },
            {
                "isuser": true,
                "text": "What are the names of tracks that are Rock or MPEG media type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the names of tracks that belong to the genre Rock or are the media type MPEG audio file.",
                "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"
            },
            {
                "isuser": true,
                "text": "What are the names of tracks that belong to the genre Rock and are media type MPEG audio file?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the names of tracks that belong to the genre Rock or are the media type MPEG audio file.",
                "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"
            },
            {
                "isuser": true,
                "text": "How many distinct media types are Rock genre?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 different media types for the Rock genre.",
                "query": "SELECT count(distinct T2.media_type_id) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\""
            },
            {
                "isuser": true,
                "text": "What is the most common media type for the Rock genre?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the info of the most common media type for the Rock genre. ",
                "query": "SELECT T3.* FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" group by T3.id ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_management",
        "turns": [
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Show me the departments managed by heads whose temporary acting value is 'Yes', please",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Great, could you tell me the name and number of employees within those departments?\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Great, could you tell me the name and number of employees within those departments?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the names and numbers of employees of departments managed by heads whose temporary acting value is 'Yes'",
                "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"
            },
            {
                "isuser": true,
                "text": "Awesome, could you show me the budget of those departments?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the budgets of departments managed by heads whose temporary acting value is 'Yes'",
                "query": "SELECT Budget_in_Billions FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"
            },
            {
                "isuser": true,
                "text": "Could you tell me when those departments were founded, and display the name next to each founding year?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the creation years and names of departments managed by heads whose temporary acting value is 'Yes'.\n",
                "query": "SELECT Creation, Name FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"
            },
            {
                "isuser": true,
                "text": "Could you tell me how many departments have a head whose temporary acting value is 'no'?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2 departments have heads whose temporary acting value is 'no'",
                "query": "SELECT count(*) from management WHERE temporary_acting  =  'No'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me the vehicle id and staff id for all lesson id's...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all the vehicle ids and staff ids for all lesson ids.",
                "query": "SELECT T1.vehicle_id ,  T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id "
            },
            {
                "isuser": true,
                "text": "What is the vehicle details of vehicle id 1 and 2 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The vehicle details of vehicle id 1 and 2 are Van and Truck.",
                "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id  = \"1\" or vehicle_id  = \"2\""
            },
            {
                "isuser": true,
                "text": "What is the price of vehicle id 2 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the prices of the lesson with vehicle id 2. For example, one of the prices is 352.0.",
                "query": "SELECT price FROM lessons WHERE  vehicle_id  = \"2\""
            },
            {
                "isuser": true,
                "text": "What is the id and detail of the vehicle used in lessons for most of the times ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id and detail of the vehicle used in lessons for most of the times are 2 and Truck.",
                "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you find the names of all the departments, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of all the departments. For example, one of them is Accounting.",
                "query": "SELECT dept_name FROM  department "
            },
            {
                "isuser": true,
                "text": "What about the names of all classes whose description has the word \"Statistics\"?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What about classes with the course description \"Statistics\"?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What about classes with the course description \"Statistics\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the  class with the course description \"Statistics\".",
                "query": "SELECT * FROM course WHERE crs_description LIKE '%Statistics%'"
            },
            {
                "isuser": true,
                "text": "What department name offers that course description?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The department name that offers that course description is Computer Info. Systems.",
                "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'"
            },
            {
                "isuser": true,
                "text": "What other courses does that department offer?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the other courses offered by the department Computer Info. Systems",
                "query": "SELECT T1.CRS_CODE FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name = \"Computer Info. Systems\""
            },
            {
                "isuser": true,
                "text": "How many course credits are each of those worth?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the course credits for courses offered by department Computer Info. Systems.",
                "query": "SELECT CRS_CREDIT FROM course WHERE CRS_CODE in (SELECT T1.CRS_CODE FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name = \"Computer Info. Systems\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Which position is the most popular among players in the tryout?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the most popular position  among players in the tryout is goalie",
                "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What were the names of the colleges for that position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the colleges for the position which is the most popular among players in the tryout.",
                "query": "SELECT cName FROM tryout where pPos = (SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "And what decisions resulted from those tryouts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the decisions for the position which is the most popular among players in the tryout.",
                "query": "SELECT decision FROM tryout where pPos = (SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Were there any other position in the try outs other than goalie position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of other position in the try outs other than goalie position",
                "query": "SELECT pPos FROM tryout where pPos != \"goalie\""
            },
            {
                "isuser": true,
                "text": "Which colleges were those positions for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of college names of the colleges that positions other than goalie are for.",
                "query": "SELECT cName FROM tryout where pPos != \"goalie\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the organization that has published the largest number of papers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the name of the organization that has published the largest number of papers is \"University of Oxford\".",
                "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the Country code for University of Oxford?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The country code for \"University of Oxford\" is \"UK\".",
                "query": "select \tcountry from Inst where name='University of Oxford'"
            },
            {
                "isuser": true,
                "text": "What is the instID code for University of Oxford?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The institution id for the institution \"University of Oxford\" is 1000.",
                "query": "select instID from Inst where name='University of Oxford'"
            },
            {
                "isuser": true,
                "text": "What is the paperID code for University of Oxford?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the whole paper ids for the institution \"University of Oxford\".",
                "query": "select distinct T1.paperID from Papers AS T1 JOIN Authorship AS T2 JOIN Inst AS T3 where T3.name='University of Oxford'"
            },
            {
                "isuser": true,
                "text": "What is the Title of paperID 200?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the paper with id \"200\" is \"Just do it: Simple Monadic Equational Reasoning\".",
                "query": "select title from Papers where paperID='200'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please display the first and last names of all employees whose first names end in the letter \"m\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the list of  the first and last names of all employees with first names ending with letter m.",
                "query": "SELECT first_name ,  last_name FROM employees WHERE first_name LIKE '%m'"
            },
            {
                "isuser": true,
                "text": "What are their hire dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the hire dates for employees with first names ending with letter m.",
                "query": "SELECT first_name ,HIRE_DATE FROM employees WHERE first_name LIKE '%m'"
            },
            {
                "isuser": true,
                "text": "What commission pct do they get?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here shows commission pct for employees with first names ending with letter m.",
                "query": "SELECT COMMISSION_PCT FROM employees WHERE first_name LIKE '%m'"
            },
            {
                "isuser": true,
                "text": "What is the name of the person who gets the highest pct commission?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the employee with the highest pct commission is John, Russell ",
                "query": "SELECT FIRST_NAME, LAST_NAME FROM employees order by COMMISSION_PCT desc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the hire date of the person who gets the lowest pct commission?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the hire date of the employee with the lowest pct commission is 1987-06-17",
                "query": "SELECT HIRE_DATE FROM employees order by COMMISSION_PCT asc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Have a good night!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_management",
        "turns": [
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What are the departments managed by heads whose temporary acting value is \"yes\"?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of departments managed by heads whose temporary acting value is \"yes\".",
                "query": "SELECT T1.Name FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"
            },
            {
                "isuser": true,
                "text": "Show me the name and number of employees for the Treasury department.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the name and number of employees for the Treasury department.",
                "query": "SELECT name ,  num_employees FROM department where name = \"Treasury\""
            },
            {
                "isuser": true,
                "text": "Show me the number of employees for the Homeland Security department.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the name and number of employees for the Homeland Security department",
                "query": "SELECT name ,  num_employees FROM department where name = \"Homeland Security\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "county_public_safety",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of the names of Counties that do not have any cities in them?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "None of the counties doesn't have any cities in them.",
                "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"
            },
            {
                "isuser": true,
                "text": "Okay!  Can you provide me with a list of all of the city names and which counties they belong to?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of all the city names and the counties they belong to is shown.",
                "query": "SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID"
            },
            {
                "isuser": true,
                "text": "Thank you very much! Can you filter this list to show only the cities in the country with the largest population?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the city in the country with the largest population is listed.",
                "query": "SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update this filtered list to show the total population of this county?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total population of the country with the largest population is 204320.",
                "query": "SELECT T1.population FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1"
            },
            {
                "isuser": true,
                "text": "Awesome!  Finally, can you show me the number of residents per officer for this county?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of the residents per officer for the country with the largest population is 808.",
                "query": "SELECT T1.Residents_per_officer FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all ships?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of all ships. For example, one of the names is HMS Manxman.",
                "query": "SELECT name FROM ship"
            },
            {
                "isuser": true,
                "text": "And what about all the classes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the classes of all ships. For example, one of the names is KR.",
                "query": "SELECT class FROM ship"
            },
            {
                "isuser": true,
                "text": "Can I see list of names and classes of ships that don't have any captain?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names and classes of all ships that don't have any captain. For example, one of the ships is named \"HMS Trojan\tKR\" with class \"KR\". ",
                "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all director names who have directed more than one movie?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the directors who have directed more than one movie.",
                "query": "SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
            },
            {
                "isuser": true,
                "text": "This is great!  Can you please update the list to show each of the films directed by each director and keep the director names in the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the directors who directed more than one movie and the titles of movies they directed.",
                "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
            },
            {
                "isuser": true,
                "text": "Wonderful!  Can you please sort this list by the director name, and then sort by movie title?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the titles of all movies directed by directors who directed more than one movie, along with the director name ordered by director name, then movie title.",
                "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
            },
            {
                "isuser": true,
                "text": "Excellent!  Would you be able to update that list to also include the year each film was released?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the titles of all movies directed by directors who directed more than one movie, along with the director name and year ordered by director name, then movie title.",
                "query": "SELECT T1.title ,  T1.director, T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me all the course ids and enrollments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the course ids and enrollments. For example, course 050.109 has an enrollment of 3",
                "query": "SELECT T1.cID, COUNT(*) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID "
            },
            {
                "isuser": true,
                "text": "Which courses have at least five enrollments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of information about courses which have at least five enrollments. ",
                "query": "SELECT T1.* FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
            },
            {
                "isuser": true,
                "text": "Can you show me their ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the ids of courses which have at least five enrollments. For example, one of them is 520.213.",
                "query": "SELECT T1.cid FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "tell me the FullName of the maker amc",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The fullname of  maker amc is American Motor Company.",
                "query": "SELECT Fullname FROM car_makers WHERE maker = \"amc\""
            },
            {
                "isuser": true,
                "text": "Tell me CountryName for Countryid  1, 2, and 3.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There countrynames for countryid 1, 2, 3 are usa, germany, and france",
                "query": "SELECT countryname FROM countries WHERE countryid=1 or countryid=2 or countryid=3)"
            },
            {
                "isuser": true,
                "text": "Tell me the model id made by amc...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The model id for model amc is 1.",
                "query": "SELECT modelid FROM model_list WHERE model = \"amc\""
            },
            {
                "isuser": true,
                "text": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids and names  of the countries which have more than 3 car makers or produce the 'fiat' model are listed in the result table. One of them is countryid 1 with countryname usa",
                "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the organization that published the greatest number of papers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the organization that published the greatest number of papers is the University of Oxford",
                "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the organization that published the least number of papers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the organization that published the least number of papers is Google",
                "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) Asc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the titles of all the papers Google published?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the title of the papers Google published is An Equivalence-Preserving CPS Translation via Multi-Language Semantics",
                "query": "SELECT t3.title FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid where t1.name = \"Google\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "poker_player",
        "turns": [
            {
                "isuser": true,
                "text": "What is the money rank of the poker player with the highest earnings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The money rank of the poker player with the highest earnings is 58.0",
                "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "is that higher than the average money rank?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The average money rank of all poker players is 117.4. So it is higher.",
                "query": "SELECT avg(Money_Rank) FROM poker_player "
            },
            {
                "isuser": true,
                "text": "What is the highest earner's people ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The poker player with the highest earning has a people ID of 6",
                "query": "SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What was their best finish?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The poker player with the highest earning has a best finish of 2.0.",
                "query": "SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How much higher is his earning than the average?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "294570.8 is the difference between the highest earning and average earning. Here are the highest and average earning of all poker players.",
                "query": "SELECT avg(Earnings) as earning FROM poker_player union select max(earnings) as earning from poker_player "
            },
            {
                "isuser": true,
                "text": "And what is the highest earning?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The highest earning is 596462.0.",
                "query": "SELECT Earnings FROM poker_player order by Earnings desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "concert_singer",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015",
                "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
            },
            {
                "isuser": true,
                "text": "Which year did the concert Super bootcamp happen in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the concert with name Super bootcamp happened in the year of 2014",
                "query": "SELECT year from concert where concert_name like \"%Super bootcamp%\""
            },
            {
                "isuser": true,
                "text": "And the concert named Auditions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The concert named Auditions happened in the year of 2014",
                "query": "SELECT year from concert where concert_name like \"%Auditions%\""
            },
            {
                "isuser": true,
                "text": "What stadium did it happen in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The concert named Auditions happened in the stadium with name Stark's Park",
                "query": "SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id = T2.stadium_id where T2.concert_name like \"%Auditions%\""
            },
            {
                "isuser": true,
                "text": "What are the names and locations of stadiums which had some concerts in either 2014 or 2015?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and locations of stadiums which had some concerts in either 2014 or 2015",
                "query": "SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 or T1.Year = 2015"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many students live in each dorm?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the names of dorms and the number of students living in each of dorm.",
                "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
            },
            {
                "isuser": true,
                "text": "What is the average age of the students living in each dorm?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the average age of the students living in each dorm and the name of each dorm. For example, the average age of the students live in the \tAnonymous Donor Hall is 19.666666666666668.",
                "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
            },
            {
                "isuser": true,
                "text": "What is the age range for the students in each dorm?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the maximum and minimum ages of the students living in each dorm and the name of each dorm. For example, the minimum and maximum ages of the students live in the Anonymous Donor Hall is 18 and 21. ",
                "query": "SELECT min(T1.age), max(T1.age),  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
            },
            {
                "isuser": true,
                "text": "How many students are 26?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There 2 students who are in age 26.",
                "query": "SELECT count(*) FROM student where age = 26"
            },
            {
                "isuser": true,
                "text": "What is the most common age for students in each dorm?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the mode of ages for the students in each dorm?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the mode of ages for the students in each dorm?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the age  of most students in each dorm?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the age  of most students in each dorm?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "ok, goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average life expectancy for each government form?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the average life expectancy for each government form. For example, Administrated by the UN has an average life expectancy of 46.0",
                "query": "SELECT GovernmentForm, avg(LifeExpectancy) FROM country GROUP BY GovernmentForm "
            },
            {
                "isuser": true,
                "text": "Can you show me only those government forms whose average life expectancy is greater than 72?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the government forms whose average life expectancy is greater than 72. For example, one of them is Commonwealth of the US.",
                "query": "SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "What is the population of each of those?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the government forms and their populations whose average life expectancy is greater than 72. For example, one of them is Commonwealth of the US with a population of 3947000.",
                "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "debate",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please tell me the names of the people that have not been on the affirmative side of all debates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names of the people that have not been on the affirmative side of all debates.",
                "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
            },
            {
                "isuser": true,
                "text": "Could you please tell me their party affiliations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are parties of the people that have not been on the affirmative side of all debates.",
                "query": "SELECT Party FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
            },
            {
                "isuser": true,
                "text": "What are their ages?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the ages of the people that have not been on the affirmative side of all debates.",
                "query": "SELECT Age FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_4",
        "turns": [
            {
                "isuser": true,
                "text": "What cities have more than 3 airports in the United States?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are all the cities where have more than 3 airports in the United States.",
                "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "What cities in the United States have more than 4 airports?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are all the cities where have more than 4 airports in the United States.",
                "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  4"
            },
            {
                "isuser": true,
                "text": "What are their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names of all the airports in the cities where have more than 4 airports in the United States.",
                "query": "SELECT name FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  4"
            },
            {
                "isuser": true,
                "text": "Show the names of all airports with elevation over 4000.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names of all airports with elevation over 4000.",
                "query": "SELECT name FROM airports WHERE elevation > 4000"
            },
            {
                "isuser": true,
                "text": "Show the names of all airports with elevation over 5000.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names of all airports with elevation over 5000.",
                "query": "SELECT name FROM airports WHERE elevation > 5000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello. I am looking for the album titled \"Balls to the Wall\".",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I am interested in learning who the artist is.\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I am interested in learning who the artist is.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the artist to which the album \"Balls to the Wall\" belongs to is Accept.",
                "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\""
            },
            {
                "isuser": true,
                "text": "That's okay. What are some of Accept's other albums?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the other album belonging to Accept is Restless and Wild.",
                "query": "SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Accept\" AND T1.Title != \"Balls to the Wall\""
            },
            {
                "isuser": true,
                "text": "That sounds good. What about the album \"For Those About To Rock, We Salute You\"? Which artist produced that one?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the artist to which the album For Those About To Rock We Salute You belongs to is AC/DC.",
                "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title = \"For Those About To Rock We Salute You\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What are the names of the movies?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of the movies. For example, one of them is Gone with the Wind.",
                "query": "SELECT title FROM Movie "
            },
            {
                "isuser": true,
                "text": "Which are made before 1980?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of the movies that are made before 1980. For example, one of them is Star Wars.",
                "query": "SELECT title FROM Movie WHERE  YEAR   <  1980"
            },
            {
                "isuser": true,
                "text": "From the list of all movies, which were directed by James Cameron?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of the movies which were directed by James Cameron. For example, one of them is Titanic.",
                "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" "
            },
            {
                "isuser": true,
                "text": "What movies were either directed by James Cameron, or made before 1980?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the movies that were either directed by James Cameron or made before 1980. For example, one of them is Star Wars.",
                "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "city_record",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the city that already served as host more than once?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "English, please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "English, please.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The name of the city that has already served as host more than once is Nanjing ( Jiangsu ).",
                "query": "SELECT t1.city  FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What is the GDP and population of Nanjing \uff08Jiangsu\uff09?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The GDP and regional population of Nanjing ( Jiangsu ) are 614.55 and 8004680 respectively.",
                "query": "SELECT distinct t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city where t1.city = 'Nanjing ( Jiangsu )'"
            },
            {
                "isuser": true,
                "text": "What is the name of the city in English and Hanzi that hosted in 2011?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the city that hosted in 2011 in English and Hanzi are Wuxi ( Jiangsu ) and \u65e0\u9521/ \u7121\u932b respectively.",
                "query": "SELECT t1.city ,t1.Hanzi FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city where t2.year= 2011"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Tracking_DB",
        "turns": [
            {
                "isuser": true,
                "text": "How many employees are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 15 employees in total.",
                "query": "select count(employee_id) from employees"
            },
            {
                "isuser": true,
                "text": "How many employee have the ability to authorize the destruction of documents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 11 employees have the ability to authorize the destruction of documents.",
                "query": "SELECT count(Destruction_Authorised_by_Employee_ID) FROM Documents_to_be_destroyed"
            },
            {
                "isuser": true,
                "text": "What are the ids of those particular employees?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of ids of the employees who have the ability to authorize the destruction of documents.",
                "query": "SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
            },
            {
                "isuser": true,
                "text": "Now how many employees can't authorize the destruction of documents.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 1624 employees who cannot authorize the destruction of documents.",
                "query": "SELECT sum(employee_id) FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
            },
            {
                "isuser": true,
                "text": "May I have the ids of those employees who cant authorize the destruction of documents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the ids of those employees who cannot authorize the destruction of documents. For example, employee with id 25 cannot authorize the destruction.",
                "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which movie has the highest average rating?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The title of the movie that has the highest average rating is Snow White",
                "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is it's rating?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The rating of the movie that has the highest average rating is 4.5",
                "query": "SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the average rating for all movies?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this is the list that shows the average ratings for all movies and their title",
                "query": "SELECT T2.title ,avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID"
            },
            {
                "isuser": true,
                "text": "Which movie has the lowest rating?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the titles of the movies that have the lowest rating",
                "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID where T1.stars=(select min(stars) from Rating )"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "aircraft",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the aircraft?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of aircraft from the aircraft table.",
                "query": "SELECT Aircraft FROM aircraft"
            },
            {
                "isuser": true,
                "text": "And which of those aircraft won a match?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of aircraft from the aircraft table also associated with the match data.",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
            },
            {
                "isuser": true,
                "text": "How many have won at least two matches?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Robinson R-22 and Mil Mi-26 aircraft are the aircraft that have won at least 2 matches.",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "allergy_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Which student have allergy to both milk and cats? ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the student ids of the students who have allergies to both milk and cat.",
                "query": "SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\""
            },
            {
                "isuser": true,
                "text": "What are their last names? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last names for students who have allergies to both milk and cat are Apap and Lee",
                "query": "SELECT lname FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
            },
            {
                "isuser": true,
                "text": "And what about their age?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last names and ages for students who have allergies to both milk and cat are shown here.",
                "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entertainment_awards",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you tell me how many total nominees there are?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 6 nominations.",
                "query": "SELECT COUNT(artwork_id) FROM nomination"
            },
            {
                "isuser": true,
                "text": "Excellent!  For each nomination can you show me the name of the artwork associated with it, and the name of the festival where it was nominated?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the artwork and the festival name for each nomination are listed in the result table. One of them is artwork name Indonesian Idol with festival name Flower Awards",
                "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you update this list to show all of the associated years for each of these festivals?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. The name of the artwork, the festival name, and the year of the festival for each nomination are all shown in the result table.",
                "query": "SELECT T2.Name ,  T3.Festival_Name, T3.YEAR FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which papers were published in an institution in the \"USA\" please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the titles of papers that were published in an institution in the \"USA\".",
                "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\""
            },
            {
                "isuser": true,
                "text": "Can you please tell me which ones of those have \"Turon\" as their second author?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Functional Pearl: Modular Rollback through Control Logging are the titles of the paper that published in an institution in \"USA\" and have \"Turon\" as its second author",
                "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""
            },
            {
                "isuser": true,
                "text": "What is Turon's author id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "54 is the author id of the author with a last name of Turon.",
                "query": "select authid from authors where lname = \"Turon\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please tell me the full names of all faculty who are members of department number 520?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of all faculties who are members of department with department number 520",
                "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
            },
            {
                "isuser": true,
                "text": "What about for department number 600?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of all faculties who are members of the department with department number 600.",
                "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  = 600"
            },
            {
                "isuser": true,
                "text": "What is the sex of each of those faculty who are members of the department with department number 600.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the sex of all faculties who are members of the department with department number 600.",
                "query": "SELECT T1.sex FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  = 600"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tvshow",
        "turns": [
            {
                "isuser": true,
                "text": "Which TV channels do not play any cartoons by Ben Jones?  List the ids.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are ids of the TV channels that don't play any cartoons by Ben Jones.",
                "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'"
            },
            {
                "isuser": true,
                "text": "And which channels play Ben Jones's cartoons?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are ids of the TV channels play any cartoons by Ben Jones. ",
                "query": "SELECT id FROM TV_Channel where id in (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')"
            },
            {
                "isuser": true,
                "text": "What cartoon titles do channels play? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are titles of the cartoons dircted by \"Ben Jose\". For example, one is \"The Rise of the Blue Beetle!\".",
                "query": "SELECT Title FROM Cartoon where directed_by  =  'Ben Jones'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me a list of owner ids and zip codes?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I want you to extract just the owner ids and zip codes from the table. Does it make sense?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I want you to extract just the owner ids and zip codes from the table. Does it make sense?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the owner ids and zip codes from the table are  shown   in the table .",
                "query": "SELECT  \nowner_id,\tzip_code from Owners"
            },
            {
                "isuser": true,
                "text": "Hmm, can you put the owner ids, dog ids and the cost of treatment in a table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the owner ids, dog ids and the cost of treatment   are  shown  in the table ",
                "query": "SELECT T1.owner_id , T2.dog_id ,T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id "
            },
            {
                "isuser": true,
                "text": "Which owner name and id has paid the largest amount of money in total for their dogs?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Just the first name will be fine.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Just the first name will be fine.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first name and id of the owner who has paid the largest amount of money in total for dogs.",
                "query": "SELECT  T1.first_name,T1.owner_id  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "To make sure, can you also show me the last name of Jaclyn?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name of the owner with a first name Jaclyn is Stoltenberg.",
                "query": "SELECT last_name  from Owners where first_name=\"Jaclyn\""
            },
            {
                "isuser": true,
                "text": "As a last thing, can you also tell me the owner id and zip code of Jaclyn Stoltenberg, who has paid the largest amount of money in total for their dogs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  owner id and zip code of this owner who has paid the largest amount of money in total for their dogs  are shown  in the table ",
                "query": "SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye\n",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_in_alabama",
        "turns": [
            {
                "isuser": true,
                "text": "Which event id does not have any participant with the detail Kneyatta Kuhn?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the event ids of events that do not have any participant with the detail \"Kenyatta Kuhn\".",
                "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn'"
            },
            {
                "isuser": true,
                "text": "And how about the detail \"Karlee Batz\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the event ids of events that do not have any participant with the detail \"Karlee Batz\".",
                "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Karlee Batz'"
            },
            {
                "isuser": true,
                "text": "Which event id does have a participant with the detail Kenyatta Kuhn?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "v2/local_govt_in_alabama/query_feedback/c2VsZWN0IEV2ZW50cy5FdmVudF9JRCBmcm9tIEV2ZW50cyxQYXJ0aWNpcGFudHNfaW5fRXZlbnRzLFBhcnRpY2lwYW50cyB3aGVyZSBQYXJ0aWNpcGFudF9EZXRhaWxzPScJS2VueWF0dGEgS3Vobic=/RDWKD5CmxXReNFymW/",
                "query": ""
            },
            {
                "isuser": true,
                "text": "How many events have the event detail fail?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 9 events whose detail is fail.",
                "query": "select count(*) from Events where Event_Details='Fail'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you tell me, which media type is the least common associated with all tracks?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Purchased AAC audio file  is the least common media type in all tracks",
                "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you show me the total number of occurrences for Purchased AAC as the media type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The media type Purchased AAC audio file is used for 7 tracks.",
                "query": "SELECT T1.Name,count(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Can you tell me what the second most common media type is and how many times it's been purchased?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Protected AAC audio file is the second  most common media type and is used for 237 tracks.",
                "query": "SELECT T1.Name,count(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) desc LIMIT 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome, goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wedding",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names and opening years of the three churches that opened most recently?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and opening years of the three churches that opened most recently",
                "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What are the names and opening years of the three churches that opened the earliest?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and opening years of the three churches that opened the earliest.",
                "query": "SELECT name ,  open_date FROM church ORDER BY open_date Asc LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Who were those churches organized by?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the people the three churches that opened earliest were organized by.",
                "query": "SELECT Organized_by FROM church ORDER BY open_date Asc LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "program_share",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Could you provide me with a list of all of the channel IDs for which the \"time of day\" is morning?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " here is all of the channel IDs for which the \"time of day\" is morning",
                "query": "SELECT Channel_ID from  broadcast WHERE Time_of_day  =  'Morning'"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Could you update this list to include the channel name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "sure,here is all of the channel IDs and channel name for channel which the \"time of day\" is morning",
                "query": "SELECT t1.name,t2.Channel_ID FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"
            },
            {
                "isuser": true,
                "text": "Excellent!  Finally, can you show me what the ownership is of each of those stations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is all of the channel IDs and channel name and owner for channel which the \"time of day\" is morning",
                "query": "SELECT t1.name,t2.Channel_ID,Owner FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"
            },
            {
                "isuser": true,
                "text": "Thanks! (My timer is just about to run out!!)",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "I m sorry,welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "display the department id and the total salary for those departments which contains at least two employees.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  the department ids and the total salaries for the departments that contain at least two employees",
                "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "What are the first and last names of employees in department id 90?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is a list of the first and last names of the employees with department ID 90",
                "query": "SELECT FIRST_NAME , LAST_NAME FROM employees where department_id = 90"
            },
            {
                "isuser": true,
                "text": "What department id is Steven King in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the department id of Steven King is 90",
                "query": "select department_ID from employees where FIRST_NAME ='Steven' and LAST_NAME = 'King'"
            },
            {
                "isuser": true,
                "text": "What is Steven King's Salary and Job id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the Salary and Job id of Steven King",
                "query": "select JOB_ID,SALARY from employees where FIRST_NAME ='Steven' and LAST_NAME = 'King'"
            },
            {
                "isuser": true,
                "text": "What is the highest salary and what employee id has it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  the highest salary and the id of employee who has it",
                "query": "select EMPLOYEE_ID,SALARY from employees order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment are \"ASU\" and \"LSU\".",
                "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
            },
            {
                "isuser": true,
                "text": "OK! please give me the names of the colleges where enrollment is greater than 20000",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the the colleges where enrollment is greater than 20000 is \"OU\".",
                "query": "SELECT cName FROM College WHERE enr>20000"
            },
            {
                "isuser": true,
                "text": "Also give me the names of the colleges where enrollment is between 10000 and 20000.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of the colleges where enrollment is between 10000 and 20000. ",
                "query": "SELECT cName FROM College WHERE enr<20000 and enr>10000"
            },
            {
                "isuser": true,
                "text": "Ok. Can you please tell me which college has the lowest enrollment.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the college which has the lowest enrollment is \"ASU\".",
                "query": "SELECT cName FROM College order by enr limit 1"
            },
            {
                "isuser": true,
                "text": "And which college has the highest enrollment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the college which has the highest enrollment is \"OU\".",
                "query": "SELECT cName FROM College order by enr desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "what is the name of the employee that supported the most number of customers? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the full name of the employee that supported the most number of customers is Jane Peacock",
                "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is their id? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the employee that supported the most number of customers is 3",
                "query": "SELECT T1.id FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is their address? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The address of the employee that supported the most number of customers is 1111 6 Ave SW",
                "query": "SELECT T1.address FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks! ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_2",
        "turns": [
            {
                "isuser": true,
                "text": "Howdy!  Can you show me a list of all flight numbers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all flight numbers. For example, one of them is 28.",
                "query": "SELECT FlightNo FROM Flights "
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you update this list to include a column with the destination airport code for each of these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all flight numbers and their destination airport code. For example, one of them is 28 with the destination ASY.",
                "query": "SELECT FlightNo,DestAirport FROM Flights "
            },
            {
                "isuser": true,
                "text": "Nice!  Can you tell the quantity of flights that had Aberdeen or Abilene as their destination cities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the quantity of flights that had Aberdeen or Abilene as their destination cities is 0.",
                "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\""
            },
            {
                "isuser": true,
                "text": "Thank you!  So none of the flights have neither APG nor ABR as their \"destination airport\"?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes.",
                "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\""
            },
            {
                "isuser": true,
                "text": "Okay!  Can you tell me the airport city that has the most flights landing in it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the airport city that has the most flights landing in it is AAF",
                "query": "SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!  ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "How many buildings are in the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of different buildings is 20.",
                "query": "SELECT count(DISTINCT building) FROM classroom"
            },
            {
                "isuser": true,
                "text": "What are the buildings that have more than 50 capacity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of buildings with capacity greater than 50.",
                "query": "SELECT building FROM classroom WHERE capacity  >  50 GROUP BY building"
            },
            {
                "isuser": true,
                "text": "Can you rind me the number of rooms with more than 50 capacity for those 20 buildings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of rooms with capacity greater than 50 is 11.",
                "query": "SELECT count(room_number) FROM classroom WHERE capacity  >  50"
            },
            {
                "isuser": true,
                "text": "Can you show me the number of rooms with capacity greater than 50 for each building?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the number of rooms with capacity greater than 50 for each building. For example, Garfield has 1 room with capacity greater than 50.",
                "query": "SELECT building, count(room_number) FROM classroom WHERE capacity  >  50 group by building"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which countries have Spanish speaking majorities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the country codes of countries where Spanish is spoken by the largest percentage of people",
                "query": "SELECT countrycode FROM (SELECT max(percentage), language, countrycode FROM countrylanguage  GROUP BY countrycode) WHERE language = \"Spanish\""
            },
            {
                "isuser": true,
                "text": "What is the total number of those countries with a Spanish speaking majority?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the total number of  countries with a Spanish speaking majority is 21",
                "query": "SELECT count(countrycode) FROM (SELECT max(percentage), language, countrycode FROM countrylanguage  GROUP BY countrycode) WHERE language = \"Spanish\""
            },
            {
                "isuser": true,
                "text": "Of the 21 countries, how many have Spanish as the official language spoken?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Among  countries with a Spanish speaking majority, 20 countries have Spanish as the official language spoken",
                "query": "SELECT count(countrycode) FROM (SELECT max(percentage), language, countrycode, isOfficial FROM countrylanguage  GROUP BY countrycode) WHERE language = \"Spanish\" AND isOfficial = \"T\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_mdm",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the list of cmi cross reference ids please!",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of cmi cross reference ids are shown in the table.",
                "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references"
            },
            {
                "isuser": true,
                "text": "Which of those cmi cross reference ids are related to parking taxes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cmi cross reference ids that are related to parking taxes are 4 and 81.",
                "query": "SELECT T1.cmi_cross_ref_id FROM cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id = T2.cmi_cross_ref_id"
            },
            {
                "isuser": true,
                "text": "What about cmi cross reference ids that not related?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cmi cross reference ids that not related to parking taxes are listed in the table.",
                "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references where cmi_cross_ref_id not in (Select T1.cmi_cross_ref_id from cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id = T2.cmi_cross_ref_id)"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wedding",
        "turns": [
            {
                "isuser": true,
                "text": "How many churches are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 9 churches. ",
                "query": "SELECT count(*) from church"
            },
            {
                "isuser": true,
                "text": "How many churches had weddings in 2015?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 church that had a wedding in 2015. ",
                "query": "SELECT count(*) FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"
            },
            {
                "isuser": true,
                "text": "Show all church names except or those that had a wedding in year 2015.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the church names except for those that had a wedding in year 2015 are shown in the result table. For example, Alston Church did not have a wedding in year 2015. ",
                "query": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the makers who produced some cars in the year 1970?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the  names of the makers who produced some cars in the year 1970",
                "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"
            },
            {
                "isuser": true,
                "text": "What are the models and makes of the cars produced that year?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the models and makes of the cars produced in the year 1970",
                "query": "SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"
            },
            {
                "isuser": true,
                "text": "What is the full name of the maker that produced the heaviest car in the year 1970?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the full name of the maker that produced the heaviest car in the year 1970 is Ford Motor Company",
                "query": "SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970' ORDER BY T4.weight DESC limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_campaigns_ecommerce",
        "turns": [
            {
                "isuser": true,
                "text": "What are names of customers who have both mailshots in \"order\" outcome?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here are the names of customers who have mailshot with an outcome code \"Order\"",
                "query": "SELECT T2.customer_name  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' "
            },
            {
                "isuser": true,
                "text": "What are the payment methods of those customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the payment methods of customers who have mailshot with an outcome code \"Order\"",
                "query": "SELECT T2.payment_method  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' "
            },
            {
                "isuser": true,
                "text": "Show me names and payment methods of customers who have mailshot with an outcome code \"No Response\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and payment methods of customers who have mailshot with an outcome code \"No Response\"",
                "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_and_lot",
        "turns": [
            {
                "isuser": true,
                "text": "How many services has each resident requested",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the resident id and the number of services they requested. For example, resident 6 has requested one service.",
                "query": "SELECT T1.resident_id ,count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id"
            },
            {
                "isuser": true,
                "text": "List the resident_id,details, and the count in descending order of the count",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the resident_id, details, and the count in descending order of the count. For example, one of them is resident 6 with detail Anderson Batz and number of service 1.",
                "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Tell me the count of total number of residents",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the count of the total number of residents is 15",
                "query": "SELECT count(*) FROM Residents "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entertainment_awards",
        "turns": [
            {
                "isuser": true,
                "text": "Show the number of audience in year 2008 or 2010.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of audiences in the year 2008 or 2010 is 160 and 161.",
                "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
            },
            {
                "isuser": true,
                "text": "How about the chair name for those years?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The chair names for 2008 or 2010 are Arnold Palmer and Lucy Lu.",
                "query": "SELECT Chair_Name FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
            },
            {
                "isuser": true,
                "text": "Are those chairs also the chairs for any years except 2008 and 2010? If so, give me their name and the other years they also were chair for.",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. The chairs for the year 2008 or 2010 weren't the chairs for any year except 2008 and 2010",
                "query": "select chair_name where chair_name in  (SELECT Chair_Name FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010) and year != 2008 and year!=2010"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average latitude of stations located in San Jose city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average latitude of stations located in San Jose city is 37.3364135625",
                "query": "SELECT avg(lat)  FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "What is the average longitude of stations located in San Jose city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average longitude of stations located in San Jose city is -121.89160575.",
                "query": "SELECT avg(long) FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "What are the installation dates for all stations in San Jose city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the installation_date for all stations in San Jose city. For example, one of those installation_date is 8/6/2013",
                "query": "SELECT installation_date FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "What are the names of each of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the installation date in each station. For example, the installation_date of San Jose Diridon Caltrain Station is 8/6/2013.",
                "query": "SELECT name,installation_date FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "What are the dock counts of each of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the dock count in each station. For example, the dock count of San Jose Diridon Caltrain Station is 27.",
                "query": "SELECT name,dock_count FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_assessment",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, how are you!  Can you provide me with a list of all of the email addresses in this database?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "I'm fine, thank you. Here is the list of all of the email addresses in this database.",
                "query": "select email_address from people"
            },
            {
                "isuser": true,
                "text": "Perfect!  Can you update the list to include all of the candidate IDs in addition to these email addresses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Ok, it takes me a long time to do this. The result table shows all of the candidate IDs and their email addresses.",
                "query": "SELECT T2.candidate_id,T1.email_address FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id"
            },
            {
                "isuser": true,
                "text": "Can you filter this list to show only the row that contains the email address of stanley.monahan@example.org?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The candidate with id 151 contains the email address of stanley.monahan@example.org.",
                "query": "select T2.candidate_id, T1.email_address from people AS T1 JOIN Candidates as T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye, you are very nice!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which kinds of grapes are white?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the grapes that are white. For example, one of them is Chardonnay.",
                "query": "SELECT Grape FROM GRAPES WHERE Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "List all the wines that use color white grapes.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "List wines made with white grapes.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "List wines made with white grapes.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is all the information of wines made with white grapes.",
                "query": "SELECT * FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "Excellent. What is their average score?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average score of the wines made with white grapes is 90.19607843137256.",
                "query": "SELECT avg(score) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "What is the average score of wines not made with white grapes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average score of wines not made with white grapes is 89.98847262247838.",
                "query": "SELECT avg(score) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  !=  \"White\""
            },
            {
                "isuser": true,
                "text": "List only the names and scores of wines made with white grapes.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and scores of wines made with white grapes. For example, Sauvignon Blanc has a score of 92.",
                "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "What is the maximum, minimum, and average price of these wines?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The maximum price of these wines is 100.  The minimum price of these wines is 10. The average price of these wines is 36.849673202614376. ",
                "query": "SELECT max(price), min(price),avg(price) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all the songs that have a lower rating than some song of the blues genre?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Shukno patar nupur pae is the only song that has a lower rating than some song of the blues genre",
                "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
            },
            {
                "isuser": true,
                "text": "What are the names of all the songs that have a higher rating than some song of the blues genre?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all the songs that have a higher rating than some song of the blues genre",
                "query": "SELECT song_name FROM song WHERE rating  >  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
            },
            {
                "isuser": true,
                "text": "What are the names and ratings of all songs of the blues genre?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and rating of all songs of the blues genre",
                "query": "SELECT song_name,rating FROM song WHERE  genre_is  =  \"blues\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "party_people",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, can you please provide me with a list of all Event IDs and Event names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the event IDs and event names is shown in the result table. ",
                "query": "SELECT event_id, event_name from party_events"
            },
            {
                "isuser": true,
                "text": "Can you please filter this list to include only the rows that have 'Annual Meeting' as the Event Name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the event IDs and event names with event name \"Annual Meeting\" are shown in the result table ",
                "query": "SELECT event_id, event_name from party_events where event_name = \"Annaual Meeting\" "
            },
            {
                "isuser": true,
                "text": "Can you show me which of the Events on this list took place in the United Kingdom?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all event ids and event names of  events with event name \"Annual Meeting\"  and took place in the United Kingdom are shown in the result table. ",
                "query": "SELECT T3.event_id, T3.event_name FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the number and the log entry id of the engineer visits are required at most for a single fault log.",
                "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the engineer visit id of that fault log entry id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the engineer visit ids for the fault log entry which has the largest number of engineer visits.",
                "query": "SELECT T2.engineer_visit_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id where T2.fault_log_entry_id = (SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What is the contact staff id for that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the contact staff ids for the engineer visits associated with the fault log entry which has the largest number of engineer visits.",
                "query": "SELECT T2.contact_staff_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id where T2.fault_log_entry_id = (SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What is the fault status of that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the fault statuses for the engineer visits associated with the fault log entry which has the largest number of engineer visits.",
                "query": "SELECT T2.fault_status FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id where T2.fault_log_entry_id = (SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What's the fault description for that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The fault description of the fault log entry with the largest number of engineer visits is \"system error\".",
                "query": "SELECT T1.fault_description FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Tell me what the other fault details for that are, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other fault details of the fault log entry with the largest number of engineer visits is \"NULL\".",
                "query": "SELECT T1.other_fault_details FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "What grapes have a score higher than 93?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  distinct grapes  which  have a score higher than 93  are  shown  in the  table ",
                "query": "SELECT  distinct  Grape  FROM WINE WHERE Score  >  93 "
            },
            {
                "isuser": true,
                "text": "What are the appellations whose score is higher than 93? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the appellations whose score is higher than 93  are  shown  in the  table",
                "query": "SELECT  distinct appelation   FROM WINE WHERE Score  >  93 "
            },
            {
                "isuser": true,
                "text": "What are the names of wines whose score is higher than 93?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the names of wines whose score is higher than 93 are shown   in the table ",
                "query": "SELECT   Name   FROM WINE WHERE Score  >  93 "
            },
            {
                "isuser": true,
                "text": "Can you please list the grapes, appellations, and names of wines whose score is higher than 93?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the grapes, appellations, and names of wines whose score is higher than 93 are  shown in the  table ",
                "query": "SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome bye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the countries where either English or Dutch is the official language?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The countries where either English or Dutch is the official language are shown in the result table. ",
                "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\""
            },
            {
                "isuser": true,
                "text": "What is the official language in Belgium?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The official languages of the country named Belgium are shown in the result table. ",
                "query": "SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T1.name = \"Belgium\" and T2.isofficial = \"T\""
            },
            {
                "isuser": true,
                "text": "What are the countries where arabic language is spoken",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The countries where arabic language is spoken are shown in the result table. ",
                "query": "SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T2.language = \"Arabic\" "
            },
            {
                "isuser": true,
                "text": "Please tell me all the languages spoken in Egypt.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Th languages spoken in Egypt are shown in the result table. ",
                "query": "SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T1.name = \"Egypt\" "
            },
            {
                "isuser": true,
                "text": "Can you tell me the number of countries where Arabic is the official language.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of countries where Arabic is the official language is 22. ",
                "query": "SELECT count(T1.name) FROM country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T2.Language = \"Arabic\" and T2.isOfficial = \"T\""
            },
            {
                "isuser": true,
                "text": "Can you please give me the names of these countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the countries with Arabic as the official language are shown in the result table. ",
                "query": "SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code = T2.countrycode where T2.Language = \"Arabic\" and T2.isOfficial = \"T\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "protein_institute",
        "turns": [
            {
                "isuser": true,
                "text": "Show institution names along with the number of proteins for each institution",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of institution names and the number of proteins for each institution.",
                "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"
            },
            {
                "isuser": true,
                "text": "What proteins are associated with Lindenwood University-Belleville?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The protein names associated with the institute Lindenwood University-Belleville are here.",
                "query": "SELECT T2.protein_name   FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id where T1.institution=\"Lindenwood University\u2013Belleville\""
            },
            {
                "isuser": true,
                "text": "Between Centromeric protein E, putative and conserved hypothetical protein, which has the highest divergence from human lineage?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here shows the divergence from human lineage for Centromeric protein E, putative and conserved hypothetical protein. They have the same divergence from human lineage of 782.7",
                "query": "SELECT divergence_from_human_lineage FROM protein where protein_name=\"Centromeric protein E, putative\" or protein_name=\"conserved hypothetical protein\""
            },
            {
                "isuser": true,
                "text": "What is the accession number for Centromeric protein E?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The accession number for Centromeric protein E, putative protein is XP_002429877.1",
                "query": "SELECT accession_number FROM protein where protein_name=\"Centromeric protein E, putative\""
            },
            {
                "isuser": true,
                "text": "What is the sequence identity to human protein value associated with accession number XP_002429877.1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The sequence identity to human protein value associated with accession number XP_002429877.1 is 30%",
                "query": "SELECT sequence_identity_to_human_protein FROM protein where accession_number=\"XP_002429877.1\""
            },
            {
                "isuser": true,
                "text": "Which protein has the highest sequence identity to human protein value?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The protein with the highest sequence identity to human protein value is uncharacterized protein LOC578090",
                "query": "SELECT protein_name FROM protein order by  sequence_identity_to_human_protein desc limit 1"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the populations of every country in Africa?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and populations of countries in continent Africa",
                "query": "SELECT name,population FROM country WHERE Continent  =  \"Africa\""
            },
            {
                "isuser": true,
                "text": "What are the names and populations of every country in Asia?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and populations of countries in continent Asia.",
                "query": "SELECT name,population FROM country WHERE Continent  =  \"Asia\""
            },
            {
                "isuser": true,
                "text": "What are the names of the Asian countries that have a larger population than that of any country in Africa?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the Asian countries that have a larger population than that of any country in Africa.",
                "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")"
            },
            {
                "isuser": true,
                "text": "What are the populations of those countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and populations of the Asian countries that have a larger population than that of any country in Africa.",
                "query": "SELECT Name,population FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")"
            },
            {
                "isuser": true,
                "text": "What are the government forms of those countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and government forms of the Asian countries that have a larger population than that of any country in Africa",
                "query": "SELECT Name,GovernmentForm FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the station name for the id's 1 and  2 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The station name for any station with id 1 or id 2 is shown in the result table. ",
                "query": "SELECT name, id FROM station where id = 1 or id = 2"
            },
            {
                "isuser": true,
                "text": "Which station has dock count higher than 15...",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What are the ids of station that have latitude above 37.4 and never had bike availability below 7 ?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are the ids of station that have latitude above 37.4 and never had bike availability below 7 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of the stations that have altitude above 37.4 and never had bike availability below 7 are shown in the table. ",
                "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
            },
            {
                "isuser": true,
                "text": "Tell me the installation date for the station id 4 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The installation date for the station with id 4 is 8/6/2013. ",
                "query": "SELECT installation_date FROM station WHERE id = 4"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_bus",
        "turns": [
            {
                "isuser": true,
                "text": "what are the names of all drivers? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of all drivers.",
                "query": "SELECT name FROM driver "
            },
            {
                "isuser": true,
                "text": "also give me their driver ids",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of all drivers and their driver ids.",
                "query": "SELECT name, driver_id FROM driver "
            },
            {
                "isuser": true,
                "text": "what are the number of years for working for each driver and their names? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of all drivers and the years of working for each driver.",
                "query": "SELECT t1.name, t2.years_working FROM driver as t1 join school_bus as t2 where t1.driver_id = t2.driver_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "what is the id of balls to the walls",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the ids of balls to the walls. And part of the result is 63 and 64.",
                "query": "SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"
            },
            {
                "isuser": true,
                "text": "what is the name of all tracks in balls to wall",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of tracks of the album with the name balls to the walls. For example, two of them are Desafinado and Garota De Ipanema",
                "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"
            },
            {
                "isuser": true,
                "text": "name the composer of balls to wall",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "v2/store_1/query_feedback/U0VMRUNUIFQyLmNvbXBvc2VyIEZST00gYWxidW1zIEFTIFQxIEpPSU4gdHJhY2tzIEFTIFQyIE9OIFQxLmlkID0gVDIuZ2VucmVfaWQgV0hFUkUgVDEudGl0bGUgPSAiQmFsbHMgdG8gdGhlIFdhbGwiOw==/aS6zhZZXJg2FZ7tx2/",
                "query": ""
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "HoW MANY employees have the letter z in their first name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 employees who contain a letter z in their first name.",
                "query": "select count(*) from employees where first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "What are their first names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first names of employees who contain a letter z in their first name",
                "query": "select first_name from employees where first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "What about their last names?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of employees who contain a letter z in their first name",
                "query": "select first_name,last_name from employees where first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "Can you also show their cities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names, as well as cities of employees who contain a letter z in their first name",
                "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many movies are in the list?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of movies that are on the list is 8",
                "query": "SELECT count(*) FROM Movie "
            },
            {
                "isuser": true,
                "text": "How many directors are on the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of directors on the list is  7",
                "query": "SELECT count(director) FROM Movie "
            },
            {
                "isuser": true,
                "text": "How many of the directors have more than 1 film?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of directors that have more than 1 film is 2",
                "query": "SELECT count(distinct T1.director) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
            },
            {
                "isuser": true,
                "text": "What are the titles from those 2 directors?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the titles of movies directed by directors who had more than one movie",
                "query": "SELECT T1.title  FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
            },
            {
                "isuser": true,
                "text": "What are the years each of these movies were produced?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of  the years of movies directed by directors who had more than one movie",
                "query": "SELECT  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Would you show the transaction type descriptions if the share count is smaller than 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the transaction type descriptions whose share count is smaller than 10  are Purchase and Sale.",
                "query": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
            },
            {
                "isuser": true,
                "text": "What are the dates of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The dates of transactions with a share count smaller than 10 are 1977-08-13 02:18:47 and 2002-04-07 20:28:37.",
                "query": "SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
            },
            {
                "isuser": true,
                "text": "What were the amounts of those transactions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the amounts of transactions with a share count smaller than 10 are 82057.207 and 183.2",
                "query": "SELECT T2.amount_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
            },
            {
                "isuser": true,
                "text": "Would you show the transaction type descriptions if the share count is equal to or larger than 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the transaction type descriptions whose share count is equal to or larger than 10. For example, one of the transaction type descriptions is Sale.",
                "query": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  >=  10"
            },
            {
                "isuser": true,
                "text": "What were the dates of those transactions?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please, if you don't mind?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please, if you don't mind?",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the result table of the transaction dates whose share count is equal to or larger than 10. For example, one of the transaction dates is 1988-09-16 19:02:51.",
                "query": "SELECT T2.date_of_transaction  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  >=  10"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "aircraft",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me the Location and Country of the Round 1 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The location and country for match round 1.0 are Mina' Zayid , Abu Dhabi and United Arab Emirates respectively",
                "query": "SELECT location ,  country FROM match WHERE round = \"1.0\""
            },
            {
                "isuser": true,
                "text": "What is the pilot id of Prof. Zackery Collins ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The pilot id for pilot whose name is Prof. Zackery Collins is 1",
                "query": "SELECT pilot_id FROM pilot WHERE name = \"Prof. Zackery Collins\""
            },
            {
                "isuser": true,
                "text": "What is the name and age of the youngest winning pilot...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and age of the youngest winning pilot are Katheryn Gorczany IV\tand 20.",
                "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Control_Systems",
        "turns": [
            {
                "isuser": true,
                "text": "Hello. What is the name of the employee that has showed up the most in circulation history documents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the employee that has shown up the most in circulation history documents is Kenyon.",
                "query": "SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id group by t1.employee_name order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "How many drafts have they shown up in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total number of drafts made by the employee that has shown up the most in circulation history documents is 3.",
                "query": "SELECT t1.employee_name, sum(t2.draft_number) FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "How many copies have they shown up in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total number of copies made by the employee that has shown up the most in circulation history documents is 5.",
                "query": "SELECT sum(t2.copy_number) FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the apartment type code for each entry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the apartment type codes for each apartment",
                "query": "SELECT apt_type_code FROM Apartments"
            },
            {
                "isuser": true,
                "text": "Can you add to the table the room count for each entry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here are the apartment type codes and room counts of each apartment.",
                "query": "SELECT apt_type_code,room_count FROM Apartments"
            },
            {
                "isuser": true,
                "text": "Can you find the entries with the highest room count and only keep those in the table?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, only for those entries with the highest room count.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, only for those entries with the highest room count.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the apartment type code and room count of the apartment with highest room count.",
                "query": "SELECT apt_type_code,room_count FROM Apartments order by room_count desc limit 1"
            },
            {
                "isuser": true,
                "text": "Sorry, I think I misunderstood the question. Can you display only the apartment type codes again for each entry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Okay. Here are all the apartment type codes.",
                "query": "SELECT apt_type_code FROM Apartments"
            },
            {
                "isuser": true,
                "text": "Can you add up the room counts for each distinct apartment type code and display those values along with their respective department type codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are all the apartment type codes and their sum of the room counts",
                "query": "SELECT apt_type_code ,  sum(room_count) FROM Apartments GROUP BY apt_type_code "
            },
            {
                "isuser": true,
                "text": "Amazing! Can you do add up the bathroom counts and bedroom counts for the department type Flat and add those to the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the apartment type codes, the sums of the room count, the sums of the bathroom count and the sums of the bedroom count of the apartment with the type code \"Flat\"",
                "query": "SELECT apt_type_code ,  sum(room_count), sum(bathroom_count),sum(bedroom_count) FROM Apartments WHERE apt_type_code = \"Flat\""
            },
            {
                "isuser": true,
                "text": "Yes! Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "list the name of the claim processing stage that most of the claims are on",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the claim processing stage that most of the claims are on is \"Open\".",
                "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what is the claim id of open",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows all the claim ids that have the status name open. For example, the claim id '28' has the claim status name 'Open'.",
                "query": "select Claim_ID from Claims_Processing_Stages AS T1 JOIN Claims_Processing AS T2 ON T1.Claim_Stage_ID = T2.Claim_Stage_ID WHERE\tClaim_Status_Name='Open'"
            },
            {
                "isuser": true,
                "text": "include claim stage id in the table",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The claim stage ids in the table \"Claims_Processing\" are \"1\" and \"3\".",
                "query": "select distinct Claim_Stage_ID from Claims_Processing"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_1",
        "turns": [
            {
                "isuser": true,
                "text": "List the name of the company that produces more than one phone model.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the company that produces more than one phone model are shown in the result table. ",
                "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"
            },
            {
                "isuser": true,
                "text": "Hmmm. Please list the name of the company that produces only one phone model.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the company that produces only one phone model are shown in the result table. ",
                "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  =  1;"
            },
            {
                "isuser": true,
                "text": "Ok. Can you show me the models produced by Nokia Corporation?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The models produced by the company named Nokia Corporation are shown in the result table. ",
                "query": "SELECT Hardware_Model_name FROM phone where Company_name = \"Nokia Corporation\""
            },
            {
                "isuser": true,
                "text": "Can you also show me the phone models produced by Samsung?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The  models produced by the company named Nokia Corporation or Samsung Electronics Co Ltd are shown in the result table.",
                "query": "SELECT Hardware_Model_name FROM phone where Company_name = \"Nokia Corporation\" or company_name = \"Samsung Electronics Co Ltd\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "party_host",
        "turns": [
            {
                "isuser": true,
                "text": "Show me a list of party themes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of party themes is shown in the result table. ",
                "query": "SELECT party_theme from party"
            },
            {
                "isuser": true,
                "text": "Can you show me the corresponding party id and host id to each theme?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The party id and host id for each themes are shown in the result table. ",
                "query": "SELECT T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
            },
            {
                "isuser": true,
                "text": "Can you add host names to that table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The host names, party id, host ids, and party theme are shown in the result table. They are displayed in that order for each row. ",
                "query": "SELECT T2.name, T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_product",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all store IDs along with the associated store names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table showing all the store ids and names. For example, the store name of store id 1 is Miramichi.",
                "query": "SELECT store_id, store_name FROM store"
            },
            {
                "isuser": true,
                "text": "Thanks for that!  Can you filter this list to show only the Store ID and Store Name for stores with a district name of Khanewal District?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "No problem! The Khanewal District has one store with store id 1 whose name is Miramichi and another store with store id 2 whose name is Neguac.",
                "query": "SELECT t1.store_id, t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = \"Khanewal District\""
            },
            {
                "isuser": true,
                "text": "Awesome!  Can you update this list to show the ratings of these two stores as well?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Yes please!  That's what I meant!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please!  That's what I meant!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Sure. The list is updated which contains store IDs, store names and their rankings. Miramichi has ranking 2 and Neguac has ranking 3.",
                "query": "SELECT t1.store_id, t1.store_name,t1.ranking FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = \"Khanewal District\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks again!  Is there anything else that I am supposed to do?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks again!  Is there anything else that I am supposed to do?",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "I have no more questions.  Bye!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I have no more questions.  Bye!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Template_Mgt",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you please list all the template IDs and which document IDs they are associated with?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " here is the list all the template IDs and which document IDs they are associated with",
                "query": "SELECT template_id FROM Documents"
            },
            {
                "isuser": true,
                "text": "Thanks!  Unfortunately, I am seeing only the Template_IDs.  Can you update the list to show the document IDs as well?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the list all the template IDs and  the Template_IDs ",
                "query": "SELECT template_id ,Document_ID FROM Documents"
            },
            {
                "isuser": true,
                "text": "Excellent!  Are there any template ids not associated with any document id?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "yes. Here are template ids not associated with any document id",
                "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
            },
            {
                "isuser": true,
                "text": "Alright!  Can you show me a list of the Template_IDs for each template that is not associated with a Document_ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the  list of the Template_IDs for each template that is not associated with a Document_ID",
                "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
            },
            {
                "isuser": true,
                "text": "Nice!  Finally, can you update that list to show the associated template type code for each of these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the list of the Template_IDs for each template that is associated with a Document_ID ",
                "query": "SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID=T2.Template_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the distinct last names of all the students who have president votes and whose advisor is 8741",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the distinct last name of all the students who have president votes and whose advisor is 8741 is Norris.",
                "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
            },
            {
                "isuser": true,
                "text": "Give me the name for the student 1001",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "first name and the last name please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "first name and the last name please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name and first name of the student 1001 are Smith and Linda. ",
                "query": "SELECT lname, fname from student where stuID = \"1001\""
            },
            {
                "isuser": true,
                "text": "can you give me the students with president vote 1004",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "first and last names please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "first and last names please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the first and last names of the students with president vote 1004. For example, one of them is Linda Smith.",
                "query": "SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PRESIDENT_VOTE = \"1004\""
            },
            {
                "isuser": true,
                "text": "Can you give me the first and last names for students with Vice President vote 1017",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the first and last names of the students with Vice President vote 1017. For example, one of them is Tracy Kim.",
                "query": "SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Vice_President_Vote = \"1007\""
            },
            {
                "isuser": true,
                "text": "Give me the age for Linda Smith ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the age for the student with full name Linda Smith is 18",
                "query": "SELECT age FROM STUDENT where lname = \"Smith\" and fname = \"Linda\""
            },
            {
                "isuser": true,
                "text": "Give me the names of all the students",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all students' full names. For example, one of them is Tracy Kim.",
                "query": "SELECT lname, fname FROM STUDENT "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_mdm",
        "turns": [
            {
                "isuser": true,
                "text": "How are you!  Can you provide me with a list of all of the \nmaster customer ids and corresponding cmi details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all of the master customer ids and corresponding cmi details. For example, one of them is 1 and Schmitt-Lang.",
                "query": "SELECT master_customer_id, cmi_details from Customer_Master_Index\n"
            },
            {
                "isuser": true,
                "text": "This is great!  Can you update this list to also show the corresponding  cmi cross reference ids for each line of this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all of the master customer ids, corresponding cmi details and the corresponding cmi cross reference ids. For example, one of them is 4, Schmidt, Kertzmann and Lubowitz, and 2.",
                "query": "SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id from customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id\n"
            },
            {
                "isuser": true,
                "text": "Can you filter this list so that the only rows that are displayed are those containing \"Gottlieb, Becker and Wyman\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the master customer ids, corresponding cmi details and the corresponding cmi cross reference ids where cmi details is \"Gottlieb, Becker and Wyman\".",
                "query": "SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb, Becker and Wyman'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find me the 5 customers who most recently purchased something.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I need the first name and last name please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I need the first name and last name please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that contains the first names and the last names of the five customers who most recently purchased something.",
                "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "How about their cities and states?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that contains the first names, last names, cities and states of the five customers who most recently purchased something.",
                "query": "SELECT T1.first_name ,  T1.last_name, T1.city, T1.state FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "Can you also give me the countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that contains the first names, last names, cities, states, and countries of the five customers who most recently purchased something.",
                "query": "SELECT T1.first_name ,  T1.last_name, T1.city, T1.state, T1.country FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "How about their e-mail addresses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the emails of the five customers who most recently purchased something.",
                "query": "SELECT T1.email FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there! How many different semesters does this list have?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!  My apologies for being unclear.  How many different semester name types are on this list?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!  My apologies for being unclear.  How many different semester name types are on this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The different semester  names  are shown   in the table.",
                "query": "SELECT distinct semester_name FROM Semesters "
            },
            {
                "isuser": true,
                "text": "Awesome!  Much appreciated!  Can you filter this list to show just the semester names which do not have any \nstudent enrolment ids associated, or in other words semesters which do not have any students enrolled?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  semester  name which  not  have  any  student  enrolled   are shown   in the table.",
                "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update this list to show the associated semester IDs and semester descriptions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  id, name, and descriptions of the semesters which do not have any student enrolled are shown in the table.",
                "query": "SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You  are  welcome and  goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "university_basketball",
        "turns": [
            {
                "isuser": true,
                "text": "what location are the clemson teams?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The location of the university with the team named Clemson is New Brunswick, NJ. ",
                "query": "SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
            },
            {
                "isuser": true,
                "text": "what scores were Clemson's home games?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The score of the home games of the university that has Clemson in its team name is 14\u20132. ",
                "query": "SELECT t2.All_Home FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
            },
            {
                "isuser": true,
                "text": "How about the road game scores for Clemson?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The road game score of the university that has Clemson in its team name is 6\u20135.",
                "query": "SELECT t2.All_Road FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
            },
            {
                "isuser": true,
                "text": "What about all games score for the Clemson school?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The all game score of school that has Clemson as its team name is 24\u201310. ",
                "query": "SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
            },
            {
                "isuser": true,
                "text": "How about for the Duke school?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The all game score of the school that has Duke as its team name is 28\u20136. ",
                "query": "SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Duke'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_policies",
        "turns": [
            {
                "isuser": true,
                "text": "Which kind of policy type was chosen by the most customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The policy type was chosen by the most customers is \"Travel\".",
                "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what about the least?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The policy type was chosen by the least customers is \"Life\".",
                "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is Policy_Type_Code of Customer_ID 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The policy type codes of the customer with id \"3\" are \"Car\" and \"Travel\".",
                "query": "SELECT Policy_Type_Code FROM Customer_Policies where Customer_ID='3'"
            },
            {
                "isuser": true,
                "text": "What is the Start Date of Policy ID 143?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The start date of the policy with id \"143\" is \"2017-06-16\".",
                "query": "SELECT Start_Date FROM Customer_Policies where Policy_ID='143'"
            },
            {
                "isuser": true,
                "text": "What is the Policy ID of Policy Type Life?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The policy id of the policy type named \"Life\" are \"141\" and \"270\".",
                "query": "SELECT Policy_ID FROM Customer_Policies where Policy_Type_Code='Life'"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_employee",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all company IDs, with their names and headquarters locations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of all company IDs with names and headquarters locations. For example, the company id is 1.0, its name is ExxonMobil and its headquarters locations is in USA.",
                "query": "SELECT Company_ID,Name,Headquarters FROM company"
            },
            {
                "isuser": true,
                "text": "Could you filter this same list to list only the Headquarter countries that have more than one company in them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The headquaeters that have more than one company are China, UK and USA. For example, one of the company in China is Agricultural Bank of China with id is 19.0. One of company in UK is BP with id is 11.0. And one of the company in USA is Walmart with id is 16.0.",
                "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*) >= 2"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update this list to show how many companies are located in each of these 3 countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 companies where headquarters locations is USA. There are 2 companies where headquarters locations is UK. And there are 4 companies where headquarters locations is China.  ",
                "query": "SELECT count(Headquarters = 'USA' OR NULL) as USA,count(Headquarters = 'China' OR NULL) as China, count(Headquarters = 'UK' OR NULL) as UK\n FROM company  "
            },
            {
                "isuser": true,
                "text": "I think that's think information I'm looking for.  Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_employee",
        "turns": [
            {
                "isuser": true,
                "text": "What are some companies with more than 200 sales?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of company names with more than 200 sales",
                "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200"
            },
            {
                "isuser": true,
                "text": "Can you sort the list in descending order of sales and profits",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. This lists the names of company with more than 200 sales in the descending order of sales and profits.",
                "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
            },
            {
                "isuser": true,
                "text": "How many companies are in the list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 companies with more than 200 sales",
                "query": "SELECT count(*) FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
            },
            {
                "isuser": true,
                "text": "Can you show me the list in descending order of sales and profits again?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. This lists the names of company with more than 200 sales in the descending order of sales and profits.",
                "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tvshow",
        "turns": [
            {
                "isuser": true,
                "text": "Which country tv channels some cartoon written by todd casey?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "some cartoons written by Todd Casey are playing in some tv channels in countries of The United Kingdom and Italy.",
                "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'"
            },
            {
                "isuser": true,
                "text": "What is the title of cartoon written by todd casey?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The tiles of cartoons written by Todd Casey is Enter the Outsiders! and Return of the Fearsome Fangs!",
                "query": "SELECT title FROM cartoon  WHERE written_by  =  'Todd Casey'"
            },
            {
                "isuser": true,
                "text": "Who directed the cartoon titled enter the outsiders?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Michael Chang directed the cartoon titled Enter the Outsiders!.",
                "query": "SELECT directed_by FROM cartoon WHERE title = \"Enter the Outsiders!\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the resolutions of all songs with a rating lower than 8?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the resolutions of all songs with a rating lower than 8.",
                "query": "SELECT resolution FROM song WHERE rating  <  8"
            },
            {
                "isuser": true,
                "text": "What are the IDs and resolutions of all the songs with resolutions higher than those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There isn't any song that has a resolution higher than the resolutions of all songs with a rating lower than 8.",
                "query": "SELECT f_id,resolution FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
            },
            {
                "isuser": true,
                "text": "What are the IDs and resolutions of all the songs with resolutions higher than or equal to 1080?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids and resolutions of all songs with a resolution higher than or equal to 1080.",
                "query": "SELECT f_id,resolution FROM song WHERE resolution  >= 1080"
            },
            {
                "isuser": true,
                "text": "What are the song names and ratings of those songs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and rating of the songs with a resolution higher than or equal to 1080.",
                "query": "SELECT song_name,rating FROM song WHERE resolution  >= 1080"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Docs_and_Epenses",
        "turns": [
            {
                "isuser": true,
                "text": "What are the account details with the largest value?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The account details of largest value is 930.14",
                "query": "SELECT Account_details FROM Accounts order by Account_details desc limit 1"
            },
            {
                "isuser": true,
                "text": "What about the account details with the value having the character '5' in it, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the account details with the value having the character '5' in it. For eaxmple, they are 1230.454 and 199.52",
                "query": "SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
            },
            {
                "isuser": true,
                "text": "What are the statement ids of those accounts, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the statement id of  accounts that have the character '5' in their details. ",
                "query": "SELECT Statement_ID FROM  Accounts WHERE Account_details LIKE \"%5%\""
            },
            {
                "isuser": true,
                "text": "What about the account details with the value having the character '9' in it, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the account details with the value having the character '9' in it . For example, they are 11130.23, 1168.32",
                "query": " SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%9%\""
            },
            {
                "isuser": true,
                "text": "Could you tell me the account ids of those accounts too?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table  of the account ids with the details having the character '9 'in it. ",
                "query": "SELECT Account_ID FROM Accounts WHERE Account_details LIKE \"%9%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "scientist_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the project with the highest hours?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the project with the highest hours is A Magnetic Primer Designer.",
                "query": "SELECT name FROM Projects order by hours desc limit 1"
            },
            {
                "isuser": true,
                "text": "What are the names of the scientists assigned to that project?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "There is no record of the names of the scientists assigned to that project. ",
                "query": " SELECT T3.name FROM AssignedTo AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.Name = 'A Magnetic Primer Designer'"
            },
            {
                "isuser": true,
                "text": "What is the code of the project A Magnetic Primer Designer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The code of project A Magnetic Primer Designer is Bte2.",
                "query": " SELECT code from Projects WHERE Name = 'A Magnetic Primer Designer'"
            },
            {
                "isuser": true,
                "text": "What are the scientist codes assigned to the project Bte2?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There is no such code of scientist who is assigned to the project Bte2.",
                "query": " SELECT Scientist from AssignedTo where Project = 'Bte2'"
            },
            {
                "isuser": true,
                "text": "Who are the scientists who are not assigned to the project Bte2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The codes of scientists who are not assigned to the project Bte2 are listed.",
                "query": "SELECT Scientist from AssignedTo where Project != 'Bte2'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "farm",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the official names of the cities that have hosted more than one competition?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The official name of the city that has hosted more than one competition is Aroostook",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Show me the official names of the cities that have hosted only one competition?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the official names of the cities that have hosted one competition. For example, Grand Falls/Grand-Sault is one of the cities that have hosted one competition.",
                "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  =  1"
            },
            {
                "isuser": true,
                "text": "What were the themes of each of those competitions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the official names of the cities that have hosted one competition and the themes of their competitions.",
                "query": "SELECT T1.Official_Name, T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) = 1"
            },
            {
                "isuser": true,
                "text": "What is the census rating of the city with the official name \"Plaster Rock\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The census rating of the city with the official name \"Plaster Rock\" is 1936 of 5,008",
                "query": "SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID where T1.Official_Name = \"Plaster Rock\" "
            },
            {
                "isuser": true,
                "text": "What is the census rating of the city that hosted the competition with the theme \"Carnival M is back!\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "636 of 5008 is the census ranking of the city that hosted the competition with the theme \"Carnival M is back!\".",
                "query": "SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID where T2.Theme = \"Carnival M is back!\" "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What is the highest number of skills needed to fix a part fault?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the name of the part that requires the most amount of skills to fix?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the name of the part that requires the most amount of skills to fix?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  name of  the part that requires the most amount of skills to fix is top",
                "query": "SELECT  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many skills does it need?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The count of skills required by the part fault which requires most skills is 8.",
                "query": "SELECT   count(*) FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id   GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the part id for the top part fault?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": " the part id for the part fault that requires the most skills is 1",
                "query": "SELECT   T1.part_id  FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id   GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "battle_death",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please show the names of the battles that had no ships lost in the 'English Channel'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure! Here are the names of the battles with no ships lost in the 'English Channel'.",
                "query": "SELECT name FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'"
            },
            {
                "isuser": true,
                "text": "What are the results of those battles?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the list of results of the battles with no ships lost in the 'English Channel'.",
                "query": "SELECT RESULT  FROM battle where name not in (SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')"
            },
            {
                "isuser": true,
                "text": "Who are the Bulgarian commanders of those battles, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Bulgarian commanders of the battles with no ships lost in the 'English Channel' are listed here.",
                "query": "SELECT bulgarian_commander FROM battle where name not in (SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')"
            },
            {
                "isuser": true,
                "text": "What were the dates of those battles?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here we show the dates for the battles with no ships lost in the 'English Channel'.",
                "query": "SELECT date FROM battle where name not in (SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')"
            },
            {
                "isuser": true,
                "text": "What ship type was in those battles?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Who were the latin commanders of those battles?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Who were the latin commanders of those battles?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here we show the latin commanders of the battles with no ships lost in the 'English Channel'.",
                "query": "SELECT  latin_commander  FROM battle where name not in (SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "theme_gallery",
        "turns": [
            {
                "isuser": true,
                "text": "how many exhibition are presented on the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of exhibitions presented on the table is 6",
                "query": "SELECT count(*) FROM exhibition "
            },
            {
                "isuser": true,
                "text": "list out the exhibition name",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "ok fine then list out the artists name",
                "query": ""
            },
            {
                "isuser": true,
                "text": "ok fine then list out the artists name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of artist names. For example, one of them is Vijay Singh",
                "query": "SELECT name FROM artist "
            },
            {
                "isuser": true,
                "text": "what is the age of Vijay Singh",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the age of artist named Vijay Singh is 45",
                "query": "SELECT age FROM artist where name = \"Vijay Singh\""
            },
            {
                "isuser": true,
                "text": "what is the highest ticket price on the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the highest ticket price is 29.95",
                "query": "SELECT ticket_price FROM exhibition order by ticket_price desc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the theme and artist name for the exhibition with a ticket price higher than the average?\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the themes and artist names for the exhibitions with ticket prices higher than the average. For example, one of the exhibition has a theme of Santa Claus with the name Vijay Singh.",
                "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "riding_club",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the players?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are all the player names ",
                "query": "SELECT player_name from player"
            },
            {
                "isuser": true,
                "text": "Who are their coaches?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the player names with the names of their coaches",
                "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID "
            },
            {
                "isuser": true,
                "text": "Show me these names in descending order based on number of player votes.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of players and names of their coaches in descending order of the votes of players.",
                "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC"
            },
            {
                "isuser": true,
                "text": "also Show me the gender of the coaches and players.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name and gender of players and their coaches in descending order of the votes of players",
                "query": "SELECT T3.Player_name, T3.gender, T2.coach_name, T2.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC"
            },
            {
                "isuser": true,
                "text": "How many votes did each player receive?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name of the players with their corresponding votes.",
                "query": "SELECT player_name, votes from player"
            },
            {
                "isuser": true,
                "text": "Please list this in descending order.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name of the players with their corresponding votes in a descending order",
                "query": "SELECT player_name, votes from player order by votes desc"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show all student IDs with more than a total of 10 hours per week on all sports played please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the all student ids with more than a total of 10 hours per week on all sports played.",
                "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek) > 10"
            },
            {
                "isuser": true,
                "text": "Which of those were just football?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "* I have left the chat *",
                "query": "SELECT StuID FROM Sportsinfo where SportName='Football'"
            },
            {
                "isuser": true,
                "text": "What's the average hours per week all students played football?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average hours per week all students played football is 26.",
                "query": "select avg(HoursPerWeek) from SportsInfo where SportName='Football'"
            },
            {
                "isuser": true,
                "text": "What's the average hours per week all students played athletics?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average hours per week all students played football is 24",
                "query": "select avg(HoursPerWeek) from SportsInfo"
            },
            {
                "isuser": true,
                "text": "What are all sports names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the all names of the sports.",
                "query": "select distinct SportName from SportsInfo"
            },
            {
                "isuser": true,
                "text": "What's the average hours per week all students played Lacrosse?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average hours per week all students played Lacrosse is 33.",
                "query": "select avg(HoursPerWeek) from SportsInfo where SportName='Lacrosse'"
            },
            {
                "isuser": true,
                "text": "What are the student IDs of those students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the all student ids.",
                "query": "SELECT StuID FROM Sportsinfo"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "hey, which 3 players won the most player awards? list their full name and id",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full names and the ids of the 3 players that won the most player awards",
                "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
            },
            {
                "isuser": true,
                "text": "who among the three players is the youngest?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes, the youngest.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes, the youngest.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Joe DiMaggio is the full name of the player that is the youngest among  the 3 players who won the most player awards",
                "query": "select name_first, name_last from player where player_id in (SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3) order by birth_year, birth_month, birth_day desc limit 1"
            },
            {
                "isuser": true,
                "text": "what are the ages of the other two?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full name and birth days of the 3 players who won the most player awards",
                "query": "select name_first, name_last, birth_year, birth_month, birth_day  from player where player_id in (SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3) order by birth_year desc"
            },
            {
                "isuser": true,
                "text": "which teams did the three play for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ID and the league id of the 3 players who won the most player awards",
                "query": "SELECT T1.player_id, T2.league_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "match_season",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please let me know the country name of ID which has Dublin as its capital?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "Yes, sorry that I didn't make it clear. I meant the corresponding name and ID of the country for Dublin as capital, in the \"country\" table.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, sorry that I didn't make it clear. I meant the corresponding name and ID of the country for Dublin as capital, in the \"country\" table.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The country name and ID of the country which has Dublin as capital are Ireland and 4 respectively.",
                "query": "SELECT country_name, country_id FROM country where Capital  =  \"Dublin\""
            },
            {
                "isuser": true,
                "text": "Thank you. Then could you please show me the positions of players from Ireland? So country ID 4",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the positions of the players from the coutry with id 4",
                "query": "SELECT position FROM match_season where country = 4"
            },
            {
                "isuser": true,
                "text": "Great, thank you. What about their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the players from the coutry with id 4",
                "query": "SELECT player FROM match_season where country = 4"
            },
            {
                "isuser": true,
                "text": "Thank you. Then could you please show me the players from Iraq?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes, the 'player' field, so names.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes, the 'player' field, so names.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "There is no player on the table from Iraq",
                "query": "SELECT T1.player FROM match_season as T1 join country as T2 on T1.country = T2.country_id where T2.country_name =  \"Iraq\""
            },
            {
                "isuser": true,
                "text": "haha somewhat thought so. Thanks! Have a great day ahead :)",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. You too! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wrestler",
        "turns": [
            {
                "isuser": true,
                "text": "Show the teams that have wrestlers eliminated by \"Orton\".",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The team that has wrestlers eliminated by \"Orton\" is \"Team Batista\".",
                "query": "SELECT Team FROM Elimination WHERE Eliminated_By = \"Orton\""
            },
            {
                "isuser": true,
                "text": "Show me the teams that have wrestlers eliminated by \"Benjamin\".",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The team that has wrestlers eliminated by \"Benjamin\" is \"Team Batista\".",
                "query": "SELECT Team FROM Elimination WHERE Eliminated_By = \"Benjamin\""
            },
            {
                "isuser": true,
                "text": "What was the elimination move when the wrestlers in team Batista were eliminated by \"Benjamin\".",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The elimination move when the wrestlers in \"Team Batista\" were eliminated by \"Benjamin\" is \"Paydirt\".",
                "query": "SELECT Elimination_Move FROM Elimination WHERE Eliminated_By = \"Benjamin\" and team='Team Batista'"
            },
            {
                "isuser": true,
                "text": "And what was the time duration in this case?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The time duration when the wrestlers in \"Team Batista\" were eliminated by \"Benjamin\" is 07:38.",
                "query": "SELECT Time FROM Elimination WHERE Eliminated_By = \"Benjamin\" and team='Team Batista'"
            },
            {
                "isuser": true,
                "text": "Show me the teams that have wrestlers eliminated by \"Punk\".",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The team that has wrestlers eliminated by \"Punk\" is \"Team Orton\".",
                "query": "SELECT \tTeam FROM Elimination WHERE Eliminated_By = \"Punk\""
            },
            {
                "isuser": true,
                "text": "Hmmm. And what was the elimination move used?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The elimination move used when \"Team Orton\" was eliminated by \"Punk\" is \"Go To Sleep\".",
                "query": "SELECT Elimination_Move FROM Elimination WHERE Eliminated_By = \"Punk\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "How many students have the family name \"Zieme\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there is one student who has the family name \"Zieme\"",
                "query": "select count(student_id) from Students where family_name = \"Zieme\""
            },
            {
                "isuser": true,
                "text": "What is that student's personal name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the personal name of the student whose family name is Zieme is Bernie",
                "query": "select personal_name from Students where family_name = \"Zieme\""
            },
            {
                "isuser": true,
                "text": "Great! What was his enrollment date?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the  enrollment date of the student  with  personal name Bernie  and family name \"Zieme\" is 2017-10-10 10:05:03",
                "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
            },
            {
                "isuser": true,
                "text": "And the completion date?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the completion date of the student with personal name is Bernie and family name \"Zieme\"  is 2018-03-19 07:34:05",
                "query": "SELECT  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
            },
            {
                "isuser": true,
                "text": "Okay. When was his latest logon?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the date of last logon for the student with personal name is Bernie and family name \"Zieme\" is 2017-09-09 13:19:18",
                "query": "select date_of_latest_logon from Students where personal_name = 'Bernie' and family_name = 'Zieme'"
            },
            {
                "isuser": true,
                "text": "Great! I appreciate your help. Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "loan_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  How are you?  Can you show a list of all customer IDs for customers who have loans in the amount of 5000 or more?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is  a list of all customer IDs for customers who have loans with a total amount of 5000 or more",
                "query": "SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >=  5000"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you update that list to include the customer names and their account balances?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of ids, names, and account balances for customers who have loans with a total amount of 5000 or more",
                "query": "SELECT T1.cust_id,T1.cust_name,T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >=  5000"
            },
            {
                "isuser": true,
                "text": "Awesome!  Finally, can you show me the number of loans and credit score for Owen?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the number of loan and credit score for the customer named Owen.",
                "query": "SELECT T1.credit_score,count(*) FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id where T1.cust_name = \"Owen\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "What movies contain the words \"deleted scenes\" in the column Special Features?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the information for movies that have 'Deleted Scenes' as a substring in the special feature. For example, one of them is ACADEMY DINOSAUR.",
                "query": "SELECT * FROM film WHERE special_features LIKE '%Deleted Scenes%'"
            },
            {
                "isuser": true,
                "text": "How many movies contain the words \"Deleted scenes\" in the Special Features column?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of movies that contain the words \"Deleted scenes\" in the Special Features is 503.",
                "query": "SELECT count(*) FROM film WHERE special_features LIKE '%Deleted Scenes%'"
            },
            {
                "isuser": true,
                "text": "What are their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of movies that contain the words \"Deleted scenes\" in the Special Features. For example, one of them is  ACADEMY DINOSAUR.",
                "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_and_lot",
        "turns": [
            {
                "isuser": true,
                "text": "What organization id Denesik and Sons Party?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of organization with details of Denesik and Sons Party is 8",
                "query": "SELECT organization_id FROM Organizations\n where organization_details  =  'Denesik and Sons Party'"
            },
            {
                "isuser": true,
                "text": "What are the service type code of service id 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the service type code of service with id 10 is Cleanning",
                "query": "SELECT service_type_code FROM services\n where service_id  =  '10'"
            },
            {
                "isuser": true,
                "text": "What organization details of service id 11?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The organization detail of service id 11 is Reinger, Hudson and Nolan Group",
                "query": "SELECT T2.organization_details FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE  t1.service_id =  '11'"
            },
            {
                "isuser": true,
                "text": "What is the distinct service type that are provided by the organization which has detail 'Denesik and Sons Party'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the distinct service type that is provided by the organization which has detail 'Denesik and Sons Party'. For example, one of them is Moving Out.",
                "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "solvency_ii",
        "turns": [
            {
                "isuser": true,
                "text": "What is the most common type code of all the products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most common type code of all products is Food.",
                "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1\n\n"
            },
            {
                "isuser": true,
                "text": "What are the product names of all products with the type code \"Food\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the product names of products with type code \"Food\"",
                "query": "SELECT Product_Name FROM Products WHERE Product_Type_Code = \"Food\""
            },
            {
                "isuser": true,
                "text": "What are the prices of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The prices of the products with type code \"Food\" are as follows.",
                "query": "SELECT Product_Price FROM Products WHERE Product_Type_Code = \"Food\""
            },
            {
                "isuser": true,
                "text": "What are the names and prices of all products with the type code books?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the names and prices of the products with type code \"Books\".",
                "query": "SELECT Product_Name, Product_Price FROM Products WHERE Product_Type_Code = \"Books\""
            },
            {
                "isuser": true,
                "text": "What are the name and type code of the product with the highest price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product with name Dinning and type code Food has the highest price.",
                "query": "SELECT Product_Name, Product_Type_Code FROM Products ORDER BY Product_Price DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Can you list all product names and their corresponding type codes of the products with prices below the average price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the names of products and product type codes of products with product price below the average product price.",
                "query": "SELECT Product_Name, Product_Type_Code FROM Products WHERE Product_Price < (SELECT AVG(Product_Price) FROM Products)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "restaurant_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, how many students are over 18?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students who are over 18 is 19",
                "query": "SELECT count(*) from student where age > 18"
            },
            {
                "isuser": true,
                "text": "Perfect, and how many of those students are majoring in 600?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of  students who are majoring in 600 is 18",
                "query": "SELECT count(*) FROM Student WHERE  Major = 600;"
            },
            {
                "isuser": true,
                "text": "Can you list each student's first and last name?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes that are over 18 as well.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes that are over 18 as well.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of student's first and last name who are majoring in 600 and over 18. For example, one of them is Tracy Kim.",
                "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Please show me the names of wines by Brander winery. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of wines by Brander winery. For example, one of them is Cuvee Nicolas.",
                "query": "SELECT Name FROM WINE WHERE Winery = \"Brander\""
            },
            {
                "isuser": true,
                "text": "Hmm, can you add the production years?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and production years of wines by Brander winery. For example, one of them is Cuvee Nicolas with production year being 2009.",
                "query": "SELECT Name,Year FROM WINE WHERE Winery = \"Brander\""
            },
            {
                "isuser": true,
                "text": "What are the names of wines whose production year are before the year of all wines by Brander winery?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of wines whose production year are before the year of all wines by Brander winery. For example, one of them is Old Kraft Vineyard.",
                "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "machine_repair",
        "turns": [
            {
                "isuser": true,
                "text": "List out the all technician name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name for all the technicians are shown in the result table. They Joe Sewell, John Brown, and so on.",
                "query": "SELECT Name FROM technician"
            },
            {
                "isuser": true,
                "text": "list out the all machine id ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All machine ids are shown in the table. They are 1, 2, 3, etc.",
                "query": "SELECT machine_id FROM repair_assignment"
            },
            {
                "isuser": true,
                "text": "list out the all technician age",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Ages for all technicians are listed. For example, technician with id 1 has an age of 37.",
                "query": "SELECT technician_id, age FROM technician"
            },
            {
                "isuser": true,
                "text": "list the name of technician who have not been assigned to repair machines",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the technicians who have not  been assigned to any repair machines are Mark Sewell, Lou Boudreau, Joe Cochrane, Eddie Collins, and Mickey Cochrane.",
                "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names who have a membership level higher than 4?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the visitors who have a membership higher than 4 are shown in the result table. ",
                "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 "
            },
            {
                "isuser": true,
                "text": "And can you add a column showing their age?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the name and age of the visitors who have a membership higher than 4 are shown in the result table. ",
                "query": "SELECT name, age FROM visitor WHERE Level_of_membership  >  4 "
            },
            {
                "isuser": true,
                "text": "And now sort the list by age with oldest first.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and age of the visitors who have a membership higher than 4 sorted by age descending are shown in the result table.",
                "query": "SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "OK...what are their customer IDs?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "OK...what are their customer IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer ids of the visitors who have a membership higher than 4 sorted by age descending are shown in the result table. ",
                "query": "SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "How many dog owners live in Virginia?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of dog owners who live in Virginia is 1.",
                "query": "SELECT count(*) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'"
            },
            {
                "isuser": true,
                "text": "What is their name?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the dog owner who lives in Virginia is Melisa DuBuque.",
                "query": "SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'"
            },
            {
                "isuser": true,
                "text": "And the name of their dog?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the dog of the owner who lives in Virginia is Bessie.",
                "query": "SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'"
            },
            {
                "isuser": true,
                "text": "What breed of dog is bessie?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The breed code of the dog whose owner name is Bessie is BUL.",
                "query": "SELECT T2.breed_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.name = \"Bessie\""
            },
            {
                "isuser": true,
                "text": "And what size dog is she?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The size code of the dog whose owner name is Bessie is MED.",
                "query": "SELECT T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.name = \"Bessie\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you list the film ID of the film with the most copies in the inventory?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "1 is the film ID of the film with the most copies in the inventory",
                "query": "SELECT  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you show include the flim's title to that list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the title and id of the film that has the most copies in the inventory.",
                "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Great!  Can I see the description for that movie, in addition to its rating and special features?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the description, rating, and special features of the film that has the most copies in the inventory",
                "query": "SELECT T1.description, T1.rating,T1.special_features FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_card_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "What are the first and last names of all customers who don't have an account?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of all customers who don't have an account.",
                "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
            },
            {
                "isuser": true,
                "text": "Can you list the addresses of all customers that have VIP as their other account details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the addresses of customers who have VIP as their other account details.",
                "query": "SELECT T1.customer_address FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id where T2.other_account_details = 'VIP'"
            },
            {
                "isuser": true,
                "text": "COuld you list the account names of all customers with the letter G or A in their first or last names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the account names of customers with the letter G or A in their first or last names.",
                "query": "SELECT T2.account_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id where T1.customer_first_name like \"%G%\" or T1.customer_first_name like \"%A%\" or T1.customer_last_name like \"%G%\" or T1.customer_last_name like \"%A%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name and gender of the staff who have been assigned the job of Sales Person but never Clerical Staff.",
                "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
            },
            {
                "isuser": true,
                "text": "What's the name and gender of the staff with the job of Sales Person?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name and gender of the staff with the job of Sales Person.",
                "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\";"
            },
            {
                "isuser": true,
                "text": "What's the name and gender of the staff who was never assigned to Clerical Staff.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name and gender of the staff who was never assigned to Clerical Staff.",
                "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "Which semester did bachelor students enroll? List the id.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the ids of the semesters that bachelor students got enrolled in.",
                "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'"
            },
            {
                "isuser": true,
                "text": "What is the degree summary description of student with id 14?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The degree summary description for the student with id 14 are qui and officiis.",
                "query": "SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.student_id = 14"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you give me a list of all of the forenames and surnames of the various drivers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. The forenames and surnames of all drivers are listed in the result table.",
                "query": "SELECT forename ,  surname FROM drivers"
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show just the forename and surname of the driver who has the smallest lap time?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The forename and surname of the driver who has the smallest lap times are Lewis and Hamilton.",
                "query": "SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Perfect!  Can you tell me what the nationality or country of origin of Lewis and Hamilton is?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The nationality of the driver whose forename is Lewis and surname is Hamilton is British.",
                "query": "SELECT nationality FROM drivers WHERE forename = \"Lewis\" and surname = \"Hamilton\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_4",
        "turns": [
            {
                "isuser": true,
                "text": "WHAT IS THE AIRPORT NAME OF GORKA CITY IN AIRPORT TABLE?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The airport's name which located in the city \"Goroka\" is \"Goroka Airport\".",
                "query": "select name from airports where city='Goroka'"
            },
            {
                "isuser": true,
                "text": "MADANG CITY SITUATED IN WHICH COUNTRY? IN AIRPORT TABLE",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city \"Madang\" situated in the county \"Papua New Guinea\".",
                "query": "select country from airports where city='Madang'"
            },
            {
                "isuser": true,
                "text": "WHAT IS THE ROUTE ID OF AIRLINE 410? IN ROUTE TABLE?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the route id of airline id 410. For example, one of the route id of airline id 410 is 37.",
                "query": "select distinct rid from routes where alid='410'"
            },
            {
                "isuser": true,
                "text": "THANKS!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sakila_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the first names of customers who have a rental date on or before 2005-08-23?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of customers who have a rental date on or before 2005-08-23 are listed in the table.",
                "query": "SELECT first_name FROM customer WHERE customer_id IN( SELECT customer_id FROM rental WHERE rental_date  <=  '2005-08-23 00:00:00' )"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know the customer ids who have not rented any films after '2005-08-23 02:06:01' please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer ids who have not rented any films after '2005-08-23 02:06:01' is shown in the table.",
                "query": "SELECT customer_id FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
            },
            {
                "isuser": true,
                "text": "Can you just show me the first names of those customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of those customers ares shown in the table.",
                "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "How many courses are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of all courses is 200",
                "query": "SELECT count(*) FROM course"
            },
            {
                "isuser": true,
                "text": "How many courses are in Mech. eng?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of courses provided by  Mech. eng department is 12.",
                "query": "SELECT count(*) FROM course where dept_name = 'Mech. Eng.'"
            },
            {
                "isuser": true,
                "text": "Out of those 12 how many of them are more than 3 credits?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of courses provided by Mech. eng department and have more than 3 credits is 4.",
                "query": "SELECT count(*) FROM course where dept_name = 'Mech. Eng.' and credits > 3"
            },
            {
                "isuser": true,
                "text": "Are any of these courses offered by more than one department?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes are there any courses \"same title\" in the list that are offered by more than one department?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes are there any courses \"same title\" in the list that are offered by more than one department?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes,  The table shows the names of departments other than Mech. Eng that offer courses that have the same title of courses that have more than 3 credits and are offered by Mech.Eng department.",
                "query": "select distinct(dept_name) from course where title in (SELECT title FROM course where dept_name = 'Mech. Eng.' and credits > 3) and dept_name != 'Mech. Eng.'"
            },
            {
                "isuser": true,
                "text": "How many of those courses are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 titles of courses which are provided by Mech. eng department and have more than 3 credits, are the same as some courses provided by other departments.",
                "query": "select count(*) from course where title in (SELECT title FROM course where dept_name = 'Mech. Eng.' and credits > 3) and dept_name != 'Mech. Eng.'"
            },
            {
                "isuser": true,
                "text": "Thank you",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome! goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you show me a list of all of the train station names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi. The following table is a list of all the train station names.",
                "query": "SELECT name FROM station"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to show the main services and total number of passengers that are associated with each name?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The following table is a list of main services, total number of passengers, and corresponding name.",
                "query": "SELECT Main_Services, Total_Passengers, name FROM station"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you filter that list to show the contents of the rows which are have the top three highest number of passengers?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The following table is a list that shows the contents of the rows with the top three highest number of passengers.",
                "query": "SELECT * FROM station ORDER BY total_passengers DESC LIMIT 3\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please list the full names of all male faculty members and the buildings they live in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first name, last name and the buildings they live in of all male faculty members.",
                "query": "SELECT Fname ,  Lname, building FROM FACULTY WHERE sex  =  \"M\""
            },
            {
                "isuser": true,
                "text": "Could you narrow that down to just male faculty members in the NEB building?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first names and last names of male (sex is M) faculties who live in building NEB.",
                "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""
            },
            {
                "isuser": true,
                "text": "What rooms do they live in? Please add it to the table.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first names and last names, and the room they live in of male (sex is M) faculties who live in building NEB.",
                "query": "SELECT Fname ,  Lname, room FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_management",
        "turns": [
            {
                "isuser": true,
                "text": "Which department has more than 1 head at a time? List the ID, Name  and the number of heads.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id, name, and number of heads of the department that has more than 1 head.",
                "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Which Department has the most number of employee? tell me the rank and creation year.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the rank and creation year of the department with the most number of employees.",
                "query": "SELECT  ranking, creation from department where num_employees = (select max(num_employees) from department)"
            },
            {
                "isuser": true,
                "text": "Which Department has the least number of employee? tell me the rank and creation year.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the rank and creation year of the department with the least number of employees.",
                "query": "SELECT ranking, creation from department where num_employees = (select min(num_employees) from department)"
            },
            {
                "isuser": true,
                "text": "Which Department has the highest Budget value? tell me the rank and creation year.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the rank and creation year of the department with the highest budget value.",
                "query": "SELECT ranking, creation from department where Budget_in_Billions = (select max(Budget_in_Billions) from department)"
            },
            {
                "isuser": true,
                "text": "Good, Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the IDs and middle names of all students who have no more than 2 enrollments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids and the middle names of all students who have no more than 2 enrollments",
                "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
            },
            {
                "isuser": true,
                "text": "What are the dates of enrollment and completion for each of those students? Please list it in the table.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dates of enrollment and completion for all students who have no more than 2 enrollments",
                "query": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
            },
            {
                "isuser": true,
                "text": "What is the full name of the student with the latest date of completion?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the personal, middle, and family names of the student with the latest date of completion",
                "query": "SELECT T2.personal_name, T2.middle_name, T2.family_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id order by T1.date_of_completion desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all the products supplied by supplier id 3, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the names of all the products supplied by supplier id 3.",
                "query": "SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
            },
            {
                "isuser": true,
                "text": "What are the product types of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the product type codes of all the products supplied by supplier id 3.",
                "query": "SELECT T2.product_type_code  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
            },
            {
                "isuser": true,
                "text": "What are the prices of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the prices of all the products supplied by supplier id 3.",
                "query": "SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
            },
            {
                "isuser": true,
                "text": "What are the prices of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here we only show the prices of all the products supplied by supplier id 3.",
                "query": "SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
            },
            {
                "isuser": true,
                "text": "What supplier id carries the product name red jeans?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The supplier id who carries the product name red jeans is 2.",
                "query": "SELECT T1.supplier_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name='red jeans'"
            },
            {
                "isuser": true,
                "text": "What is the total amount purchased of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The supplier who carries the product name red jeans has total amount purchased as 85922.86.",
                "query": "SELECT T1.supplier_id,T1.total_amount_purchased FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name='red jeans'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Oh, awesome! That's all, thank you! Have a great day!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oh, awesome! That's all, thank you! Have a great day!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you too! Have a nice day! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "what models are produced by the make General Motors?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the model of Gerneral motors. For example, they are chevrolet",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors'"
            },
            {
                "isuser": true,
                "text": "what models have a weight greater than 3500",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the models have a weight greater than 3500. For example, they are chevrolet.",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T4.weight  >  3500;"
            },
            {
                "isuser": true,
                "text": "could you list the models from the previous two questions with no duplicates please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the distinctive models produced by maker with the full name General Motors or weighing more than 3500.",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' or T4.weight  <=  3500"
            },
            {
                "isuser": true,
                "text": "can you list the models that weight greater than 3500 or have the maker General Motors, but not both",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the models that weigh greater than 3500 or have the maker General Motors but not both.",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' Or T4.weight  <=  3500 except SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' and T4.weight  <=  3500"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Docs_and_Epenses",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the project id",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the whole project id of the table \"Projects\". For example, one of those project id is 30.",
                "query": "select Project_ID from Projects"
            },
            {
                "isuser": true,
                "text": "Show me the details for the whole project id of the table \"projects\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the project details for each project id. For example, the project whose id is 30 has a detail \"Society Research project\".",
                "query": "select Project_ID,Project_Details from Projects"
            },
            {
                "isuser": true,
                "text": "Show me the project id and details for the project with at least two documents",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the project detail for each project id with at least two documents. For example, the project with id 30 has at least two documents and its project detail is \"Society Research project\".",
                "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count(*) > 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "What age of Gonzalo Higua\u00edn?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The age of the visitor named Gonzalo Higua\u00edn is 35.",
                "query": "SELECT age FROM visitor where name = \"Gonzalo Higua\u00edn\""
            },
            {
                "isuser": true,
                "text": "How many tickets of customer id 5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the numbers of tickets, the customer id with 5 bought during visits.",
                "query": "SELECT num_of_ticket FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where visitor_id = 5"
            },
            {
                "isuser": true,
                "text": "How many spent of Arjen Robben?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total spent of the vistor named Arjen Robben are 320.44 and 209.98",
                "query": "SELECT Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where name = \"Arjen Robben\""
            },
            {
                "isuser": true,
                "text": "Find the name and age of the visitor who bought the most tickets at once.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name and age of the visitor who bought the most tickets at once are Arjen Robben and 27",
                "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Hello There! Can you provide me with a list of all customer names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the customer_names are shown in the result table. ",
                "query": "SELECT customer_name FROM customers "
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you filter that list to show only the customers living in Colorado?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes,  the customer names of the customers living in Colorado are shown in the result table. ",
                "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to show their address content, city, and zip code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here the customer name, address content, city, and zip code of the customers living in Colorado are shown in the result table. ",
                "query": "SELECT t1.customer_name, t3.address_content, t3.city, t3.zip_postcode FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks, good bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "pilot_record",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please show the names of all pilots and fleet series of the aircrafts they have flown in ascending order of the rank of the pilot?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names of all pilots and fleet series of the aircrafts they have flown in ascending order of the rank of the pilot are shown  in the table",
                "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
            },
            {
                "isuser": true,
                "text": "Can you add the pilot ranks into the table please?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the names of all pilots,fleet series  and pilot ranks of the aircrafts they have flown in ascending order of the rank of the pilot are shown  in the table",
                "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series,T3.Rank FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
            },
            {
                "isuser": true,
                "text": "What are each of those pilots' nationalities?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, please.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "OK ,each pilot name and related  nationalities are  shown in the table.",
                "query": "SELECT \tPilot_name,\tNationality  from pilot"
            },
            {
                "isuser": true,
                "text": "Can you tell me their positions too please?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Each pilot name and related  nationalities,position  are  shown in the table.",
                "query": "SELECT \tPilot_name,\tNationality ,\tPosition from pilot"
            },
            {
                "isuser": true,
                "text": "What kind of fuel propulsion do these pilots' aircrafts use?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The kind of fuel propulsion which  these pilots' aircrafts use  are shown in the table",
                "query": "SELECT \tdistinct(Fuel_Propulsion) from  aircraft"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "aircraft",
        "turns": [
            {
                "isuser": true,
                "text": "What are the total number of domestic passengers of airports that contain the word \"London\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are a total of 12957585.0 domestic passengers in airports with a name like 'London'.",
                "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""
            },
            {
                "isuser": true,
                "text": "What about with a name like 'Heathrow'?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are a total of 5562516.0 domestic passengers in airports with a name like 'Heathrow'.",
                "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%Heathrow%\""
            },
            {
                "isuser": true,
                "text": "what about international passengers?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are a total of 61344438.0 international passengers in airports with a name like 'Heathrow'.",
                "query": "SELECT sum(International_Passengers) FROM airport WHERE Airport_Name LIKE \"%Heathrow%\""
            },
            {
                "isuser": true,
                "text": "what percentage of the total passengers at airports with a name like 'heathrow' are international? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "91.48411197447697% of the total passengers at airports with a name like 'Heathrow' are international passengers.",
                "query": "SELECT 100*sum(International_Passengers)/sum(Total_Passengers) FROM airport WHERE Airport_Name LIKE \"%Heathrow%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "news_report",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please list the names of the journalists in a table with the number of events they each reported?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all the journalist and the number of events they reported. ",
                "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
            },
            {
                "isuser": true,
                "text": "Can you add their ages and nationalities to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all the names, age, and nationality of all journalist and the number of events they reported.",
                "query": "SELECT T3.Name , t3.age, t3.Nationality, COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
            },
            {
                "isuser": true,
                "text": "What is the name of the event that the oldest journalist reported on?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the name of the oldest journalist and the event that the oldest journalist reported on.",
                "query": "SELECT T3.Name , t2.name  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID where t3.age = (select max(age) from journalist)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many artists have recorded at least one song in English?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of artists have recorded at least one song in English is 2 ",
                "query": "select count(*) from (SELECT * FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1)"
            },
            {
                "isuser": true,
                "text": "What are the names of the artists?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the artists that have recorded at least one song in English are shown in the result table. ",
                "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1"
            },
            {
                "isuser": true,
                "text": "How many songs has Enrique recorded?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of total songs that Enrique has recorded is 1.",
                "query": "SELECT count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.artist_name = \"Enrique\""
            },
            {
                "isuser": true,
                "text": "What about the other artist?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of total songs by the artist that has recorded at least one song in English who is not named Enrique is 1. ",
                "query": "select count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.artist_name = (SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" and T1.artist_name != \"Enrique\" GROUP BY T2.artist_name HAVING count(*)  >=  1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Who placed order after having order cancelled?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer ids  for those customers who placed order after some order were cancelled are listed in the result table. They are id 1, 4, 11...",
                "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"
            },
            {
                "isuser": true,
                "text": "What is the order status for order 3",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The order status code of order id 3 is PartFilled.",
                "query": "SELECT order_status_code FROM Customer_Orders WHERE order_id = 3"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the titles of the papers?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the titles of the papers. For example, one of them is Just do it: Simple Monadic Equational Reasoning. ",
                "query": "SELECT title FROM papers"
            },
            {
                "isuser": true,
                "text": "Which titles have more than one author?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the paper which has more than one author is Binders Unbound",
                "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  > 2"
            },
            {
                "isuser": true,
                "text": "Which title has the most authors?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  title of the paper that has the most authors is Binders Unbound",
                "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
            },
            {
                "isuser": true,
                "text": "thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the course that has the most student enrollment?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the course that has the most student enrollment is \"French\".",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many students are enrolled in French?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 students enrolled in the course named \"French\" in total.",
                "query": "select count(*) from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id=T1.course_id WHERE course_name='French'"
            },
            {
                "isuser": true,
                "text": "What is the name of the course that has the least student enrollment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the course that has the least student enrollment is the course named \"Chinese Painting\".",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many students are enrolled in Chinese Painting?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 student enrolled in the course  named \"Chinese Painting\".",
                "query": "select count(*) from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id=T1.course_id WHERE course_name='Chinese Painting'"
            },
            {
                "isuser": true,
                "text": "What is this student's name?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the ID of this student?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the ID of this student?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the student enrolled in the course \"Chinese Painting\" is \"15\".",
                "query": "select student_id from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id=T1.course_id WHERE course_name='Chinese Painting'"
            },
            {
                "isuser": true,
                "text": "What other classes is this student taking?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the other classes the student with id '15' takes except the course 'Chinese Painting'.",
                "query": "select distinct course_name from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id=T1.course_id WHERE student_id='15' and course_name != 'Chinese Painting'"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you tell me how many left footed players there are?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of left-footed players is 44733.",
                "query": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot  =  \"left\""
            },
            {
                "isuser": true,
                "text": "Holy smokes that's a lot!  Okay, let's narrow that down.  How many left footed players have a height between 180cm and 190cm?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of left-footed players who have a height between 180cm and 190cm is 1673.",
                "query": "SELECT COUNT(*) FROM (SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\")"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you please list player ids for all of the left-footed players with heights between 180cm and 190cm?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the player ids for all of the left-footed players with heights between 180cm and 190cm. For example, one of the ids is 2768.",
                "query": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\""
            },
            {
                "isuser": true,
                "text": "Great!  Can you tell me the name of the player who is the tallest left-footed player?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the player who is the tallest left-footed player is Bogdan Milic",
                "query": "SELECT player_name FROM Player AS T1 JOIN Player_Attributes\nAS T2 ON t1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" order by height desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "news_report",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Show the names of journalists and the names of the events they reported in ascending order",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of journalists and the names of the events they reported in ascending order of attendance. For example, one of the journalists is John Meaney and the event he reported is Special Exhibition.",
                "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC"
            },
            {
                "isuser": true,
                "text": "Hmm, interesting. What is the nationality of Jackie Waring?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the nationality of Jackie Waring is England",
                "query": "SELECT Nationality FROM journalist WHERE Name = \"Jackie Waring\""
            },
            {
                "isuser": true,
                "text": "What other Journalists have England as their nationality? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of other journalists who have England as their nationality. For example, one of them has a name Herbert Swindells.",
                "query": "SELECT * FROM journalist WHERE Name != \"Jackie Waring\" AND Nationality = \"England\""
            },
            {
                "isuser": true,
                "text": "How old is Herbert Swindells?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Herbert Swindells is 37 years old.",
                "query": "SELECT AGE FROM journalist WHERE Name = \"Herbert Swindells\""
            },
            {
                "isuser": true,
                "text": "Thanks! ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you provide me with a list of all of the customer names and their corresponding payment methods?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi. The following table is a list of all of the customer names and their corresponding payment methods.",
                "query": "SELECT customer_name, payment_method FROM Customers"
            },
            {
                "isuser": true,
                "text": "Can you filter the list to show only the row that corresponds with the most popular payment method?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the rows that correspond with the most popular payment method. It has the names of the customers.",
                "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you tell me what the most popular payment method is?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most popular payment method is Cheque.",
                "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome. If you don't have any more questions, good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the customer who was involved in the most policies, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Dr. Diana Rath is the customer who has been involved in the most policies.",
                "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is her customer id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "380 is the customer id  of the customer who has been involved in the most policies.",
                "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are her customer details, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here shows the customer details for the customer who has been involved in the most policies",
                "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is her policy type code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of policy type codes for customer with id 380.",
                "query": "SELECT Policy_Type_Code FROM policies where Customer_ID = 380"
            },
            {
                "isuser": true,
                "text": "What is her start date for each of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here we show the policy type code and start date for each for customer with id 380. ",
                "query": "SELECT Policy_Type_Code,Start_Date FROM policies where Customer_ID = 380"
            },
            {
                "isuser": true,
                "text": "How about the end date, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This shows the policy type code, start date, and the end date for customer with id 380.",
                "query": "SELECT Policy_Type_Code,Start_Date,End_Date FROM policies where Customer_ID = 380"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Of course! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the codes of the countries that do not speak English?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the codes of the countries that do not speak English.",
                "query": "SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  !=  \"English\""
            },
            {
                "isuser": true,
                "text": "What are the codes of the countries that do not speak English whose government forms are not Republic?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the codes of the countries that do not speak English and whose government forms are not Republic",
                "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\""
            },
            {
                "isuser": true,
                "text": "What language do each of those speak, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are languages those countries that do not speak English and whose government forms are not Republic speak. ",
                "query": "select countrycode, language from countrylanguage where countrycode in (SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\")"
            },
            {
                "isuser": true,
                "text": "Which of those countries is on the continent North America?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the codes of countries that are on the continent of North America and do not speak English and whose government forms are not Republic.\n",
                "query": "select code from country where continent = \"North America\" and code in (SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Hello",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "What are medicine names and trade names?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are medicine names and trade names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a result table with all the medicine names and trade names. ",
                "query": "SELECT name ,  trade_name FROM medicine "
            },
            {
                "isuser": true,
                "text": "Are these products able to interact with enzymes?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes,  the result table shows the names and trade names of the medicines able to interact with enzymes. \n",
                "query": "SELECT T1.* FROM medicine as T1 join medicine_enzyme_interaction as T2 on T1.id = T2.medicine_id "
            },
            {
                "isuser": true,
                "text": "Will you please tell me which of these can not interact with the product 'Heme'?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the names and trade names of medicines that cannot interact with the enzyme with product 'Heme'.",
                "query": "SELECT name, Trade_Name FROM medicine EXCEPT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T3.product = 'Heme'"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "body_builder",
        "turns": [
            {
                "isuser": true,
                "text": "how many body builder id are there",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are five body builder ids.",
                "query": "select count(*) from body_builder;"
            },
            {
                "isuser": true,
                "text": "ok,list out the body builder name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of all body builders. For example, there is a body builder who has name Jack Campbell.",
                "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID;"
            },
            {
                "isuser": true,
                "text": "ok, name the body builders whose total score is higher than 250",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of all bodybuilders whose total scores higher than 250. For example, a bodybuilder named Jack Campbell has total score higher than 250.",
                "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  250;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the first names of customers and the number of  accounts they have? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of the customers and number of accounts that they have are shown in the result table. ",
                "query": "SELECT T2.customer_first_name, count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id "
            },
            {
                "isuser": true,
                "text": "Which customers have at least 2 accounts? List their first names please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of the customers with at least 2 accounts are shown in the result table. ",
                "query": "SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Can you also add their ids next to their first names?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The first names and ids of the customers with at least 2 accounts are shown in the result table.",
                "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufactory_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello. What products cost more than or exactly $180?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes. Can you please provide the name in alphabetical order?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes. Can you please provide the name in alphabetical order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the name of the products that cost more than or exactly $180. The list is ordered alphabetically",
                "query": "SELECT name FROM products WHERE price  >=  180 order by  name ASC"
            },
            {
                "isuser": true,
                "text": "Thank you. Can you please provide the price of each of these items as well sorted by lowest price first?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the name of the products that cost more than or exactly $180 ordered by price in descending order",
                "query": "SELECT name, price FROM products WHERE price  >=  180 order by price asc"
            },
            {
                "isuser": true,
                "text": "Can you please also provide the manufacturer on these products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name, price and manufacturer of the products that cost more than or exactly $180 ordered by price in descending order",
                "query": "SELECT name, price, manufacturer FROM products WHERE price  >=  180 order by price asc"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "which professionals live in state of indiana?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I would like to know all the information about professionals?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I would like to know all the information about professionals?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The information about the professionals from the state Indiana are shown in the result table. ",
                "query": "SELECT * FROM Professionals WHERE state  =  'Indiana'"
            },
            {
                "isuser": true,
                "text": "ok, I need to know the cell number of taryn",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cell number of the professional with the first name Taryn is shown in the result table. ",
                "query": "SELECT cell_number FROM Professionals WHERE first_name = \"Taryn\""
            },
            {
                "isuser": true,
                "text": "ok,thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thank you, good bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "How many assets can each part be used in?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the part names and the number of assets that each of them can use. For example, the middle part can use 5 assets. ",
                "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
            },
            {
                "isuser": true,
                "text": "what is the part ID's for these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids of parts that can be used in some assets. ",
                "query": "SELECT T1.part_id FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
            },
            {
                "isuser": true,
                "text": "and the chargeable amount for these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the chargeable amounts of parts that can be used in some assets. ",
                "query": "SELECT chargeable_amount FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "csu_1",
        "turns": [
            {
                "isuser": true,
                "text": "hi I was wondering how many counties you have information for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 18 counties in the data tables.",
                "query": "SELECT count(DISTINCT T1.county) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus"
            },
            {
                "isuser": true,
                "text": "how many schools are in Orange county?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of campuses in Orange county is 15.",
                "query": "SELECT count(*) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county = \"Orange\""
            },
            {
                "isuser": true,
                "text": "can you tell me how many degrees have been granted for each Orange county campus since the year 2000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of each campus in Orange county and the total number of degrees granted since the year 2000. For example, California State University-Fullerton granted 26211 degrees.",
                "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_assessment",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all of the student names and their associated addresses and cities?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Hi. The following table is a list of all the student name details and their associated addresses line 1 and cities.",
                "query": "SELECT T3.student_details, T1.city, T1.line_1 FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you filter the list to show just the rows that correspond with the 3 most recent \"date from\" values?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the student details and their address line 1 and cities that correspond with the 3 most recent \"date from\" values. ",
                "query": "SELECT T3.student_details, T1.city, T1.line_1 FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id ORDER BY  date_from DESC LIMIT 3\n"
            },
            {
                "isuser": true,
                "text": "Thank you!  Which of these 3 individuals has the most recent \"date to\" value, and can you tell what the value (or date) is?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the student details and \"date to\" value of the student who has the most recent \"date to\" value among the students with 3 most recent \"date from\" values. ",
                "query": "select * from (SELECT T3.student_details, t2.date_to FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id ORDER BY t2.date_from DESC LIMIT 3) order by date_to desc limit 1\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome. If you don't have any more questions, good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What is the id of the department store that has both marketing and managing department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "4 is the id of the department store that has both marketing and managing department.",
                "query": "SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
            },
            {
                "isuser": true,
                "text": "What is the name of the department store that has both marketing and managing department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "store_name is the name of the department store that has both marketing and managing department.",
                "query": "SELECT  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
            },
            {
                "isuser": true,
                "text": "Can you show me all the id of the department store that has both marketing and managing department? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "4 is the id of the department store that has both marketing and managing department.",
                "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome and bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with the first and last name of the customer who has account name 900?",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "The name of the customer on the account number 900 is Meaghan Keeling.",
                "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
            },
            {
                "isuser": true,
                "text": "Great!  Could you update this list to show me Meaghan's email address and phone number as well?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the first name, last name, email address, and phone number for the customer on the account number 900.",
                "query": "SELECT T2.customer_first_name ,  T2.customer_last_name, T2.email_address, T2.phone_number FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
            },
            {
                "isuser": true,
                "text": "Great! Finally, can you show me all other customers names (first and last) who have the same \"other account details\" details as Meaghan?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are a list of other customer first and last names who share \"other account details\" with the account number 900.",
                "query": "SELECT DISTINCT T2.customer_first_name ,  T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.other_account_details  =  (SELECT other_account_details FROM Accounts WHERE account_name = 900)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, I was wondering how many accounts are listed under the first name of John?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no accounts are listed under the first name of John.",
                "query": "select count(distinct account_id) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id WHERE customer_first_name='John'"
            },
            {
                "isuser": true,
                "text": "How about Meaghan or Jessica?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 4 accounts are listed under the customer whose first name is Meaghan or Jessica.",
                "query": "select count(distinct account_id) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id WHERE customer_first_name='Meaghan' or customer_first_name='Jessica'"
            },
            {
                "isuser": true,
                "text": "Okay, could you just give me the account names listed under Meaghan first?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the account names listed under the customer with the first name \"Meaghan\".",
                "query": "select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id WHERE customer_first_name='Meaghan'"
            },
            {
                "isuser": true,
                "text": "And what are the id's for those accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the account ids listed under the customer with the first name \"Meaghan\".",
                "query": "select account_id from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id where customer_first_name='Meaghan'"
            },
            {
                "isuser": true,
                "text": "Are there any other pertinent details for accounts listed under Meaghan?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, and here is the result table that shows the account details listed under the customer with the first name \"Meaghan\".",
                "query": "select other_account_details from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id where customer_first_name='Meaghan'"
            },
            {
                "isuser": true,
                "text": "Thank you so much, now back to the accounts listed for Jessica.  What are the account names of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no account name for the accounts under the customer whose first name is \"Jessica\".",
                "query": "select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id where customer_first_name='Jessica'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "aircraft",
        "turns": [
            {
                "isuser": true,
                "text": "Which Airport has the largest number of international passengers? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "London Heathrow has the largest number of international passengers.",
                "query": "SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many international passengers in that airport?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 61344438 international passengers in the airport that has the largest number of international passengers",
                "query": "SELECT International_Passengers FROM airport ORDER BY International_Passengers DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show all information on that airport ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table which shows all the information on the airport that has the largest number of international passengers.",
                "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_employee",
        "turns": [
            {
                "isuser": true,
                "text": "What companies are in the banking or retailing industry?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What are the names of the companies in the banking or retail industries?\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are the names of the companies in the banking or retail industries?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of companies in the bank or retail industries. For example, JPMorgan Chase is in the bank or retail industries.",
                "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\""
            },
            {
                "isuser": true,
                "text": "What are the total sales in billions of all of these companies combined?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total sales of all the companies in the banking or retailing industry combined in billions is 1063.7.",
                "query": "SELECT sum(sales_in_billion) FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\""
            },
            {
                "isuser": true,
                "text": "and what is their total market value in billions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total market value of all the companies in the banking or retailing industry combined in billions is 1423.",
                "query": "SELECT sum(Market_Value_in_Billion) FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "scientist_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of scientists that worked on 'A matter of time' project ?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the scientist that worked on 'A Matter of Time' is Elizabeth Doe",
                "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Matter of Time' "
            },
            {
                "isuser": true,
                "text": "What about the names of scientists that worked on the project named 'A Puzzling Parallax'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of scientist that worked on a project named 'A Puzzling Parallax' is Kumar Swamy.",
                "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'"
            },
            {
                "isuser": true,
                "text": "Could you give the list of all projects along with the names of scientists that worked on them?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes Please!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes Please!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The result table of the names of all the projects and the names of scientists that worked on them are shown.",
                "query": "SELECT T3.name,T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN "
            },
            {
                "isuser": true,
                "text": "Is there a scientist that worked for more than one project? ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is no such scientist that worked for more than one project.",
                "query": "SELECT count(Project) from assignedto group by scientist having count(project)>1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "How many student in total participate in the tryout?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 6 students who participate in the tryout.",
                "query": "SELECT count(*)  FROM tryout"
            },
            {
                "isuser": true,
                "text": "For which colleges? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of students who participate in the tryout for each college.",
                "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName"
            },
            {
                "isuser": true,
                "text": "Can I see that list in a descending order based on student count? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the number of students who participate in the tryout for each college ordered by descending count.",
                "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "For the documents with the description \"Regular\", what are all of their response received dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the response received dates of all documents with a description Regular.",
                "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular'"
            },
            {
                "isuser": true,
                "text": "What are the grant amounts for those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the grant amounts associated with the documents with a description Regular.",
                "query": "SELECT T3.grant_amount  FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular'"
            },
            {
                "isuser": true,
                "text": "Can you find the response received dates for all grants that were over 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the response received dates for documents associated with grants with an amount over 100.",
                "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.grant_amount  >  100"
            },
            {
                "isuser": true,
                "text": "Would you list the grant amounts for all grants with a sent date after 1995?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Can you list the grant IDs for all documents with a sent date after 1995?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you list the grant IDs for all documents with a sent date after 1995?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Sorry we cannot query about the date.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you tell me how many employees have the job title PU_MAN?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of employees that have the job title PU_MAN is 1",
                "query": " SELECT count(*) FROM employees WHERE job_id  =  'PU_MAN' "
            },
            {
                "isuser": true,
                "text": "What is the salary of that employee?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the salary of the employee with job id PU_MAN is 11000",
                "query": " SELECT salary FROM employees WHERE job_id  =  'PU_MAN' "
            },
            {
                "isuser": true,
                "text": "How many employees have a higher salary than that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of employees that have a higher salary than the salary of the employee with job id PU_MAN is 10",
                "query": "SELECT count(*) FROM employees WHERE salary  >  ( SELECT salary FROM employees WHERE job_id  =  'PU_MAN' )"
            },
            {
                "isuser": true,
                "text": "Tell me their employee numbers, first and last names, and job titles, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the employee numbers, first and last names, and job titles of the employees that have a higher salary than the salary of the employee with job id PU_MAN is 10. ",
                "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of Instructor IDs for those who did not teach any courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the result table of Instructor IDs for those who did not teach any courses. For example, one of the IDs is 16807.",
                "query": "SELECT ID FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update that list with the professors' names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the result table of professors ids and names for those who did not teach any courses. For example, one of the names is McKinnon.",
                "query": "SELECT id, name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update that list to include the instructor names and which departments they are in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here is the result table of instructor names and their departments for those who did not teach any courses. For example, one of the instructors is McKinnon from Cybernetics department.",
                "query": "SELECT name, dept_name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Find the state and country of all cities with post code starting with 4.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states and countries of all cities with a post code starting with 4",
                "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
            },
            {
                "isuser": true,
                "text": "What are the cities in Colorado that have post codes starting with 4.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Lucasville is the city in the state of Colorado that has a post code starting with 4.",
                "query": "SELECT city FROM addresses WHERE zip_postcode LIKE \"4%\" and state_province_county = \"Colorado\""
            },
            {
                "isuser": true,
                "text": "How about cities in Texas that have post codes starting with 4?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Felicityfort is the city in the state of Texas that has a post code starting with 4",
                "query": "SELECT city FROM addresses WHERE zip_postcode LIKE \"4%\" and state_province_county = \"Texas\""
            },
            {
                "isuser": true,
                "text": "How many cities in total with post code starting with 4?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 cities in total with a post code starting with 4.",
                "query": "SELECT count(distinct city) FROM addresses WHERE zip_postcode LIKE \"4%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "How many department stores does the store chain South have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count   of  department stores whose store chain name is South is 2",
                "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""
            },
            {
                "isuser": true,
                "text": "How many department stores does the store chain West have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count   of  department stores whose store chain name is west  is 3",
                "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"West\""
            },
            {
                "isuser": true,
                "text": "What is the store address of the store chain East?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the store address of the stores with the department store chain name East  is shown in the table.",
                "query": "SELECT T1.store_address FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"East\""
            },
            {
                "isuser": true,
                "text": "What is the store phone of the store chain West?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The store phone of the store with chain name West  are  shown  in the table",
                "query": "SELECT T1.\tstore_phone FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"West\""
            },
            {
                "isuser": true,
                "text": "What is the store email of the store chain South?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The store email of the stores with chain name South is shown in the table.",
                "query": "SELECT T1.\tstore_email FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"West\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "culture_company",
        "turns": [
            {
                "isuser": true,
                "text": "What are the movie titles for the highest worldwide gross for each year?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The Big Kahuna had the highest gross worldwide value among 1999 titles, The Art of War had the highest gross worldwide values among 2000 titles, 3000 Miles to Graceland had the highest gross worldwide value among 2001 titles.",
                "query": "SELECT title, year, gross_worldwide FROM movie"
            },
            {
                "isuser": true,
                "text": "can you now just show the director and movie title for the highest grossing movie for the year 2000 or earlier. One result please",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Among entries with year 2000 or earlier, the highest gross worldwide value corresponds to title The Whole Nine Yards with director Jonathan Lynn.",
                "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_software_problems",
        "turns": [
            {
                "isuser": true,
                "text": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no staff member who reported problems from the product \"rem\" but not \"aut\".",
                "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
            },
            {
                "isuser": true,
                "text": "What about staff members who reported problems for the product \"rem\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Again, there is no staff member who reported problems from the product \"rem\".",
                "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\""
            },
            {
                "isuser": true,
                "text": "What about staff members who reported problems for the product \"aut\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "hmm, there is still no staff member who reported problems from the product \"aut\". ",
                "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
            },
            {
                "isuser": true,
                "text": "What is the name of the staff member who reported problem id 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the staff member who reported a problem with id 1 is Dameon Frami.",
                "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id where T1.problem_id\t= 1"
            },
            {
                "isuser": true,
                "text": "What is the staff id of that person?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The staff id of the staff member who reported a problem with id 1 is 2.",
                "query": "SELECT T3.staff_id FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id where T1.problem_id\t= 1"
            },
            {
                "isuser": true,
                "text": "Are there any other staff details of that person?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the other staff details of the staff member who reported a problem with id 1 are 'x'.",
                "query": "SELECT T3.other_staff_details FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id where T1.problem_id\t= 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_finance",
        "turns": [
            {
                "isuser": true,
                "text": "What location of school name Bremen?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  location of school name Bremen is Bremen",
                "query": "SELECT location FROM school where School_name = \"Bremen\""
            },
            {
                "isuser": true,
                "text": "How many enrollment of school id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The enrollment of the school with id 2 is 287",
                "query": "SELECT enrollment FROM school where School_id = \"2\""
            },
            {
                "isuser": true,
                "text": "How many invested in the school with mascot Falcons?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The invested of the school with mascot Falcons is 8335",
                "query": "SELECT Invested FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE t1.mascot = \"Falcons\""
            },
            {
                "isuser": true,
                "text": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of the budgeted amount or were founded before 2003, in the order of percent of the total invested budget and total budgeted budget. For example, the school Culver Community with mascot Cavaliers\tgets an A.",
                "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all the names and ids for all tourist attractions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the list of all the names and ids for all tourist attractions",
                "query": "SELECT Name ,  Tourist_Attraction_ID FROM Tourist_Attractions "
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show only the names and ids for tourist attractions that were visited 2 or more times?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the  the names and ids of tourist attractions that are visited at least two times",
                "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to show how many times each tourist attraction was visited?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows how many times each tourist attraction was visited",
                "query": "SELECT T1.Name ,  count(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "FIND THE all CHECKING BALANCE OF ALL ACCOUNTS",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The checking balance of all accounts are shown in the table.",
                "query": "SELECT balance FROM checking"
            },
            {
                "isuser": true,
                "text": "FIND THE SAVING BALANCE OF ALL ACCOUNTS",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The savings balance of all accounts are shown in the table.",
                "query": "SELECT balance FROM savings"
            },
            {
                "isuser": true,
                "text": "SORT ALL THE TOTAL BALANCE OF CHECKING AND SAVING ACCOUNT IN ASCENDING ORDER",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total checking and saving balance of all accounts are sorted and results are shown in the table in an ascending order.",
                "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"
            },
            {
                "isuser": true,
                "text": "THANKS",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem. bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_4",
        "turns": [
            {
                "isuser": true,
                "text": "How many routes have a destination airport in Canada, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 1847 routes whose destination airports are in Canada",
                "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"
            },
            {
                "isuser": true,
                "text": "How many routes have a destination airport in the United States, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 13082 routes whose destination airports are in the United States",
                "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'United States'"
            },
            {
                "isuser": true,
                "text": "How many routes have a source airport in Canada and a destination airport in the United States, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 363 routes that have a source airport in Canada and a destination airport in the United States",
                "query": "select count(*) from (SELECT rid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'United States' intersect SELECT rid FROM airports AS T3 JOIN routes AS T4 ON T3.apid  =  T4.src_apid WHERE T3.country  =  'Canada')"
            },
            {
                "isuser": true,
                "text": "What are the names of those source airports that begin with the letter A?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of those source airports that begin with the letter A.",
                "query": "select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.name like 'A%'"
            },
            {
                "isuser": true,
                "text": "What are the ones that are in Canada only?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of those source airports that begin with the letter A and in Canada.",
                "query": "select distinct(t1.name) from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.name like 'A%' and t1.country = \"Canada\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "how many students live in North Carolina?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 students who live in the state of North Carolina.",
                "query": "SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'"
            },
            {
                "isuser": true,
                "text": "What are their first and last names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of students who live in the state of North Carolina",
                "query": "SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'"
            },
            {
                "isuser": true,
                "text": "Which of those do not have degree program id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of students who live in the state of North Carolina but have not registered in any degree program.",
                "query": "SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "Show the station name with the greatest number of trains, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "London Waterloo is the name of the station with the greatest number of trains.",
                "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the location of that station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The station with the greatest number of trains is located in London.",
                "query": "SELECT T2.Location FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the main services of that station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The main services of the station with the greatest number of trains are 'South Western Main Line West of England Main Line'.",
                "query": "SELECT T2.Main_Services FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the station id of that station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The station id of the station with the greatest number of trains is 1.",
                "query": "SELECT T2.Station_ID FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many annual interchanges are at that station?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The annual interchanges of the station with the greatest number of trains is 9.489.",
                "query": "SELECT T2.Annual_interchanges FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the station with station id 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the station with station id 3 is 'London Bridge'.",
                "query": "SELECT Name FROM station where Station_ID = 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "machine_repair",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of all technicians.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of names of all technicians.",
                "query": "select name from technician"
            },
            {
                "isuser": true,
                "text": "Show the names of all technicians and the machines they are assigned to. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the names of all technicians and the machines they are assigned to.",
                "query": "SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"
            },
            {
                "isuser": true,
                "text": "Show the names of all technicians assigned to the machine with ID 2. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "John Brown and Charlie Hollocher are assigned to the machine with id 2.",
                "query": "SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID and t1.machine_id = 2"
            },
            {
                "isuser": true,
                "text": "Show the names of all technicians in ascending order of quality rank assigned to the machine with ID 2.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the names of all technicians in ascending order of quality rank assigned to the machine with ID 2.",
                "query": "SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID and t1.machine_id = 2 order by quality_rank"
            },
            {
                "isuser": true,
                "text": "Show the names of all technicians in ascending order of quality rank assigned to the machine with ID 1.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the name of all technician in ascending order of quality rank assigned to the machine with ID 1. ",
                "query": "SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID and t1.machine_id = 1 order by quality_rank"
            },
            {
                "isuser": true,
                "text": "Show the names of technicians in ascending order of quality rank of the machine they are assigned. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the names of technicians in ascending order of quality rank of the machine they are assigned.",
                "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_1",
        "turns": [
            {
                "isuser": true,
                "text": "List all player names who have an overall rating higher than the average.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All player names who have an overall rating higher than average are shown in the result table. ",
                "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "List all player names who have an overall rating lower than the average.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The player names who have an overall rating lower than the average is shown in the result table. ",
                "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  <  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "How many players have an overall rating lower than the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of players that have an overall rating lower than the average is 9556.",
                "query": "SELECT count(DISTINCT T1.id) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  <  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "What is the average height of players that have an overall rating lower than the average?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average height of players that have an overall rating lower than average is 181.95432924050212. ",
                "query": "SELECT avg(T1.height) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  <  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "What is their average weight?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The average weight of players that have an overall rating lower than average is 168.18046773060323.",
                "query": "SELECT avg(T1.weight) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  <  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "What is the average height of players that have an overall rating higher than the average? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average height of players that have an overall rating higher than the average is 181.8007139877884",
                "query": "SELECT avg(T1.height) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "What is their average weight?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Th average weight of players that have an overall rating higher than the average is 169.33446376036375. ",
                "query": "SELECT avg(T1.weight) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "activity_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the first names of the faculty members who participate in Caonoeing and Kayaking.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first names of the faculty members who participate in Caonoeing and Kayaking.",
                "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"
            },
            {
                "isuser": true,
                "text": "What about faculty members who participate in Mountain Climbing?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first names of the faculty members who participate in Mountain Climbing.",
                "query": "SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Mountain Climbing'"
            },
            {
                "isuser": true,
                "text": "What about Mountain Climbing and Kayaking?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first names of the faculty members who participate in Mountain Climbing and Kayaking.",
                "query": "SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Mountain Climbing' INTERSECT SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are all the area codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows all the area codes.",
                "query": "select area_code from AREA_CODE_STATE"
            },
            {
                "isuser": true,
                "text": "What area codes voted for the contestant 'Tabatha Gehling'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the area codes voted for the contestant 'Tabatha Gehling'.",
                "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling'"
            },
            {
                "isuser": true,
                "text": "What area codes voted for the contestant 'Kelly Clauss'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the area codes voted for the contestant 'Kelly Clauss'.",
                "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'"
            },
            {
                "isuser": true,
                "text": "What area codes voted for both the contestant 'Kelly Clauss' and 'Tabatha Gehling'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
                "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entertainment_awards",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the names of the festivals that had two or more nominations for artwork?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the festivals that had two or more nominations for artwork",
                "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Can you list their IDs in the table too?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids and the names of the festivals that had two or more nominations for artwork",
                "query": "SELECT T3.festival_id, T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "What are the names of all the artworks that won?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all the artworks that have result Won",
                "query": "SELECT T2.name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID  where T1.result = \"Won\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you list all of the deparatment names and department IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are all of the deparatment names and department IDs",
                "query": "select department_id,department_name from Departments"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you filter this list to show just the department that offers the largest number of degrees?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here are the deparatment names and department IDs which offers the largest number of degrees",
                "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Cool!  Can you show me all of the degree summary names associated with this department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are all of the degree summary names associated with these departments that offer the largest number of degrees",
                "query": "select T2.degree_summary_name from Departments as T1 JOIN Degree_Programs as T2 on T1.department_id = T2.department_id where T1.\tdepartment_name = 'statistics' "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "Which location has the most number of train stations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "What is the total number of passengers do train station in london has ?",
                "query": "select location, count(*) from station group by Location order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the total number of passengers do train station in london has ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total number of passengers that London has is 498.50700000000006",
                "query": "SELECT sum(Total_Passengers) from station where Location ='London';"
            },
            {
                "isuser": true,
                "text": "How many number of platforms do they have?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the number of platforms does train station in london has?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the number of platforms does train station in london has?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the number of platform of the train in london is 140",
                "query": "select sum(Number_of_Platforms) from station where Location ='London';"
            },
            {
                "isuser": true,
                "text": "What is the name of the train station in londom?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the train station in london are London Waterloo\nLondon Victoria\nLondon Bridge\nLondon Liverpool Street\nLondon Euston\nLondon Charing Cross\nLondon King's Cross\nEast Croydon\nLondon St Pancras\nStratford",
                "query": "select Name from station where Location = 'London'"
            },
            {
                "isuser": true,
                "text": "What is the main service of  train station in london?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the main service of the train station in london are South Western Main Line West of England Main Line\nBrighton Main Line Chatham Main Line\nSouth Eastern Main Line Thameslink\nGreat Eastern Main Line West Anglia Main Line\nWest Coast Main Line\nSouth Eastern Main Line\nEast Coast Main Line\nBrighton Main Line\nMidland Main Line Thameslink High-Speed 1 Eurostar\nGreat Eastern Main Line Lea Valley Lines",
                "query": "select Main_Services from station where Location = 'London'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "course_teach",
        "turns": [
            {
                "isuser": true,
                "text": "list the name of the teachers and the courses assigned for them to teach",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the teachers and the courses they teach.",
                "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID "
            },
            {
                "isuser": true,
                "text": "arrange this list with the teachers name in ascending order",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the teachers and the courses they teach in ascending alphabetical order of the teacher's name",
                "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
            },
            {
                "isuser": true,
                "text": "include teachers id in tha same list",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and ids of the teachers and the courses they teach in ascending alphabetical order of the teacher's name.",
                "query": "SELECT T3.Name ,  T2.Course, T1.teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customer_deliveries",
        "turns": [
            {
                "isuser": true,
                "text": "What is the most frequently used payment method?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the most frequently used payment method is Visa",
                "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many customers used Visa to pay?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of customers used Visa to pay is 8",
                "query": "SELECT count(*) FROM Customers GROUP BY payment_method having payment_method = \"Visa\""
            },
            {
                "isuser": true,
                "text": "Can you show me the email addresses of all the customers who paid with Visa?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the email addresses of all the customers who paid with Visa. For example, one of them is shaniya45@example.net.",
                "query": "SELECT customer_email FROM Customers where  payment_method = \"Visa\""
            },
            {
                "isuser": true,
                "text": "How about their phone numbers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the phone numbers of all the customers who paid with Visa. For example, one of them is 1-382-503-5179x53639. ",
                "query": "SELECT customer_phone FROM Customers where  payment_method = \"Visa\""
            },
            {
                "isuser": true,
                "text": "Who is the newest customer of that group?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the newest customer among customers who pay with Visa is Jaden Lang",
                "query": "SELECT customer_name from customers where payment_method = \"Visa\" order by date_became_customer limit 1"
            },
            {
                "isuser": true,
                "text": "When did that customer become a customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2009-12-29 17:38:10 is the time when the newest customer among customers who pay with Visa became a customer",
                "query": "SELECT date_became_customer from customers where payment_method = \"Visa\" order by date_became_customer limit 1"
            },
            {
                "isuser": true,
                "text": "What was the second most common payment method?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "the second most common payment method is Discover",
                "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Tracking_DB",
        "turns": [
            {
                "isuser": true,
                "text": "What are the location codes of all the documents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the location codes of all the documents. For example, the location code \"e\" is one of those location codes.",
                "query": "SELECT distinct location_code FROM Document_locations"
            },
            {
                "isuser": true,
                "text": "What are the document id of all the location code?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Whole document ids",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Whole document ids",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the document ids of all the documents. For example, the document id \"e\" is one of those document ids.",
                "query": "SELECT distinct document_id FROM Document_locations"
            },
            {
                "isuser": true,
                "text": "What is the date in location from of document id 81?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the \"date in location from\" of the document id \"81\". For example, one of the \"81\" document's \"date in location from\" is \"1972-03-31 09:47:22\".",
                "query": "SELECT \tDate_in_Location_From FROM Document_locations WHERE Document_ID='81'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_office",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of the buildings that have more than one company offices.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the buildings that have more than one company office are shown in the result table. ",
                "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Can you tell me which companies are located at the Torre KOI building?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The names of the companies that are present in that building.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "The names of the companies that are present in that building.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the companies that are located at the Torre Koi building are shown in the result table.",
                "query": "SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T2.name = \"Torre KOI\""
            },
            {
                "isuser": true,
                "text": "What other buildings is JPMorgan Chase also located in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other buildings that JP Morgan Chase is also located are shown in the result table. ",
                "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T3.name = \"JPMorgan Chase\" and T2.name != \"Torre KOI\""
            },
            {
                "isuser": true,
                "text": "Does Torre Mitkah have an HSBC located in it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the building named Torre Mitikah has company HSBC located in it. ",
                "query": "SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T3.name = \"HSBC\" and T2.name = \"Torre Mitikah\""
            },
            {
                "isuser": true,
                "text": "What is the name of company with the company id 4?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the company with company id 4 is ExxonMobil.",
                "query": "SELECT name from companies where id = 4"
            },
            {
                "isuser": true,
                "text": "ExxonMobil is located in Punto Chapultepec, correct?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the company named ExxonMobil is located in building named Punto Chapultepec.",
                "query": "SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T3.name = \"ExxonMobil\" and T2.name = \"Punto Chapultepec\""
            },
            {
                "isuser": true,
                "text": "Is General Electric also located in Punto Chapultepec ?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No, the company named General Electric is not located in building named Punto Chapultepec.",
                "query": "SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T3.name = \"General Electric\" and T2.name = \"Punto Chapultepec\""
            },
            {
                "isuser": true,
                "text": "Which buildings have a General Electric then?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the buildings that the company General Electric are shown in the result table. ",
                "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T3.name = \"General Electric\" "
            },
            {
                "isuser": true,
                "text": "What other companies are located in Corporativo BBVA Bancomer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other companies that are located in Corporativo BBVA Bancomer are shown in the result table. ",
                "query": "SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id where T2.name = \"Corporativo BBVA Bancomer\" and T3.name != \"General Electric\" "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you please provide me with a list of all of customer IDs in the Customer Address History table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of all customer ids from the customer address history table.",
                "query": "SELECT customer_id FROM Customer_Address_History"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you update this list to include the associated customer names, customer address city and the date from and date to for each row?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the customer names, address city, date from and date to for the customer address history.",
                "query": "SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id"
            },
            {
                "isuser": true,
                "text": "Great! Can you tell me which, if any, customers on this list appear more than once?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of customers who appear more than once in the customer address history.",
                "query": "SELECT T2.customer_name From customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id GROUP BY T2.customer_name having count(*) > 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which game names were played by Linda Smith?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of games played by the student with a name Linda Smith",
                "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""
            },
            {
                "isuser": true,
                "text": "What is the Gtype of RGN Stone?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Gtype of RGN Stone is Collectible card game",
                "query": "SELECT gtype FROM video_games WHERE Gname = \"RNG Stone\""
            },
            {
                "isuser": true,
                "text": "What is the city code of Student Shiela Jones?\t",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the city code of Student with a name of Shiela Jones is WAS",
                "query": "SELECT city_code FROM student WHERE Lname = \"Jones\" AND Fname = \"Shiela\""
            },
            {
                "isuser": true,
                "text": "How many Hours Played do The Vanishing of Eric Calde hasr?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the hours played of the game named The Vanishing of Eric Calder",
                "query": "SELECT T1.hours_played FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid WHERE Gname = \"The Vanishing of Eric Calder\""
            },
            {
                "isuser": true,
                "text": "What are the Student names who have played Gname The Vanishing of Eric Calder.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first names and the last names of the student who have played the game with a name of The Vanishing of Eric Calder",
                "query": "SELECT T3.Fname, T3.lname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T2.Gname =\"The Vanishing of Eric Calder\""
            },
            {
                "isuser": true,
                "text": "What is the total Hours Played of all Students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the total Hours_Played of all Students is 2645",
                "query": "SELECT sum(hours_played) FROM Plays_games "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, can you tell me the tourist attraction id for the photo name \"game1\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The tourist attraction id for the photo name \"game1\" is 8449.",
                "query": "SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
            },
            {
                "isuser": true,
                "text": "Can you tell me the name for this attraction as well?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the tourist attraction that is associated with the photo \"game1\" is \"impressions de France\".",
                "query": "SELECT T2.name  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
            },
            {
                "isuser": true,
                "text": "How about how to get there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The way to get the tourist attraction that is associated with the photo \"game1\" is \"bus\".",
                "query": "SELECT T2.How_to_Get_There  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
            },
            {
                "isuser": true,
                "text": "I need the opening hours as well please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The opening hours for the tourist attraction that is associated with the photo \"game1\" is \"NULL\".",
                "query": "SELECT T2.Opening_Hours  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
            },
            {
                "isuser": true,
                "text": "What about the other details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other details for the tourist attraction that is associated with the photo \"game1\" is \"NULL\".",
                "query": "SELECT T2.Other_Details  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "I want to know the states and the college names which have some college students in tryout.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the states and the college names which have some college students in tryout are  shown  in the table ",
                "query": "SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName "
            },
            {
                "isuser": true,
                "text": "Hmm, can you show me the college names with players whose decisions are yes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the college names  which   with players whose decisions are yes are  ASU and FSU",
                "query": "SELECT cName  from Tryout  where  \tdecision=\"yes\""
            },
            {
                "isuser": true,
                "text": "Can you list just the states which have college students in tryout and their decisions are yes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes,The  states which have college students in tryout and their decisions are yes are AZ and FL",
                "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "match_season",
        "turns": [
            {
                "isuser": true,
                "text": "What are the different colleges this season?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The different colleges this season are shown in the result table. ",
                "query": "SELECT DISTINCT college FROM match_season "
            },
            {
                "isuser": true,
                "text": "How many players are playing for the listed colleges?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college name and number of players for each are shown in the result table. For example Cal State Northridge has 1 player. ",
                "query": "SELECT college, count(*) FROM match_season group by college"
            },
            {
                "isuser": true,
                "text": "What are the draft classes for the players from UCLA and Duke?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The draft classes for the players from UCLA and Duke are shown in the result table. ",
                "query": "SELECT DISTINCT draft_class FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\""
            },
            {
                "isuser": true,
                "text": "Could you tell me the draft pick numbers of the players from those draft classes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The draft pick numbers for the players from the draft classes for the players from UCLA and Duke are shown in the result table. ",
                "query": "Select draft_pick_number from match_season where draft_class in (\nSELECT DISTINCT draft_class FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\")"
            },
            {
                "isuser": true,
                "text": "What players were those draft pick numbers for?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please.",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The players and draft pick numbers of the draft classes that had players from UCLA or Duke are shown in the result table. ",
                "query": "Select player, draft_pick_number from match_season where draft_class in (\nSELECT DISTINCT draft_class FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\")"
            },
            {
                "isuser": true,
                "text": "What are the positions of each of those players?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The positions, players, and draft pick numbers of the draft classes that had players from UCLA or Duke are shown in the result table",
                "query": "Select position, player, draft_pick_number from match_season where draft_class in (\nSELECT DISTINCT draft_class FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "product_catalog",
        "turns": [
            {
                "isuser": true,
                "text": "What are the average and minimum prices (in Euros) of all products?\n\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average and minimum prices in Euros of all products are 492.8633333333334 and 159.84 respectively.",
                "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
            },
            {
                "isuser": true,
                "text": "How about just for Cola?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average and minimum prices in Euros of the products whose catalog entry name is Cola are 159.84 and 159.84 respectively.",
                "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents where catalog_entry_name = 'Cola'"
            },
            {
                "isuser": true,
                "text": "How about the price of Cola in dollars?\n\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please!\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please!\n",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "the average and minimum prices in dollars of the products whose catalog entry name is Cola are 200.78 and 200.78 respectively.",
                "query": "SELECT avg(price_in_dollars) ,  min(price_in_dollars) FROM catalog_contents where catalog_entry_name = 'Cola'"
            },
            {
                "isuser": true,
                "text": "How about the prices for root beer in dollars?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please!\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please!\n",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "the average and minimum prices in dollars of the products whose catalog entry name is Root beer are 687.59 and 687.59 respectively. ",
                "query": "SELECT avg(price_in_dollars),  min(price_in_dollars) FROM catalog_contents where catalog_entry_name = 'Root beer'"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wedding",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the country with people younger than 30,",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the countries with people younger than 30.",
                "query": "SELECT distinct country FROM people WHERE age<30"
            },
            {
                "isuser": true,
                "text": "Show me a list of countries with people over the age of 30.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the countries with people older than 30.",
                "query": "SELECT distinct country FROM people WHERE age>30"
            },
            {
                "isuser": true,
                "text": "How many males 30 or older are in the Canada",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 person who is male in the country \"Canada\" and has an age that is 30 or older.",
                "query": "SELECT count(*) FROM people WHERE age>=30 and Is_Male='T' and country='Canada'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "show me the first and last names of employees whose first name does not contain letter M",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of first and last names of employees whose first name does not contain letter M. ",
                "query": "SELECT first_name ,  last_name FROM employees WHERE first_name NOT LIKE '%M%'"
            },
            {
                "isuser": true,
                "text": "show me the full name, hire date, salary and department number of these employees",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of first name, last name, hire date, salary and department id of the employees whose first name does not conain letter M.  For example.  Steven\tKing\t is borned on 1987-06-17. His salary is 24000 and his department id is 90.",
                "query": "SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'"
            },
            {
                "isuser": true,
                "text": "Set this result in ascending order of department number",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of first name, last name, hire data, salary, department id of the employees whose first name does not conain letter M, ordered by department id. For example, \nJennifer\tWhalen is borned on 1987-09-25. His salary is 4400 and his department id is 10",
                "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the customer who has been involved in most policies?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the customer who has been involved in the most policies is Dr. Diana Rath",
                "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is her ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the ID of the customer who has been involved in most policies is 380",
                "query": "SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many policies has she been involved in ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 3 policies that the customer who has been involved in the most policies has been involved in ",
                "query": "SELECT count(*) FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "orchestra",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me orchestra names and the major record formats?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The orchestra names and the major record formats are shown in the table. ",
                "query": "SELECT orchestra, Major_Record_Format  FROM orchestra"
            },
            {
                "isuser": true,
                "text": "I want a list of orchestra names in ascending order.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of orchestra names in ascending order are in the result table. ",
                "query": "SELECT orchestra FROM orchestra order by orchestra "
            },
            {
                "isuser": true,
                "text": "Hmm, please show me the record formats of orchestras in ascending order of count.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The record formats of orchestra in ascending order of count are shown in the result table. ",
                "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "allergy_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all student IDs that have any kind of allergy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all student IDs that have any kind of allergy.",
                "query": "SELECT StuID FROM Has_allergy "
            },
            {
                "isuser": true,
                "text": "Can you filter the list to only show student IDs that have food and animal type allergies?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the student IDs that have food and animal type allergies",
                "query": "SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\""
            },
            {
                "isuser": true,
                "text": "Can you display the ages associated with those student IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows ages of students that have food and animal type allergies ",
                "query": "SELECT age FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"
            },
            {
                "isuser": true,
                "text": "What is the average of those 3 ages?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "18.333333333333332 is the average age of students that have food and animal type allergies.",
                "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "List the names of all visitors who visited some museums more than once, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the names of all visitors who visited some museums more than once",
                "query": "SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Can you list their IDs and ages too?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names, ids and ages of the visitors who visited some museums more than once",
                "query": "SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What are the names and level of membership for all visitors over the age of 20?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and level of membership for all visitors over the age of 20",
                "query": "SELECT  name, Level_of_membership FROM visitor where age > 20"
            },
            {
                "isuser": true,
                "text": "What are the names and ages of all the customers who spent over 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and ages of all the customers who spent over 100",
                "query": "SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id where t2.total_spent > 100"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufacturer",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, can you find me the names of the furniture with less then 6 components?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of the furniture with less than 6 components. For example, one of them is Chabudai.",
                "query": "SELECT name FROM furniture where Num_of_Component < 6"
            },
            {
                "isuser": true,
                "text": "Thanks can you find me the names of the furniture with more then 10 components?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the names of the furniture with more than 10 components are Billiard table and Dining set.",
                "query": "SELECT name FROM furniture where Num_of_Component > 10"
            },
            {
                "isuser": true,
                "text": "Is there a company that makes furniture with less then 6 components and furniture with more then 10 components?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Tomorrow is the name of company that makes furniture with less than 6 components and furniture with more than 10 components.",
                "query": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many government forms are in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 239 government forms.",
                "query": "SELECT count(GovernmentForm) FROM country"
            },
            {
                "isuser": true,
                "text": "How many of those have an average life expectancy that is longer than 72?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the government form name  whose average life expectancy is longer than 72. There are 17 ",
                "query": "SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "What is the population of each of those government forms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the government form names and total population for each government form whose average life expectancy is longer than 72.",
                "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "What is the region for each of these?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the life expectancy for each of these?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the life expectancy for each of these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the average life expectancy for government form whose average life expectancy is longer than 72",
                "query": "SELECT avg(LifeExpectancy) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "Which government forms and their populations are those for?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Which government forms have an average life expectancy over 72, and what are their populations?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Which government forms have an average life expectancy over 72, and what are their populations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Thanks! Here is the list showing government forms and their total population for government forms having an average life expectancy over 72.",
                "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!\n",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "list the name of college in az?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the college in state AZ is ASU.",
                "query": "SELECT cName FROM College WHERE state = 'AZ'"
            },
            {
                "isuser": true,
                "text": "list the name of the colleges whose enrollment is lesser than 18000 sorted by the college's name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the name of the colleges whose enrollment is greater 18000 sorted by the college's name is shown.",
                "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
            },
            {
                "isuser": true,
                "text": "which college enrollment is 22000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the college whose enrollment is 22000 is OU.",
                "query": "SELECT cName FROM College WHERE enr=22000"
            },
            {
                "isuser": true,
                "text": "list the name of the colleges whose enrollment is greater than 12000 sorted by the college's name and state?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the colleges whose enrollment is greater than 12000 sorted by the college's name and state are listed.",
                "query": "SELECT cName FROM College WHERE enr  >  12000  ORDER BY cName , state"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "swimming",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Can you find me the names of all the swimmers who have \"win\" results in the record?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the names of all the swimmers who have win result in the record.  Sergiy Fesenko and Craig Stevens are part of the result.",
                "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'"
            },
            {
                "isuser": true,
                "text": "Can you find me the names of all the swimmers who have \"loss\" results in the record?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the names of all the swimmers who have loss result in the record. Oussama Mellouli, Sergiy Fesenko and Craig Stevens are part of the result.",
                "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"
            },
            {
                "isuser": true,
                "text": "Can you find me the names of all the swimmers who have both \"win\" and \"loss\" results in the record?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the names of all the swimmers who have both \"win\" and \"loss\". For example, Craig Stevens, Oussama Mellouli and Sergiy Fesenko are the names of all the swimmers who have both \"win\" and \"loss\" results in the record",
                "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"
            },
            {
                "isuser": true,
                "text": "What are these three swimmers' nationalities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Craig Stevens is from Australia.\nOussama Mellouli is from Tunisia.\nSergiy Fesenko is from Ukraine",
                "query": "SELECT t1.name, t1.Nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name, t1.Nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"
            },
            {
                "isuser": true,
                "text": "What were their times in the meter 300?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the names and times in the meter 300 of swimmers who have both win and loss records.",
                "query": "SELECT t1.name, t1.meter_300 FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name, t1.meter_300  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Could you show me the IDs for the investors who have the top 3 number of transactions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the investor IDs with the top 3 number of transactions.",
                "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Could you add in the investor details to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the investor IDs and details for the investors with the top 3 number of transactions.",
                "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Could you show me the IDs for the investors who have the bottom 3 number of transactions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the investor IDs with the lowest 3 number of transactions.",
                "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) ASC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What are the investor ID and details for the investor who had the earliest transaction date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The investor ID and details for the investor with the earliest transaction date is 20 and j.",
                "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY T2.date_of_transaction ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "how many trips started from howard and ended at san fransisco",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no trip started from a station in the city of Howard and ended at a station in the city of San Fransisco.",
                "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Howard\" AND T3.city  =  \"San Fransisco\""
            },
            {
                "isuser": true,
                "text": "how many trips started from south van ness and ended at san fransisco",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no trip started from a station in the city of south van ness and ended at a station in the city of San Fransisco. ",
                "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"South Van Ness\" AND T3.city  =  \"San Fransisco\""
            },
            {
                "isuser": true,
                "text": "how many trips started from mountain view city and ended in palo alto city",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 7 trips started from a station in the city of mountain view and ended in a station in the city of palo alto.",
                "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\""
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "restaurant_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, could you please let me know the list of all female students who are older than 18 and not majoring in 600?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Oh sorry for the confusion, it would be great if I can see their first and last name.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oh sorry for the confusion, it would be great if I can see their first and last name.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "OK,The first name and last name of  all female students age is older than 18 who is not majoring in 600 are shown in the table ",
                "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';"
            },
            {
                "isuser": true,
                "text": "Thank you very much! Then could you please show me the male students' first and last name with the same condition? Meaning older than 18 and not majoring in 600.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name and last name of all male students age is older than 18 who is not majoring in 600 are shown in the table ",
                "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'M';"
            },
            {
                "isuser": true,
                "text": "Thank you again. Could you please let me know who are the oldest among them with his age?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes please, so my question would be about the oldest male student who is not majoring in 600.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes please, so my question would be about the oldest male student who is not majoring in 600.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The fname and lname of the oldest male student who is not majoring in 600 is Ian \tThornton",
                "query": "SELECT Fname , Lname FROM Student WHERE   Major != 600 AND Sex = 'M' order by Age desc limit 1 "
            },
            {
                "isuser": true,
                "text": "Then could you please let me know what is Ian Thornton's major and advisor code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " Ian Thornton's major and advisor code are 520 and 7271",
                "query": "SELECT Major , Advisor FROM Student WHERE LName=\"Thornton\" and FName=\"Ian\""
            },
            {
                "isuser": true,
                "text": "Thank you very much. This will be my last question, could you please show me the name of female students who are majoring in 520, if there are any?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes please, first and last name would be great.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes please, first and last name would be great.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The name of female students who are majoring in 520 is empty",
                "query": "select Fname , Lname FROM Student  where Sex = 'F' and Major=520"
            },
            {
                "isuser": true,
                "text": "haha that's fine! I really appreciate your help, hope you have a great day ahead. Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome and  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "mountain_photos",
        "turns": [
            {
                "isuser": true,
                "text": "How many distinct kinds of camera lenses are used to take photos of mountain ranges in the country \"Ethiopia\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia' is 1.",
                "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'"
            },
            {
                "isuser": true,
                "text": "What about in other countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of distinct kinds of camera lenses are used to take photos of mountains in countries other than Ethiopia is 5.",
                "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  !=  'Ethiopia'"
            },
            {
                "isuser": true,
                "text": "What are the names of the photographers who used those lenses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names of the photographers who used lenses in countries other than Ethiopia.",
                "query": "SELECT T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  !=  'Ethiopia'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_employee",
        "turns": [
            {
                "isuser": true,
                "text": "hi, can you show me headquarters that have companies in the banking industry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the headquarters that have companies in the banking industry",
                "query": "SELECT distinct  Headquarters FROM company WHERE Industry  =  \"Banking\" "
            },
            {
                "isuser": true,
                "text": "and can you also show me headquarters that have companies in the oil and gas industry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the headquarters that have companies in the oil and gas industry",
                "query": "SELECT distinct Headquarters FROM company WHERE Industry = \"Oil and gas\""
            },
            {
                "isuser": true,
                "text": "and can you show me only those headquarters that have both companies in oil and gas as well as banking industry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the headquarters that have both companies in oil and gas industry as well as banking industry",
                "query": "SELECT Headquarters FROM company WHERE Industry = \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry = \"Oil and gas\""
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "architecture",
        "turns": [
            {
                "isuser": true,
                "text": "How long is the Fairy Bridge?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The bridge named Fairy Bridge is not in the table. ",
                "query": "SELECT length_meters from bridge where name = \"Fairy Bridge\""
            },
            {
                "isuser": true,
                "text": "Can you find the bridge name Xian Ren Qiao?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the details of bridge named Xian Ren Qiao (Fairy Bridge) is shown in the result table. ",
                "query": "SELECT * from bridge where name = \"Xian Ren Qiao (Fairy Bridge)\""
            },
            {
                "isuser": true,
                "text": "Do you know who the architect is for that bridge?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details of the architect of the bridge named Xian Ren Qiao (Fairy Bridge) are shown in the result table.  ",
                "query": "SELECT T2.* from bridge as T1 join architect as T2 on T1.architect_id = T2.id where T1.name = 'Xian Ren Qiao (Fairy Bridge)'"
            },
            {
                "isuser": true,
                "text": "What other bridges did Wright architect?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details of the bridges that were by architect named Frank Lloyd Wright and were not called Xian Ren Qiao (Fairy Bridge)  are shown in the result table. ",
                "query": "SELECT T1.* from bridge as T1 join architect as T2 on T1.architect_id = T2.id where T2.name = \"Frank Lloyd Wright\" and T1.name != \"Xian Ren Qiao (Fairy Bridge)\""
            },
            {
                "isuser": true,
                "text": "Do you know the mills built by architects who also built a bridge longer than 80 meters?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details of the mills built by the architects who also have built a bridge longer than 80 meters are shown in the result table. ",
                "query": "SELECT T1.* FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "election",
        "turns": [
            {
                "isuser": true,
                "text": "Could you list the names of all counties in ascending alphabetical order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of all counties in ascending alphabetical order. For example, the first one is Baltimore County.",
                "query": "SELECT County_name FROM county order by County_name"
            },
            {
                "isuser": true,
                "text": "How many delegates do each of these counties have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the number of delegates and the name of the counties. For example, Howard has 3 delegates.",
                "query": "SELECT T1.County_name,COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"
            },
            {
                "isuser": true,
                "text": "Could you only show the counties that have at least two delegates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the counties that have at least two delegates. For example, one of them is Howard.",
                "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "protein_institute",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of all the buildings. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the names of all the buildings.",
                "query": "SELECT name FROM building "
            },
            {
                "isuser": true,
                "text": "Show the names of all buildings that have an institution. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of all buildings that have an institution.",
                "query": "SELECT name FROM building WHERE building_id IN (SELECT building_id FROM institution)"
            },
            {
                "isuser": true,
                "text": "Show the number of floors for each of the buildings that have an institution. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the number of floors for each of the buildings that have an institution.",
                "query": "SELECT floors FROM building WHERE building_id IN (SELECT building_id FROM institution)"
            },
            {
                "isuser": true,
                "text": "Show the name of buildings that do not have an institution. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of buildings that do not have an institution is Bank of America Tower.",
                "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)"
            },
            {
                "isuser": true,
                "text": "What is the street address of the Bank of America Tower.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The street address of the Bank of America Tower is 101 East Kennedy Boulevard.",
                "query": "select Street_address from building where name = \"Bank of America Tower\""
            },
            {
                "isuser": true,
                "text": "List the buildings that have an institution and their street address. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of buildings that have an institution and their street address.",
                "query": "SELECT name, street_address FROM building WHERE building_id IN (SELECT building_id FROM institution)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all of the staff first names please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the list of the staff first names.",
                "query": "SELECT first_name FROM Staff"
            },
            {
                "isuser": true,
                "text": "Can you filter that list to show only the staff with the letter 'a' in their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. This is the list of staff first names with letter 'a' in their names.",
                "query": "SELECT first_name FROM Staff where first_name LIKE \"%a%\""
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you list how many lessons each of those individuals taught?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome. Here is the list of number of lessons taught by staff whose first name has letter 'a' in it.",
                "query": "SELECT count(*), T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the total home game attendance of all teams from 2000 to 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "33530145004 is the total home game attendance of all teams from 2000 to 2010.",
                "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010;"
            },
            {
                "isuser": true,
                "text": "What about for just the team Boston Red Stockings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "156651355 is the total home game attendance of the team Boston Red Stockings from 2000 to 2010.",
                "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;"
            },
            {
                "isuser": true,
                "text": "What's the average total home game attendance for the Cleveland Forest Citys for all years?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "827949.2631578947 is the average total home game attendance for the Cleveland Forest Citys for all years.",
                "query": "SELECT avg(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Cleveland Forest Citys'"
            },
            {
                "isuser": true,
                "text": "What about for the Chicago White Stockings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sorry there is no record about the home game attendance for Chicago White Stockings.",
                "query": "SELECT avg(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Chicago White Stockings'"
            },
            {
                "isuser": true,
                "text": "What is the name of the team with the earliest home game date, and what is that date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name of the team with the earliest home game date, and the date of that game.",
                "query": "SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br order by T1.span_first limit 1"
            },
            {
                "isuser": true,
                "text": "What about the latest date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name of the team with the latest home game date, and the date of that game.",
                "query": "SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br order by T1.span_first desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all the names of the students who have the position of striker?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Blake is the name of the student who has a position of striker in tryout.",
                "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  'striker'"
            },
            {
                "isuser": true,
                "text": "Can you also list the tryout decision they got please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the name and decision of the player who has a position of striker in the tryout.",
                "query": "SELECT T1.pName,T2.decision FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  'striker'"
            },
            {
                "isuser": true,
                "text": "What are the names and positions of all players who got a no for their tryout decision?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and positions of players who got a no for their tryout decisions.",
                "query": "SELECT T1.pName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision = \"no\""
            },
            {
                "isuser": true,
                "text": "What are the names and college names of all players who have over 700 training hours?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and college names of all players who have over 700 training hours.",
                "query": "SELECT T1.pName,T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS > 700"
            },
            {
                "isuser": true,
                "text": "Can you add their positions into the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names, college names, and positions of all players who have over 700 training hours.",
                "query": "SELECT T1.pName,T2.cName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS > 700"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_in_alabama",
        "turns": [
            {
                "isuser": true,
                "text": "What ids have more than one participant?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Event ID and Service ID",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Event ID and Service ID",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of Event IDs and Service IDs of the events that have more than one participant. For example, one of the events has Event ID 3 and Service ID 5.",
                "query": "SELECT T1.event_id ,  T1.service_id FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "And which Event Details have more than one participant?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I mean the details of the events that have more than one participant.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I mean the details of the events that have more than one participant.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the details of the events that have more than one participant. For example, one of the event details is \"Success\".",
                "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "and how many more fail than have success?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The number of occurrences of \"Fail\" is 3 more than the number of occurrences of \"Success\".",
                "query": "SELECT Event_Details, COUNT(*) FROM Events GROUP BY Event_Details"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show me all the wine names made in the year 2006.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of all the wines made in the year 2006.",
                "query": "SELECT Name FROM WINE WHERE YEAR  =  2006"
            },
            {
                "isuser": true,
                "text": "Show me their prices.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the price of all the wines made in the year 2006.",
                "query": "SELECT Price FROM WINE WHERE YEAR  =  2006"
            },
            {
                "isuser": true,
                "text": "What is the maximum of these prices?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The maximum of the prices of all the wines made in the year 2006 is \"200\".",
                "query": "SELECT max(Price) FROM WINE WHERE YEAR  =  2006"
            },
            {
                "isuser": true,
                "text": "Show me all the wine names that have a price higher than 200.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the wine has the price higher than 200 is \"Darius II\".",
                "query": "SELECT name FROM WINE WHERE price>200"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "battle_death",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all of the battle ids and the corresponding battle names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the battle ids and the corresponding battle names is listed.",
                "query": "SELECT T1.id ,  T1.name FROM battle AS T1"
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show just the battle IDs and battle names of the battles that had more than 10 deaths associated with them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the battle ids and battle names of those that had more than 10 people killed in total is listed.",
                "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10"
            },
            {
                "isuser": true,
                "text": "Wonderful!  Can you update this list to include the date of each of these three battles?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the battle ids\uff0cbattle names and date of those that had more than 10 people killed in total is listed. ",
                "query": "SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name of account that has the lowest total checking and saving balance.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  name  of the account that has the lowest total checking and savings balance is Porter",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Ok!. Can you please give me the names of the accounts where the checking balance is more than 3000",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of  the accounts where the checking balance is more than 3000 are  shown  in the  table ",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid where T2.balance>3000"
            },
            {
                "isuser": true,
                "text": "Give me the names of the accounts where the savings balance is more than 20000",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  names of the accounts where the savings balance is more than 20000   are  shown  in the  table",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid where T3.balance>20000"
            },
            {
                "isuser": true,
                "text": "What is the highest balance in the savings account?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  highest balance in the savings account is 999999999.0",
                "query": "select  \tbalance from SAVINGS order  by  \tbalance  desc  limit  1"
            },
            {
                "isuser": true,
                "text": "Hmmm. Please tell me what is the lowest balance in the savings account.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the lowest balance in the savings account is 60.0",
                "query": "select  \tmin(balance) from SAVINGS "
            },
            {
                "isuser": true,
                "text": "Can you also give me the lowest and the highest balance for checking account.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the highest balance for a checking account is 10000.0 and the lowest balance for a checking account is 7.0",
                "query": "select  \tmax(balance),min(balance) from CHECKING"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome  and  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please list all the characteristics of the product named sesame?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all the characteristics of the product named sesame",
                "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" "
            },
            {
                "isuser": true,
                "text": "Can you please list all the characteristics of the product named sesame with the type code \"Grade\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all the characteristics of the product named sesame with the type code \"Grade\"",
                "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code = \"Grade\""
            },
            {
                "isuser": true,
                "text": "What is the characteristic name of the product with the highest typical selling price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the characteristic name of the product with the highest typical selling price is error",
                "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id  order by t1.typical_selling_price desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_fnol",
        "turns": [
            {
                "isuser": true,
                "text": "Exactly",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "How many policies are listed for the customer named \"Dayana Robel\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of policies that are listed for the customer named \"Dayana Robel\" is 2",
                "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\""
            },
            {
                "isuser": true,
                "text": "And for America Jaskolski?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of policies that are listed for the customer named \"America Jaskolski\" is 0.",
                "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"America Jaskolski\""
            },
            {
                "isuser": true,
                "text": "Why does the table show two instance of opened policies for Ellsworth Paucek?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "How many policies does Ellsworth Paucek have listed?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "How many policies does Ellsworth Paucek have listed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of policies that are listed for the customer named \"Ellsworth Paucek\" is 2. ",
                "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Ellsworth Paucek\""
            },
            {
                "isuser": true,
                "text": "Which customer opened a policy on 7-22-16?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The customer who opened a policy on 2016-07-22 has the name Mrs. Hanna Willms.",
                "query": "SELECT t1.Customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.Date_Opened  =  \"2016-07-22\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Which product descriptions contain the letter t?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The products whose descriptions contain the letter \"t\" was shown in the table.",
                "query": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
            },
            {
                "isuser": true,
                "text": "What are their prices?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Buying price.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Buying price.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The typical buying price of products whose descriptions contain the letter \"t\" was shown in the table.",
                "query": "SELECT T2.typical_buying_price FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
            },
            {
                "isuser": true,
                "text": "What is the average buying price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average buying price of those products whose descriptions contain the letter \"t\" is 63984995.70524567.",
                "query": "SELECT avg(T2.typical_buying_price) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
            },
            {
                "isuser": true,
                "text": "Which of those products does not have a buying price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Cumin, borage and laurel are products whose descriptions contain the letter \"t\" that don't have a typical buying price",
                "query": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%' AND T2.typical_buying_price = \"\";"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome! GoodBye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you tell me how many different purchases Lucas Mancini has made?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer with first name Lucas and last name Mancini has 7 invoices.",
                "query": "SELECT count(*) FROM invoices AS T2 JOIN customers AS T1 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
            },
            {
                "isuser": true,
                "text": "Great!  How much total money has Lucas Mancini spent in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer with first name Lucas and last name Mancini has spent a total of 37.620000000000005.",
                "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
            },
            {
                "isuser": true,
                "text": "What was the most recent associated invoice date for Lucas Mancini?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most recent invoice date for customer with the first name Lucas and last name Mancini is '2011-03-05 00:00:00'.",
                "query": "SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\" ORDER BY t2.invoice_date DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_bus",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me all school names and bus driver names for each of the school buses in this database?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi! Welcome. Here is the result table of all the school names and bus driver names for each of the school buses in this database. For example, Noelani Elementary School's bus driver's name is Henry Genga.",
                "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you filter this list to show only the rows corresponding with the 3 drivers with the most years working?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Thank you for that!  I see that the \"years working\" is for the school buses!  Can you filter this list to show only the drivers who are associated with schools in the United States?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thank you for that!  I see that the \"years working\" is for the school buses!  Can you filter this list to show only the drivers who are associated with schools in the United States?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the drivers associated with schools in the United States. By the way, there is no column in the table indicating whether the school is in the United States, so I filtered it by state.",
                "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id WHERE T2.Location = \"Honolulu, Hawaii\" OR T2.Location = \"Los Angeles, California\" OR T2.Location = \"New York City\" OR T2.Location = \"Cambridge, Massachusetts\""
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you tell me which of the schools, if any, are associated with more than one grade?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome! If you don't have any more questions, good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_1",
        "turns": [
            {
                "isuser": true,
                "text": "Age and sex of Smith Linda?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The age and sex of the student whose last name is Smith and first name is Linda are 18 and F respectively.",
                "query": "SELECT age , sex from student where Lname=\"Smith\" and Fname = 'Linda'"
            },
            {
                "isuser": true,
                "text": "What type of game is 'The Vanishing of Eric Calder'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The type of game whose name is The Vanishing of Eric Calder is Walking Simulator.",
                "query": "SELECT \tGType from Video_games where GName='The Vanishing of Eric Calder'"
            },
            {
                "isuser": true,
                "text": "Provide the last name and gender of students who played both Call of Destiny and Works of Widenius games?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "None of the students is playing both Call of Destiny and Works of Widenius games.",
                "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")"
            },
            {
                "isuser": true,
                "text": "Give the hours played by Kim Tracy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The hours that the student whose first name is Tracy and last name is Kim plays game for is listed.",
                "query": "SELECT Hours_Played FROM  student as T1 JOIN Plays_Games AS T2  WHERE Lname='Kim' and Fname='Tracy'"
            },
            {
                "isuser": true,
                "text": "City code of Jones Shiela?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The city code of the student whose first name is Shiela and last name is Jones is WAS.",
                "query": "SELECT city_code from student where Fname ='Shiela' and Lname = 'Jones'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Do you mean the age and sex of the student whose last name is Smith and first name is Linda?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "show me the names and ids of all stations",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and ids of all stations.",
                "query": "SELECT name , id FROM station"
            },
            {
                "isuser": true,
                "text": "How many stations had more than 14 bikes available on average or were installed in december?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 stations that had more than 14 bikes available on average or were installed in december.",
                "query": "select count(*) from (SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name FROM station WHERE installation_date LIKE \"12/%\")"
            },
            {
                "isuser": true,
                "text": "show me the name and ids of these stations",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and ids of the stations that had more than 14 bikes available on average or were installed in december.",
                "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "inn_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the names of all modern rooms with a base price below $160 and two beds.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the room in a modern decoration style with  a base price below $160 and two beds is Mendicant with cryptic",
                "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';"
            },
            {
                "isuser": true,
                "text": "Which room has highest price value? tell me the name and Room ID",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and the room id of the room that has the highest base price is Frugal not apropos and FNA respectively.",
                "query": "SELECT roomName, roomid FROM Rooms WHERE basePrice = (select max(baseprice) from rooms)"
            },
            {
                "isuser": true,
                "text": "Which room has lowest price value? tell me the price, the name and Room ID",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The room with name Thrift and accolade has the lowest base price. Its id is TAA and its base price is 75.",
                "query": "SELECT baseprice, roomName, roomid FROM Rooms WHERE basePrice = (select min(baseprice) from rooms)"
            },
            {
                "isuser": true,
                "text": "Which room has most number of beds?Tell me the Room ID, Name and decor?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids, names and decors for the rooms with the largest number of beds",
                "query": "SELECT roomid, roomName, decor FROM Rooms WHERE beds = (select max(beds) from rooms)"
            },
            {
                "isuser": true,
                "text": "Good, Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_market",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list all market ids and the names of the districts associated with them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows  all market ids and the names of the districts associated with them",
                "query": "SELECT market_id, district from market"
            },
            {
                "isuser": true,
                "text": "Can you add to the table the phone ids from the table phone market that are associated with each market id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all market ids and the names of the districts and phone ids associated with them.",
                "query": "SELECT t1.market_id,t1.district,t2.phone_id from market as t1 join phone_market as t2 on t1.market_id = t2.market_id"
            },
            {
                "isuser": true,
                "text": "Can you add to the table the name of the phones associated with each of the phone ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all market ids and the names of the districts, phone ids and phone names associated with them.",
                "query": "SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID"
            },
            {
                "isuser": true,
                "text": "Can you sort the table by phone id, but still retain all information within the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all market ids and the names of the districts, phone ids and phone names associated with them sorted by phone id",
                "query": "SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID order by t1.phone_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "product_catalog",
        "turns": [
            {
                "isuser": true,
                "text": "Tell the capacity, length, height and width for the catalog entry name cola ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the capacity, length, height, and width for the catalog content with entry name of cola.",
                "query": "SELECT capacity, length, height, width FROM catalog_contents WHERE catalog_entry_name = \"Cola\""
            },
            {
                "isuser": true,
                "text": "Tell me the price of Cream Soda in dollars, euros and pounds.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are price in dollars, price in euros, and price in pounds for the catalog content with entry name of Cream Soda.",
                "query": "SELECT price_in_dollars, price_in_euros, price_in_pounds FROM catalog_contents WHERE catalog_entry_name = \"Cream Soda\""
            },
            {
                "isuser": true,
                "text": "What is the product with the highest height ? Give me the catalog entry name.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The catalog entry name with the highest height is Cola.",
                "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes, hi, I'd like to know how many professors are in the history department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 professors in the history department. ",
                "query": "SELECT count(*) FROM professor WHERE dept_code = \"HIST\" "
            },
            {
                "isuser": true,
                "text": "Do both of them have doctorates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "No, only one of the professors in the history department has a Ph.D. high degree. ",
                "query": "SELECT count(*) FROM professor WHERE dept_code = \"HIST\" and prof_high_degree = \"Ph.D.\""
            },
            {
                "isuser": true,
                "text": "How many departments are there total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 11 different departments in total. ",
                "query": "SELECT count(distinct dept_code) FROM professor "
            },
            {
                "isuser": true,
                "text": "Is English one of them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, \"Eng\" is a department code. ",
                "query": "SELECT distinct dept_code from professor where dept_code = \"ENG\" "
            },
            {
                "isuser": true,
                "text": "Do any of the English professors have a PhD?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, there are 2 professors in the department Eng that have a degree Ph.D.",
                "query": "SELECT count(*) from professor where dept_code = \"ENG\" and prof_high_degree = \"Ph.D.\""
            },
            {
                "isuser": true,
                "text": "How many of the English professors with PhDs are female?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Can you tell me where the history Doctorate's office is?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you tell me where the history Doctorate's office is?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The professor with a degree Ph.D. and in dept code \"HIST\" has a prof office DRE 156. ",
                "query": "SELECT prof_office from professor where dept_code = \"HIST\" and prof_high_degree = \"Ph.D.\" "
            },
            {
                "isuser": true,
                "text": "What is the total number professors with doctorates employed by the 11 departments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 18 total professors with doctorates.",
                "query": "SELECT count(*) from professor where prof_high_degree = \"Ph.D.\" "
            },
            {
                "isuser": true,
                "text": "Of those 18, how many doctorates are employed by the accounting department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors in with high degree Ph.D. with department code \"ACCT\" is 3. ",
                "query": "SELECT count(*) from professor where prof_high_degree = \"Ph.D.\" and dept_code = \"ACCT\""
            },
            {
                "isuser": true,
                "text": "Can you tell me where their offices are?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The prof_office of the professors with degree PHD and  department code \"ACCT\" are shown in the result table. ",
                "query": "SELECT prof_office from professor where prof_high_degree = \"Ph.D.\" and dept_code = \"ACCT\""
            },
            {
                "isuser": true,
                "text": "Can you tell me the extension for the professor in office KLR229D, please?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The extension for the professor in office KLR229D, with degree Ph.D. and in department code \"ACCT\" is 8665.",
                "query": "SELECT prof_extension from professor where prof_high_degree = \"Ph.D.\" and dept_code = \"ACCT\" and prof_office = \"KLR 229D\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many female students (sex is F) live in BAL",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 female students (sex is F) living in the city with code BAL",
                "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND city_code  =  'BAL' "
            },
            {
                "isuser": true,
                "text": "What are their last names?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the last names of the female students (sex is F) living in the city with code BAL",
                "query": "SELECT Lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' "
            },
            {
                "isuser": true,
                "text": "Can you also show me the last names of any male students (sex is M) who are below the age of 20?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the last names of all male students (sex is M) who are below the age of 20",
                "query": "SELECT Lname FROM student WHERE sex  =  'M' AND age < 20"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the title of course that is provided by Statistics but not Psychology departments.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the titles of the courses that are provided by Statistics but not Psychology departments.",
                "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
            },
            {
                "isuser": true,
                "text": "How many credits is Care and Feeding of Cats?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The credits of the course with the title 'Care and Feeding of Cats' is 3.",
                "query": "SELECT credits FROM course WHERE title  =  'Care and Feeding of Cats'"
            },
            {
                "isuser": true,
                "text": "What is the course id of that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The course id of the course with the title 'Care and Feeding of Cats' is 603.",
                "query": "SELECT course_id FROM course WHERE title  =  'Care and Feeding of Cats'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "program_share",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  How are you!?  Can you provide me with a list of all program IDs and program names?",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "The following table is a list of all program IDs and program names.",
                "query": "SELECT Program_ID, name From program"
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show the program IDs and program names for programs that are not broadcast in the mornings?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The following table is a list of program names and program IDs for programs that are not broadcast in the mornings.",
                "query": "select t1.name, t2.program_id from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = \"Morning\"\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome. If you don't have any more questions, good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "baseball_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the name of players?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first, last, and given names of all the players.",
                "query": "SELECT name_first, name_last, name_given FROM player"
            },
            {
                "isuser": true,
                "text": "Show me the name of person who received salary from team Washington nationals?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first, last, and given names of all the players who received a salary from team Washington Nationals.",
                "query": "SELECT T2.name_first , T2.name_last, T2.name_given FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"
            },
            {
                "isuser": true,
                "text": "Show me the names of players who  received salary in both 2005 and 2007? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first, last, and given names of all the players who received a salary in both 2005 and 2007.",
                "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 or T1.year = 2007"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are all of the countries where English isn't the official language?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the countries where English isn't the official language",
                "query": "SELECT name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")"
            },
            {
                "isuser": true,
                "text": "What is the average life expectancy in each of those countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average life expectancy in the countries where English is not the official language is 65.48270270270272",
                "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")"
            },
            {
                "isuser": true,
                "text": "What is the average life expectancy in countries where English is the official language?",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average life expectancy in countries where English is the official language is 71.5027027027027",
                "query": "SELECT avg(LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "product_catalog",
        "turns": [
            {
                "isuser": true,
                "text": "What were the dates of the latest revisions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of all the dates of the latest revisions.",
                "query": "SELECT date_of_latest_revision FROM Catalogs"
            },
            {
                "isuser": true,
                "text": "Which of these appear more than once?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are all the dates on which more than one revision were made.",
                "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "What catalogs were done on these dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the catalog names revised on the dates on which more than one revisions were made.",
                "query": "select catalog_name from Catalogs where date_of_latest_revision in (SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*) > 1)"
            },
            {
                "isuser": true,
                "text": "Great, can you show me the dates these catalogs were revised again?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here are the catalog names and their dates of latest revision revised on dates on which more than one revisions were made.",
                "query": "select catalog_name, date_of_latest_revision from Catalogs where date_of_latest_revision in (SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1)"
            },
            {
                "isuser": true,
                "text": "Can you show me what dates appear more than once again?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here are the dates on which more than one revisions were made.",
                "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "Sure! Great! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show the color of Barbera Grape?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The color of  Barbera Grape is red.",
                "query": "SELECT color FROM grapes WHERE Grape = \"Barbera\""
            },
            {
                "isuser": true,
                "text": "Show the grape which scores higher than 90?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the grapes which scores are higher than 90 are listed in the result table. There are Zinfandel, Sauvignon Blanc, etc.",
                "query": "SELECT DISTINCT grape FROM wine WHERE score > 90"
            },
            {
                "isuser": true,
                "text": "Show the grape whose white color grapes are used to produce wines?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the grapes whose white color grapes are used to produce wines are listed in the result table. There are Sauvignon Blanc, Chardonnay, etc.",
                "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the distinct names of all the songs that have a higher resolution than some songs in English, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the distinct names of all songs that have a higher resolution than some songs in English is shown.",
                "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"
            },
            {
                "isuser": true,
                "text": "What countries are those songs from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The countries of all songs that have a higher resolution than some songs in English are India and USA.",
                "query": "SELECT  country FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"
            },
            {
                "isuser": true,
                "text": "Can you add the songs' names and resolutions to the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the song's countries, names and resolutions of those that have a higher resolution than some songs in English is shown.",
                "query": "SELECT  country,song_name, resolution FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"
            },
            {
                "isuser": true,
                "text": "What are the names of the top 3 rated songs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "v2/music_1/query_feedback/U0VMRUNUICBzb25nX25hbWUgRlJPTSBzb25nIG9yZGVyIGJ5IHJhdGluZyBkZXNjIGxpbWl0IDM=/MDAReNKT5MB9YRjuw/",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Could you add the artists' names to the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of songs and artists of the top 3 rated songs are listed.",
                "query": "SELECT  song_name,artist_name FROM song order by rating desc limit 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Hi! Which engineer has visited the most times?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Which engineer id has visited the most?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Which engineer id has visited the most?",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The engineer with id 1 has visited the most.",
                "query": "SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is that engineer's full name, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the id as well as first and last names of the engineer who has visited the most times.",
                "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are all of her visit start datetimes and visit end datetimes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the visit start datetime and visit end datetime of the visit of the engineer who has visited the most times.",
                "query": "select visit_start_datetime, visit_end_datetime from engineer_visits where engineer_id = (SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "course_teach",
        "turns": [
            {
                "isuser": true,
                "text": "What're the names of the teachers who teach two or more courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the teacher who teaches two or more courses is Anne Walker",
                "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "What is her age and hometown?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The age and hometown of the teacher who teaches two or more courses are 41 and Little Lever Urban District .",
                "query": "SELECT T2.age, t2.hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
            },
            {
                "isuser": true,
                "text": "What grade does the oldest teacher teach?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grade the oldest teacher teach is 1",
                "query": "SELECT t1.grade FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID order by t2.age desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please list all the names of the countries that are in the continent of Europe?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the countries that are in the continent of Europe",
                "query": "SELECT Name FROM country WHERE continent  =  \"Europe\""
            },
            {
                "isuser": true,
                "text": "Can you please only show those countries with a population of 80000 in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no country that are in the continent of Europe and have a population of 80000",
                "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "club_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many students are members of the club \"Bootup Baltimore\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 members of the club with name Bootup Baltimore",
                "query": "SELECT count(*) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid where T1.clubname = \"Bootup Baltimore\""
            },
            {
                "isuser": true,
                "text": "Please provide the ages of the two members.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The 2 members of the club with name Bootup Baltimore are aged 17 and 18 respectively",
                "query": "SELECT T3.age from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = \"Bootup Baltimore\""
            },
            {
                "isuser": true,
                "text": "What is the average age of the two members of the club Bootup Baltimore?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average age of the two members of the club with name Bootup Baltimore is 17.5",
                "query": "SELECT avg(T3.age) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = \"Bootup Baltimore\""
            },
            {
                "isuser": true,
                "text": "Could you please tell me who is President of the club Bootup Baltimore.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, please provide first and last name of the President of the club Bootup Baltimore.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, please provide first and last name of the President of the club Bootup Baltimore.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The full name of the President of the club with name Bootup Baltimore is Linda Smith",
                "query": "SELECT T3.fname, T3.lname from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = \"Bootup Baltimore\" and T2.position = \"President\""
            },
            {
                "isuser": true,
                "text": "Thanks.  Could you please tell me the Club Location?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the Club Location of the club with name Bootup Baltimore is AKW",
                "query": "SELECT clublocation from club where clubname = \"Bootup Baltimore\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Which wines are made of Red color grapes? ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the wine names for wine made of Red color grapes.",
                "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""
            },
            {
                "isuser": true,
                "text": "Out of them which have prices higher than 50?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the wine names for wine made of Red color grapes and with a price higher than 50.",
                "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"
            },
            {
                "isuser": true,
                "text": "And where are they located? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states for wine made of Red color grapes and with a price higher than 50.",
                "query": "SELECT T2.state FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of customers who use Credit Card payment method",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the customers who use Credit Card payment method.",
                "query": "SELECT customer_name from customers where payment_method_code = 'Credit Card'"
            },
            {
                "isuser": true,
                "text": "Which of those customers have more than 2 orders?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sterling and Cleo are the customers that use credit card payment method and have more than two orders.",
                "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "Show me their customer addresses",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are customer addresses of the customers that use credit card payment method and have more than two orders.",
                "query": "SELECT  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_2",
        "turns": [
            {
                "isuser": true,
                "text": "list the name of the city that students live in",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The codes of the cities that students live in are listed.",
                "query": "SELECT city_code FROM STUDENT "
            },
            {
                "isuser": true,
                "text": "show me the city names too",
                "type": "NOT_RELATED"
            },
            {
                "isuser": false,
                "text": "mention the city code of the city that the most students live.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "mention the city code of the city that the most students live.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The city code of the city which the most students live in is BAL.",
                "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Do you mean the codes of the cities that students live in?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes",
                "type": "AFFIRM"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_transcripts_tracking",
        "turns": [
            {
                "isuser": true,
                "text": "What is the full name of the department that has the substring computer in its name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The full name of the department that has the substring computer in its name is computer science.",
                "query": "SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'"
            },
            {
                "isuser": true,
                "text": "What's the description of that department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The description of the department that has the substring computer in its name is \"error\".",
                "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'"
            },
            {
                "isuser": true,
                "text": "What is that department's id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The department_id of the department that has the substring computer in its name is 1.",
                "query": "SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'"
            },
            {
                "isuser": true,
                "text": "Are there any other details about that department?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. The other details of the department that has the substring computer in its name is NULL",
                "query": "SELECT other_details FROM Departments WHERE department_name LIKE '%computer%'"
            },
            {
                "isuser": true,
                "text": "What about for history?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What are the other details for the department named history?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What are the other details for the department named history?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The other details for the department named history is \"NULL\"",
                "query": "SELECT other_details FROM Departments WHERE department_name = \"history\""
            },
            {
                "isuser": true,
                "text": "Are there any departments with other details that are not the word 'NULL' ?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No. There is no department with other details that are not the word 'NULL'.",
                "query": "SELECT department_name FROM Departments WHERE other_details != \"NULL\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "election_representative",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of representatives in descending order of votes please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of names of representatives in descending order of votes.",
                "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
            },
            {
                "isuser": true,
                "text": "What are their parties?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "We show here the names and the parties of representatives in descending order of votes. ",
                "query": "SELECT T2.Name, T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
            },
            {
                "isuser": true,
                "text": "What states are they from, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and states for the representatives in descending order of votes.",
                "query": "SELECT T2.Name, T2.State FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
            },
            {
                "isuser": true,
                "text": "What are their vote percents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and vote percents for the representatives in descending order of votes.",
                "query": "SELECT T2.Name, T1.Vote_Percent FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
            },
            {
                "isuser": true,
                "text": "What about their dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and election dates for the representatives in descending order of votes.",
                "query": "SELECT T2.Name, T1.date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_3",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me the last name, age and first name for the student id 1003 and 1004...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name, age, and first name for students with id 1003 and 1004 are shown in the result table. ",
                "query": "SELECT LName, age, FName FROM STUDENT WHERE stuid = 1003 or stuid = 1004"
            },
            {
                "isuser": true,
                "text": "Tell me the sex of 1005 and 1004 and their city code ..",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The sex and city code of students with ids 1005 and 1004 are shown in the result table. ",
                "query": "SELECT sex, city_code FROM STUDENT WHERE stuid = 1005 or stuid = 1004"
            },
            {
                "isuser": true,
                "text": "Tell me total number of Male students and total number of female students.....",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of students with sex Male and the total number of students with sex female are shown in the result table.",
                "query": "SELECT sex, count(*) FROM STUDENT group by sex"
            },
            {
                "isuser": true,
                "text": "Find the last name of female (Sex as F) students in the descending order of age.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last names of the students with sex as F in descending order of age are shown in the result table.",
                "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "allergy_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which major has the highest number of students?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the major that has the most students is 600",
                "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the average age of the students in this major?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average age of the students in the major that has the most students is 19.666666666666668",
                "query": "select avg(age) from student where major = (SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What is the sex of the students in this major?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the sex of each student in the major that has the most students",
                "query": "select sex from student where major = (SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "architecture",
        "turns": [
            {
                "isuser": true,
                "text": "How many bridges was built by Frank Lloyd Wright?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 4 bridges that were built by the architect with the name Frank Lloyd Wright",
                "query": "SELECT count(*) from architect as T1 join bridge as T2 on T1.id = T2.architect_id  where T1.name = \"Frank Lloyd Wright\""
            },
            {
                "isuser": true,
                "text": "How many bridges was built by Frank Gehry?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 4 bridges that were built by the architect with the name Frank Gehry",
                "query": "SELECT count(*) from architect as T1 join bridge as T2 on T1.id = T2.architect_id  where T1.name = \"Frank Gehry\""
            },
            {
                "isuser": true,
                "text": "Who was the builder of Xian Ren Qiao (Fairy Bridge)?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The architect with the name Frank Lloyd Wright is the builder of Xian Ren Qiao (Fairy Bridge)",
                "query": "SELECT T1.name from architect as T1 join bridge as T2 on T1.id = T2.architect_id  where T2.name = \"Xian Ren Qiao (Fairy Bridge)\""
            },
            {
                "isuser": true,
                "text": "What is the  name of id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the architect with id 2 is Frank Gehry",
                "query": "SELECT name from architect where id = 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "voter_2",
        "turns": [
            {
                "isuser": true,
                "text": "Show the name of students",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the first and last names of all the students.",
                "query": "SELECT lname, fname FROM STUDENT"
            },
            {
                "isuser": true,
                "text": "How many of them live in city with code NYC and have secretary votes in the spring election cycle\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is only one student living in the city with code NYC and having secretary votes in the spring election cycle.",
                "query": "SELECT count(distinct T1.StuID) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
            },
            {
                "isuser": true,
                "text": "Show the name of this student",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first and last name of the student living in the city with code NYC and having secretary votes in the spring election cycle is Thornton Ian.",
                "query": "SELECT T1.lname, T1.fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which models are manufactured by the maker with the name \"General Motors\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains all the models that are manufactured by the maker with the name \"General Motors\".",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors'"
            },
            {
                "isuser": true,
                "text": "How about models that weight more than 3500?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains all the models that are manufactured by the maker with weight more than 3500.",
                "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T4.weight  >  3500;"
            },
            {
                "isuser": true,
                "text": "What is the make and model of the car with the largest horsepower?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The model of the car with the largest horsepower is pontiac and the maker is gm.",
                "query": "SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' order by t4.horsepower desc limit 1"
            },
            {
                "isuser": true,
                "text": "How many cars manufactured by General Motors get more than 15 mpg?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 67 cars manufactured by General Motors and with more than 15 mpg.",
                "query": "SELECT count(*) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' and t4.mpg > 15"
            },
            {
                "isuser": true,
                "text": "What is the make and model of the car manufactured by General Motors that gets the highest mpg?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the make of the car manufactured by General Motors that gets the highest mpg is chevrolet chevelle concours (sw) and its model is chevrolet.",
                "query": "SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' order by t4.mpg desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "document_management",
        "turns": [
            {
                "isuser": true,
                "text": "Which users have the most popular role?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, can you list all the usernames and passwords of the users who have the most popular role?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, can you list all the usernames and passwords of the users who have the most popular role?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the the usernames and passwords of the users who have the most popular role.",
                "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Can you also tell me the role code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The role code of the user with the most popular role is DBA.",
                "query": "SELECT role_code FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many times has this user logged in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The user who has the most popular role has logged in 0 times.",
                "query": "SELECT user_login FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "party_people",
        "turns": [
            {
                "isuser": true,
                "text": "show the party names and the number of events for party id 2",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The part name is Progress Party and the number of events is 2 for party id 2.",
                "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id where T1.party_id = 2 GROUP BY T1.party_id "
            },
            {
                "isuser": true,
                "text": "find the count of the event name took place for the party id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The count of the event name took place for the party id 1 is 3",
                "query": "SELECT T1.party_id, count(T2.party_name)  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id where T1.party_id = 1 "
            },
            {
                "isuser": true,
                "text": "find the took office and region id for the event id 1",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the  took office and region id for the event id 1.",
                "query": "SELECT  T2.Took_office,T2.Region_ID  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id where T1.party_id = 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye! Have a nice day.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "how many orders does the customer with the most orders have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer with the most orders has two orders.",
                "query": "SELECT count(*) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "who has the second most orders?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "something else, that was a typo. What I meant to say was, how many orders does the person with the second most orders have?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "something else, that was a typo. What I meant to say was, how many orders does the person with the second most orders have?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No problem! The customer with the second most orders has two orders.",
                "query": "SELECT count(*) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 2"
            },
            {
                "isuser": true,
                "text": "What is his/her last name, phone number, and id?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The last name, phone number and id for the customer with the second most orders are Shanahan, 1-546-447-9843x13741, and 5.\t",
                "query": "SELECT  T2.customer_last_name ,  T2.phone_number,T1.customer_id  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 2"
            },
            {
                "isuser": true,
                "text": "when is the customer with the most order's register date?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "when was the customer with the most order's last order placed?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "when was the customer with the most order's last order placed?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last order of the customer with the most orders is placed at 2016-04-15 03:33:59.",
                "query": "select date_order_placed from Orders where customer_id in (SELECT  T1.customer_id  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1) order by date_order_placed desc limit 1"
            },
            {
                "isuser": true,
                "text": "what is that customer's gender?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The gender for the customer with the most orders is 0.",
                "query": "SELECT T2.gender FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "I think I'm good! ",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I think I'm good! ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Cool! You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the maximum duration and resolution of songs grouped and ordered by languages?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the maximum duration and resolution of songs grouped and ordered by languages",
                "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
            },
            {
                "isuser": true,
                "text": "What are the file size and formats of songs grouped and ordered by languages?",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the file size and formats of songs grouped and ordered by languages for each file",
                "query": "SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
            },
            {
                "isuser": true,
                "text": "What are the maximum duration and resolution of songs grouped and ordered by country?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the maximum duration and resolution of songs grouped and ordered by country",
                "query": "SELECT max(T1.duration) ,  max(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.country ORDER BY T2.country"
            },
            {
                "isuser": true,
                "text": "What are the the file size and fomats of songs grouped and ordered by country for each file?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  the file size and formats of songs grouped and ordered by country for each file",
                "query": "SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.country ORDER BY T2.country"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entrepreneur",
        "turns": [
            {
                "isuser": true,
                "text": "What is the largest weight that appears in the people table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "89.0 is the largest weight that appears in the people table.",
                "query": "SELECT weight from people order by weight desc limit 1"
            },
            {
                "isuser": true,
                "text": "Can you add the people id associated with that weight into the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The people id and weight of the person with the largest weight is shown in the table.",
                "query": "SELECT people_id, weight from people order by weight desc limit 1"
            },
            {
                "isuser": true,
                "text": "Can you also add the name associated with that people id into the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The people id, name, and weight of the person with the largest weight is shown in the table. ",
                "query": "SELECT people_id, name, weight from people order by weight desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "coffee_shop",
        "turns": [
            {
                "isuser": true,
                "text": "Find the ids and names of members who are under age 30",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the ids and names of members who are under age 30.",
                "query": "SELECT name ,  member_id FROM member WHERE age  <  30"
            },
            {
                "isuser": true,
                "text": "Please find the ids and names of members with black membership card.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here are the ids and names of members with black membership card.",
                "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black'"
            },
            {
                "isuser": true,
                "text": "Hmmm. Can you also show me the ids and names of members who are over age 30?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. These are the ids and names of members who are over age 30 and also have a black membership card.",
                "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  >  30"
            },
            {
                "isuser": true,
                "text": "How many of these members have a black membership card?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 10 members who are over age 30 and also have a black membership card.",
                "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black' OR age  >  30"
            },
            {
                "isuser": true,
                "text": "Can you please show me their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes these are the names of people who are over age 30 and also have a black membership card.",
                "query": "SELECT name FROM member WHERE Membership_card  =  'Black' OR age  >  30"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_for_hire",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all of the coupon IDs and coupon amounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all of the coupon IDs and coupon amounts. For example, one of them has id 1 and coupon amount 500.",
                "query": "SELECT coupon_id, coupon_amount FROM Discount_Coupons "
            },
            {
                "isuser": true,
                "text": "Great!  Can you filter this list to show just the rows the coupons and coupon amounts that are associated with both values of good and bad in the  \"good or bad customer\" category.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the coupon ids and coupon amounts of the coupons owned by both good and bad customers.",
                "query": "SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'"
            },
            {
                "isuser": true,
                "text": "Awesome!  Can you tell me what the date issued is for each of these two coupon_ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are dates issued for coupons owned by both good and bad customers",
                "query": "SELECT date_issued from discount_coupons where coupon_id in (SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of all of the instructors who are advisors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the instructors that are advisors",
                "query": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id "
            },
            {
                "isuser": true,
                "text": "Could you narrow it down to just the names of instructors who are advisors to students from the Math department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the instructors who are advisors to students from the Math department",
                "query": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'"
            },
            {
                "isuser": true,
                "text": "What are all of their salaries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the salaries of the instructors who are advisors to students from the Math department",
                "query": "SELECT T2.name, T2.salary  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'"
            },
            {
                "isuser": true,
                "text": "What are the names and salaries of the instructors who are advisors to students from the History department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and salaries of the instructors who are advisors to students from the History department",
                "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "can you show a list of customer address?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer address are 75099 Tremblay Port Apt. 163 South Norrisland, SC 80546, 8408 Lindsay Court East Dasiabury, IL 72656-3552 and etc",
                "query": "SELECT customer_address FROM customers"
            },
            {
                "isuser": true,
                "text": "can you show a list of order date?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the list of order dates. Some of them are 2018-02-10 15:44:48, 2018-01-31 17:49:18, 2018-02-26 12:39:33",
                "query": "SELECT order_date FROM customer_orders"
            },
            {
                "isuser": true,
                "text": "can you show a list of  customer phone?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of the customer phone numbers. Some of the phones are 254-072-4068x33935, +41(8)1897032009, 197-417-3557",
                "query": "SELECT customer_phone FROM customers"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Could you tell me the name of the customer that made the order that had the largest quantity of items in it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the customers that made the order that had the largest quantity of items in it",
                "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
            },
            {
                "isuser": true,
                "text": "What dates did they become customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dates when the customers that made the order that had the largest quantity of items became customer",
                "query": "SELECT t1.customer_name, T1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
            },
            {
                "isuser": true,
                "text": "Can you list the names of all customers who cancelled at least one order as well as the order dates of those cancelled orders?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the list of cusomer name and the order date of the orders that were cancelled",
                "query": "SELECT t1.customer_name, T2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id where T2.order_status = \"Cancelled\""
            },
            {
                "isuser": true,
                "text": "What are the order quantities and dates for all orders that were paid for with cash?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the order quantities and dates for all orders that were paid for with cash",
                "query": "SELECT t3.order_quantity, t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.payment_method = \"Cash\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me all the information for employees who have the letters D or S in their names?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Everything, please. I can see it in the table there. It's correct. Can you order it by salary in descending order?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Everything, please. I can see it in the table there. It's correct. Can you order it by salary in descending order?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "In their first name, yes. Sorry. I misunderstood.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "In their first name, yes. Sorry. I misunderstood.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the information about the employees who have the letters D or S in their first names.",
                "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"
            },
            {
                "isuser": true,
                "text": "Can you organize the list by salary in descending order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the employees who have the letters D or S in their first names in descending order of their salaries.",
                "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC"
            },
            {
                "isuser": true,
                "text": "Can you list the first and last names of employees who were hired after 1987?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of employees who were hired after 1987.",
                "query": "SELECT first_name,last_name FROM employees WHERE hire_date > 1987"
            },
            {
                "isuser": true,
                "text": "What are their salaries? Please order the table in ascending order by salary,",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the salaries of employees hired after 1987 ordered by the salaries in ascending order.",
                "query": "SELECT salary FROM employees WHERE hire_date > 1987 order by salary"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "inn_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What are the bed type of room id RND?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the bed type of room id RND is King",
                "query": "SELECT  bedType FROM Rooms where roomid = \"RND\""
            },
            {
                "isuser": true,
                "text": "What type of decor in room name Abscond or bolster?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The type of decor in room name Abscond or bolster is traditional",
                "query": "SELECT  decor FROM Rooms where roomname = \"Abscond or bolster\""
            },
            {
                "isuser": true,
                "text": "Find the max occupancy of bed type Queen?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the max occupancies of rooms with bed type Queen.",
                "query": "SELECT  maxOccupancy FROM Rooms where bedtype = \"Queen\""
            },
            {
                "isuser": true,
                "text": "Find the average and minimum price of the rooms in different decor.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the average and minimum price of the rooms in different decors. For example, the modern decor has an average base price of 112.5 and a minimum price of 75.",
                "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you list the dorm names of the various different dorms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the list of dorm names.",
                "query": "SELECT dorm_name FROM dorm "
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you show me the average age of the students living in each of these dorms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome. Here is the list of the average age of the students living in each of these dorms and the dorm name.",
                "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
            },
            {
                "isuser": true,
                "text": "Thanks!  Now can you add to that list the student capacity of each of those dormitories?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the list showing the average age of the students living in each dorm, the dorm name, and the student capacity for each dorm.",
                "query": "SELECT avg(T1.age) ,  T3.dorm_name, T3.student_capacity FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "I think that is all.  Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I think that is all.  Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "document_management",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all of the different document names and the associated access count for each of them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is  all of the different document names and the associated access count for each of them",
                "query": "SELECT document_name, access_count FROM documents "
            },
            {
                "isuser": true,
                "text": "Wonderful!  Can you show me the associated structure code for each of those document names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " here are the associated structure code for each of those document ",
                "query": "SELECT document_structure_code  FROM documents "
            },
            {
                "isuser": true,
                "text": "Can you filter that list to show the document name and document structure code with the fewest document structure code entries, or in other words, the least popular structure?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the document name and document structure code for the documents with the fewest document structure code entries",
                "query": "SELECT document_name,document_structure_code  FROM documents where document_structure_code=(select min(document_structure_code) from documents)"
            },
            {
                "isuser": true,
                "text": "Very nice!  Finally, could you update this list to show the average access count for these two documents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the average access count for these two documents with the fewest document structure code entries",
                "query": "SELECT avg(access_count)   FROM documents where document_structure_code=(select min(document_structure_code) from documents) group by document_name "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "What is the date average date of customers' becoming a customer?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the date the customer with first name Carole and last Name Bernhard become a customer?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the date the customer with first name Carole and last Name Bernhard become a customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the date the customer with the first name Carole and the last Name Bernhard become a customer is \"2016-05-11 17:03:48\".",
                "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"
            },
            {
                "isuser": true,
                "text": "What is the amount outstanding for this customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The amount outstanding of the customer with the first name Carole and the last Name Bernhard is 255.0.",
                "query": "SELECT amount_outstanding FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\""
            },
            {
                "isuser": true,
                "text": "What is the customer status code for this customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the customer status code for the customer with the first name Carole and the last name Bernhard is Bad Customer.",
                "query": "SELECT customer_status_code FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\""
            },
            {
                "isuser": true,
                "text": "What is the date the customer with last name Bernhard become a customer?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the date the customer with the last Name Bernhard become a customer is \"2016-05-11 17:03:48\".",
                "query": "SELECT date_became_customer FROM Customers WHERE last_name = \"Bernhard\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "What countries produced cars?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the countries that produced cars. For example, one of the countries is usa.",
                "query": "SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
            },
            {
                "isuser": true,
                "text": "What country does not have a car maker?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the countries that do not produce cars. For example, one of the countries is Australia.",
                "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "how many projects has stuff worked as leaders total? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of distinct projects that have staffs worked as leaders is 5.",
                "query": "SELECT count(distinct project_id) FROM Project_Staff WHERE role_code  =  'leader'"
            },
            {
                "isuser": true,
                "text": "How about the number of projects they worked before 1989-04-24 23:51:54'?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The total number of distinct projects that have some project staffs worked as a leader and worked before 1989-04-24 23:51:54' is 2",
                "query": "SELECT count(distinct project_id) FROM Project_Staff WHERE role_code  =  'leader' and date_from  <  '1989-04-24 23:51:54'"
            },
            {
                "isuser": true,
                "text": "What are other detail about those projects? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are other details of the projects that have some project staffs worked as a leader and worked before 1989-04-24 23:51:54'.",
                "query": "SELECT other_details FROM Project_Staff WHERE role_code  =  'leader' and date_from  <  '1989-04-24 23:51:54'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "entrepreneur",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you show me a list of all investor names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the different investor names is shown in the result table. ",
                "query": "SELECT distinct Investor FROM entrepreneur "
            },
            {
                "isuser": true,
                "text": "Can you filter this list to include only the investors that were associated with more than one entrepreneur id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the different investor names that are associated with more than one entepreneur are shown in the result table. ",
                "query": "SELECT Investor FROM entrepreneur group by investor having count(*) > 1 "
            },
            {
                "isuser": true,
                "text": "Can you filter this list to show only the rows associated with money requested that are not between 120000 and 140000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The list of all the different investor names that are associated with more than one entrepreneur and have requested money more than 140000 and entrepreneurs that requested less than 120000 is shown in the result table. ",
                "query": "Select investor from entrepreneur where investor in (\nSELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000) group by investor having count(*) > 1 "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "news_report",
        "turns": [
            {
                "isuser": true,
                "text": "Show the journalists with more than 10 years of working. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here's all the information about the journalists with more than 10 years of working",
                "query": "SELECT * FROM journalist WHERE Years_working  >  10"
            },
            {
                "isuser": true,
                "text": "Show the name of journalists with more than 10 years of working and less than 3 years of working. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There's no journalist with more than 10 years of working and less than 3 years of working",
                "query": "SELECT name FROM journalist WHERE Years_working  >  10 AND Years_working  < 3"
            },
            {
                "isuser": true,
                "text": "List the nations that have journalists with more than 10 years of working and journalists with less than 3 years of working. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "England is the only nationality that has journalists with more than 10 years of working and journalists with less than 3 years of working",
                "query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3"
            },
            {
                "isuser": true,
                "text": "What is the average years of working for journalists from England. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average years of working for journalists from England is 8.88888888888889",
                "query": "SELECT avg(years_working) FROM journalist WHERE Nationality=\"England\""
            },
            {
                "isuser": true,
                "text": "List the names of all journalists from England.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here're the names of all journalists from England",
                "query": "SELECT name FROM journalist WHERE Nationality=\"England\""
            },
            {
                "isuser": true,
                "text": "What is the average age for all journalists from England. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average age for all journalists from England is 34.22222222222222",
                "query": "SELECT avg(age) FROM journalist WHERE Nationality=\"England\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Are there any apartments with the bookings status code \"Confirmed\"?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, here are the apartment numbers that  have bookings with status code \"Confirmed\"",
                "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
            },
            {
                "isuser": true,
                "text": "What dates are these apartments booked for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the list of apartment numbers that have bookings with status code \"Confirmed\" with their booking start date and their booking end date.",
                "query": "SELECT T2.apt_number, T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
            },
            {
                "isuser": true,
                "text": "How many of these apartments have 3 bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2 apartments that have bookings with status code \"Confirmed\" have 3 bedrooms.",
                "query": "SELECT count(*) FROM Apartments WHERE apt_number IN (SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\") AND bedroom_count = 3"
            },
            {
                "isuser": true,
                "text": "How many bathrooms are in each of these apartments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of numbers of bathrooms in apartments that have bookings with status code \"Confirmed\" and 3 bedrooms.",
                "query": "SELECT bathroom_count FROM Apartments WHERE apt_number IN (SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\") AND bedroom_count = 3"
            },
            {
                "isuser": true,
                "text": "Can you show me a list of apartments with the booking status of \"Provisional\"?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Sure. This is the list of numbers of apartments with the booking status of \"Provisional\".",
                "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the names of all directors whose movies are rated by Sarah Martinez",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Victor Fleming is the name of the director whose movie is rated by Sarah Martinez",
                "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"
            },
            {
                "isuser": true,
                "text": "list the other directors against the movies they directed.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the directors with their movie names except for the director with name Victor Fleming",
                "query": "SELECT director, title from movie where director != \"Victor Fleming\""
            },
            {
                "isuser": true,
                "text": "what is the general ratings for those movies?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the directors with their movies and corresponding ratings except for the director with name Victor Fleming",
                "query": "select T1.director, T1.title, T2.stars from movie as T1 join rating as T2 on T1.mid = T2.mid where T1.mid in( SELECT mID from movie where director != \"Victor Fleming\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "browser_web",
        "turns": [
            {
                "isuser": true,
                "text": "what is the Id of the browser that is compatible with most web accelerators?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the id of the browser that is compatible with the most web accelerators.",
                "query": "SELECT T1.id  FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the name of browser with id 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of browser with id 1 is Internet Explorer.",
                "query": "select name from browser where id = 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the browser with the second largest market share?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The browser named Firefox  has the second largest market share.",
                "query": "select name from browser order by \tmarket_share limit 2"
            },
            {
                "isuser": true,
                "text": "Which browser name has the earliest compatible since year?",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The browser named  Internet Explorer has the earliest compatible since year.",
                "query": "select t1.name from browser as T1 join accelerator_compatible_browser as T2 on T1.id = T2.browser_id order by \tcompatible_since_year asc limit 1"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the first and last name for those employees who works either in department  70 or 90?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names for those employees who work either in department 70 or 90.",
                "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
            },
            {
                "isuser": true,
                "text": "Please show me the list of the department ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of ids of all departments.",
                "query": "SELECT distinct department_id from employees"
            },
            {
                "isuser": true,
                "text": "Who make  the highest  salary  on the department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee with first name Steven and last name King has the highest salary in all departments. ",
                "query": "SELECT first_name ,  last_name FROM employees order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the students who live in the city with code HKG?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "OK , the  fname  and  lname  of the students who live in the city with code HKG are  shown in  the  table ",
                "query": "SELECT fname ,  lname FROM student WHERE city_code = 'HKG' "
            },
            {
                "isuser": true,
                "text": "Who are not living in that city with code HKG?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The full names   of  who   not living in that city with code HKG   is shown  in the  table ",
                "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' "
            },
            {
                "isuser": true,
                "text": "What is the average age of those who don't live in that city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  avg  age of   those who don't live in that city  is 19.70967741935484",
                "query": "SELECT avg(age) FROM student WHERE city_code != 'HKG' "
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_software_problems",
        "turns": [
            {
                "isuser": true,
                "text": "What is the staff ID of the staff with the first name Christop?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the staff ID of the staff with the first name Christop is 10",
                "query": "SELECT staff_id from staff where staff_first_name = \"Christop\""
            },
            {
                "isuser": true,
                "text": "How many problems have been reported under staff ID 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of problems that have been reported under staff ID 10 is 3. ",
                "query": "SELECT count(*) FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_id = \"10\""
            },
            {
                "isuser": true,
                "text": "Can you give me a list of the problem descriptions he reported?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are a list of descriptions of the problems which the staff with first name Christop reported.",
                "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "Find the total passengers of London Waterloo?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of passengers of the London Waterloo station is 103.534.",
                "query": "select total_passengers from station where name = \"London Waterloo\""
            },
            {
                "isuser": true,
                "text": "How many Number of Platforms in station id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the number of platforms in the station with id 2 is 19.",
                "query": "select number_of_platforms from station where station_id = 2"
            },
            {
                "isuser": true,
                "text": "What are the Main Services of station id 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The main services of station id 3 is South Eastern Main Line Thameslink.",
                "query": "select main_services from station where station_id = 3"
            },
            {
                "isuser": true,
                "text": "Show all locations which don't have a train station with at least 15 platforms.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Birmingham is a location where does not have a train station with at least 15 platforms.",
                "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Which products were purchased in the largest amount?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "4 is the id of product that was purchased in the largest amount.",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC limit 1"
            },
            {
                "isuser": true,
                "text": "What about top 3 largest? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the product ids of the top three products that were purchased in the largest amount.",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "And what about the lowest 3?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the product ids of the top three products that were purchased in the smallest amount.",
                "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased ASC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the employees whose first name does not containing the letter M?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the employees with first names without letter M.",
                "query": "SELECT first_name FROM employees WHERE first_name NOT LIKE '%M%'"
            },
            {
                "isuser": true,
                "text": "Display the full name , hire date , salaer, and  department member of the above results.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first name, last name, hire date, salary and department id of the employees with first names without the letter M.",
                "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
            },
            {
                "isuser": true,
                "text": "Sort the results in ascending order by department. number.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first name, last name, hire date, salary and department id of the employees with first names without the letter M sorted in ascending order by department.",
                "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Good bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"",
                "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""
            },
            {
                "isuser": true,
                "text": "Which has the highest amount of transaction? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the lot details of lots associated with the most amount of transactions whose share count is bigger than 100 and whose type code is \"PUR\"",
                "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what was the date of that transaction?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date of transaction of lot associated with the most amount of transactions whose share count is bigger than 100 and whose type code is \"PUR\" is  1985-10-08 13:13:39",
                "query": "SELECT T3.date_of_transaction FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what that a sale or purchase?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "What  transaction type code did that have?\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What  transaction type code did that have?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  transaction type code  of  the transactions with the most amount among transactions whose share count is bigger than 100 and whose type code is \"PUR\" is PUR",
                "query": "SELECT T3.transaction_type_code FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "List out projects which did not hire staff for researcher role ?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the project IDs that did not hire staff as researchers.  For example, the top project is project ID 1.",
                "query": "SELECT project_id FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
            },
            {
                "isuser": true,
                "text": "what is the role of the project id 5?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There roles assigned to project ID 5 are leader and researcher.",
                "query": "SELECT role_code FROM Project_Staff WHERE project_id = 5"
            },
            {
                "isuser": true,
                "text": "Can you tell me the role of project id 1 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The roles assigned to project ID 1 are leader and leader.",
                "query": "SELECT role_code FROM Project_Staff WHERE project_id = 1"
            },
            {
                "isuser": true,
                "text": "List out projects which has staff for researcher role ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the projects who have staff with the role of researcher.  The top result is project ID 2.",
                "query": "SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher'"
            },
            {
                "isuser": true,
                "text": "Can you tell me the organization id for the project id 1 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The organisation id corresponding to project ID 1 is 15.",
                "query": "SELECT organisation_id FROM Projects WHERE project_id = 1"
            },
            {
                "isuser": true,
                "text": "can you tell me the staff id of the project which did not have researcher role ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the staff ID numbers for staff on projects that did not have a researcher role.  For example, staff ID number 5353407.0 is at the top.",
                "query": "SELECT T1.staff_id FROM Project_Staff AS T1 JOIN Projects AS T2 WHERE T1.project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
            },
            {
                "isuser": true,
                "text": "tell me project details about the project id 1 ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The project details for project ID 1 is \"porro\".",
                "query": "SELECT project_details FROM Projects WHERE project_id = 1"
            },
            {
                "isuser": true,
                "text": "List out total number of projects which has no staff for researcher role ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of projects with no staff in the role of researcher is 8.",
                "query": "SELECT count(*) FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
            },
            {
                "isuser": true,
                "text": "List the project details of the projects which did not hire any staff for a researcher role ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the project details of the projects with no staff in the role of researcher.  For example, the top result is \"porro\".",
                "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_and_lot",
        "turns": [
            {
                "isuser": true,
                "text": "How many services has each resident requested?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of services that each resident has requested by resident_id is shown in the result table. ",
                "query": "SELECT T1.resident_id,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Can you list them in descending order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of services that each resident has requested by resident_id in descending order is shown in the result table.",
                "query": "SELECT T1.resident_id,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Can you list the residents by the count of services in descending order by count of services?\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The resident_id and count of services\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "The resident_id and count of services\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The resident id, and the count of services that they requested in descending order of the count is shown in the result table.",
                "query": "SELECT T1.resident_id,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Can you add the resident other detail to the results?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the resident id, details and the count of services that they requested in descending order of the count is shown in the result table.",
                "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Hi, can you tell me in what year did the artist Gorgoroth release his first song?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "16 May - 30 May is the issue date of the song the artist Gorgoroth first released.",
                "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\" order by T2.Issue_Date limit 1"
            },
            {
                "isuser": true,
                "text": "what is the name of the song?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name of the song that is the first song of  Gorgoroth is (I Just) Died in Your Arms",
                "query": "SELECT T2.song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\" order by T2.Issue_Date limit 1"
            },
            {
                "isuser": true,
                "text": "Great, what is the issue dates of all volumes of the artist \"Gorgoroth\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the issue dates of all volumes of the artist \"Gorgoroth\". For example, one of them is 27 December 1986 - 10 January.",
                "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all course IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of all the course ids is shown.",
                "query": "SELECT course_id FROM takes "
            },
            {
                "isuser": true,
                "text": "Wow that's a lot!  Can you update that list to show me the semester and year which have the fewest number of students taking any class?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The semester and year which has the least number of students taking any class are fall and 2008.",
                "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you update this list to show many total classes were taken in Fall of 2008?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!  That is what I meant!  Sorry!  How many total classes were taken in Fall of 2008?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!  That is what I meant!  Sorry!  How many total classes were taken in Fall of 2008?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of total classes which were taken in Fall of 2008 is 291.",
                "query": "SELECT count(*) FROM takes WHERE semester = 'Fall'  and year = '2008'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "farm",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you show me a list of all of the city names in the database?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Sure!  On my end I'm seeing that the first table is labeled \"City\", but if these are towns and villages then I'd like to see what you are suggesting!  Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Sure!  On my end I'm seeing that the first table is labeled \"City\", but if these are towns and villages then I'd like to see what you are suggesting!  Thanks!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the names of all the cities.",
                "query": "select official_name from city;"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you update this list to show me the totals for how many competitions each of these have hosted?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the totals for how many competitions each of these cities have hosted. For example, Aroostook holds 2 competitions.",
                "query": "SELECT T1.official_name, count(*) as number_competition FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*);"
            },
            {
                "isuser": true,
                "text": "Perfect!  Can you filter the list to show only the entry with the largest number of competitions hosted?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The official name of the largest number of competitions hosted is Aroostook.",
                "query": "SELECT T1.official_name, count(*) as number_competition FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC limit 1;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Bye!",
                "type": "GOOD_BYE"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "behavior_monitoring",
        "turns": [
            {
                "isuser": true,
                "text": "Can you provide a count of assessment notes by teacher id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of assessment notes by teacher id are shown in the result table. ",
                "query": "SELECT T1.teacher_id ,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id "
            },
            {
                "isuser": true,
                "text": "For that table, can you sort by descending count?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of assessment notes by teacher id sorted by descending count are shown in the result table.",
                "query": "SELECT T1.teacher_id ,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id order by count(*) desc"
            },
            {
                "isuser": true,
                "text": "Can you left join the Assessment Notes table with the Teachers table on teacher_id? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The left join of Assessment Notes table with the Teachers table on teacher_id is shown in the result table. ",
                "query": "SELECT * FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id "
            },
            {
                "isuser": true,
                "text": "For the earlier table with sorted counts, can you give me the first name associted with each teacher_id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of assessment notes by teacher id sorted by descending count are shown in the result table. The table shows first name, ids, and counts. ",
                "query": "SELECT T2.first_name, T1.teacher_id ,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id order by count(*) desc"
            },
            {
                "isuser": true,
                "text": "Okay, give me the first three records from this table.",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": " The ids and first names of the 3 teachers that have the most number of assessment notes are shown in the result table. The table shows ids, and first_name.",
                "query": "SELECT T1.teacher_id ,  T2.first_name,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "browser_web",
        "turns": [
            {
                "isuser": true,
                "text": "Can you tell me the names of all compatible browsers and accelerators?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of all compatible browsers and accelerators. For example, one of the browsers is Internet Explorer and the accelerator is  CACHEbox.",
                "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id"
            },
            {
                "isuser": true,
                "text": "Can you also show their compatible years?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of all compatible browsers, accelerators and their compatible since years. For example, one of the browsers is Internet Explorer and the accelerator is CACHEbox with compatible since year being 1995.",
                "query": "SELECT T2.name ,  T3.name, t1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id"
            },
            {
                "isuser": true,
                "text": "Hmm, can you list the names of all compatible browsers and accelerators in the descending order of compatible year?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all compatible browsers and accelerators in the descending order of the compatible year. For example, the first one is Internet Explorer with accelerator Nitro.",
                "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "shop_membership",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names for the top three membership branches",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names for top three branches with most number of membership.",
                "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "How many memberships do these branches have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result shows the membership amount for top three branches with most number of membership.",
                "query": "SELECT membership_amount FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What years did the branches open?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the open years for top three branches with most number of membership.",
                "query": "SELECT Open_year FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What are the addresses for these three branches?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the addresses for top three branches with most number of membership.",
                "query": "SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Which address has the most memberships?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The address road \"Concord Road\" has the highest  membership amount .",
                "query": "SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the ships that are steered by a captain with Midshipman rank?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names of ships that are steered by a captain with Midshipman rank.",
                "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman'"
            },
            {
                "isuser": true,
                "text": "What are the ships that are steered by a captain with Lieutenant rank?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names of the ships that are steered by a captain with Lieutenant rank. ",
                "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"
            },
            {
                "isuser": true,
                "text": "Are there any captains that are included in both lists?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Oh sorry, yes ships that are included in both lists",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oh sorry, yes ships that are included in both lists",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Yes, the ship that is steered by a captain with Midshipman rank and a captain with Lieutenant rank is HMS Gorgon.",
                "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "gas_company",
        "turns": [
            {
                "isuser": true,
                "text": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the locations and representative names of the gas stations owned by the companies with the top 3 asset amounts. For example, one of them is Herne Hill and Clive Burr.",
                "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What is the representative name of Newport Rd?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the representative name of the gas station in Newport Rd is Tim Read",
                "query": "SELECT Representative_Name from gas_station where Location = \"Newport Rd\""
            },
            {
                "isuser": true,
                "text": "If there are three representatives and we already named Clive Burr and Time Read, who is the third representative?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "Find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the locations and representative names of the gas stations owned by the companies with the top 3 asset amounts. For example, one of them is Herne St and Ray Hughes.",
                "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What gas station is the oldest one based on open year",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Which gas station location is the oldest based on its open year.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Which gas station location is the oldest based on its open year.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The location of the oldest gas station based on its open year is Herne Hill.",
                "query": "SELECT Location from gas_station order by open_year limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me a list of all of the lots that belong to category 'i' within the 'lot details' column?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. We don't have lots that have lot details as 'i'.",
                "query": "SELECT * FROM LOTS WHERE lot_details  =  \"i\""
            },
            {
                "isuser": true,
                "text": "My apologies!  I mean ask for \"l\" or lower-case L...  Therefore, can you list the lots that belong to category \"l\" in the 'lot details' column?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "No problem! But we don't have lots that have lot details as 'l', either.",
                "query": "SELECT * FROM LOTS WHERE lot_details  =  \"l\""
            },
            {
                "isuser": true,
                "text": "Oh sorry!  I am all mixed up!  Third time's a charm!  Can you provide me with the lot details for all lots that belong to investors which belong to the 'investor id' category of \"l\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here is the list of lot details for all lots that belong to investors which belong to the 'investor id' category of \"l\".",
                "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""
            },
            {
                "isuser": true,
                "text": "Excellent! Can you list the investor IDs that correspond to each of these lot_details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course. Here is the list of investor ID and lot details for all lots that belong to investors which belong to the 'investor id' category of \"l\".",
                "query": "SELECT T1.investor_id, T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Sure! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wta_1",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me the loser_name whose age is 24.626967830300003 ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The distinct name of the loser with age 24.626967830300003 is Agnieszka Radwanska. ",
                "query": "SELECT distinct loser_name from matches where loser_age = 24.626967830300003"
            },
            {
                "isuser": true,
                "text": "Tell me the total number of matches played by Petra Kvitova...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of matches played where either the loser's name was Petra Kvitova or the winner's name was \"Petra Kvitova\" is 25. ",
                "query": "SELECT count(*) from matches where loser_name = \"Petra Kvitova\" or winner_name = \"Petra Kvitova\""
            },
            {
                "isuser": true,
                "text": "Who has high loser_rank_points higher than 3500 ?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "based on loser_id",
                "query": ""
            },
            {
                "isuser": true,
                "text": "based on loser_id",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The distinct loser ids of those with loser_rank_points higher than 3500 are shown in the result table. ",
                "query": "SELECT distinct loser_id from matches where loser_rank_points > 3500"
            },
            {
                "isuser": true,
                "text": "Find the name and rank points of the winner who won the most times...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and rank points of the winner who won the most times is shown in the result table. ",
                "query": "SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me title name for all course ids....",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the titles for the corresponding course ids are listed. For example, the title of course id 787 is C Programming.",
                "query": "SELECT course_id, title FROM course"
            },
            {
                "isuser": true,
                "text": "Tell me the name of the instructor who getting high salary...And tell his department name too...",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Higher than 80000.....",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Higher than 80000.....",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "All the names of instructors who have salary higher than 80000 are listed. They are McKinnon, Mird, Luo, and so on.",
                "query": "SELECT name FROM instructor WHERE salary > 80000"
            },
            {
                "isuser": true,
                "text": "Find the name of the instructors who taught C programming course before..",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the instructors who taught course title C programming before are shown in the result table.",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You're welcome, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_card_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Okay.  Sorry about that.  Can you please list all of the customer IDs for which the customer has more than one card?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Thank you. Here are the customer IDs for which the customer has more than one card",
                "query": "SELECT customer_id FROM Customers_cards GROUP BY customer_id having count(*)>1"
            },
            {
                "isuser": true,
                "text": "Can you please update that list to show the total number of cards that each of these customers has?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is customer id and the corresponding total number of cards owned by customers that has more than one card",
                "query": "SELECT customer_id, count(*) FROM Customers_cards GROUP BY customer_id having count(*)>1"
            },
            {
                "isuser": true,
                "text": "Is it correct to say that the customer with the most number of cards is actually these 4 customers?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes because the maximum number of cards that customer has is 2",
                "query": "SELECT customer_id, count(*) FROM Customers_cards GROUP BY customer_id DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "allergy_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many different types of allergies are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of different types of allergies is 12",
                "query": "SELECT count(distinct allergy) FROM Has_allergy "
            },
            {
                "isuser": true,
                "text": "What allergy is most prevalent among students?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The allergy that is most prevalent among students is Tree Pollen.",
                "query": "SELECT  ALLERGY FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID = T2.STUID GROUP BY ALLERGY ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How many male students have a tree pollen allergy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of male students that have a tree pollen allergy is 10.",
                "query": "SELECT COUNT(*) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID = T2.STUID where ALLERGY = \"Tree Pollen\" and t1.sex = \"M\""
            },
            {
                "isuser": true,
                "text": "How many students have a soy allergy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students that have a soy allergy is 4.",
                "query": "SELECT count(*) FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"
            },
            {
                "isuser": true,
                "text": "How many students don't have a soy allergy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of students that do not have a soy allergy is 30",
                "query": "SELECT count(*) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"
            },
            {
                "isuser": true,
                "text": "Can you list them for me with their names and majors?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please. First name and major.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please. First name and major.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table with the first names and majors of the students that do not have a soy allergy. For example, one of them is Linda with major 600.",
                "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customer_complaints",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, which complaint id  has more than 3 records present on this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Okay, I see.  Which complaint status code has more than 3 records on this list?",
                "query": "SELECT complaint_id FROM complaints GROUP BY complaint_id HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Okay, I see.  Which complaint status code has more than 3 records on this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the complaint status codes that have more than 3 records on this list",
                "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Alright!  Now can you update this list to show the associated complain type code for these two status codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the complaint status codes that have more than 3 records on this list, along with their corresponding complaint type codes.",
                "query": "SELECT complaint_status_code,complaint_type_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Finally, can you show me the complaint outcome code for each of these two entries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the associated complaint outcome codes for the complaint statuses that have more than 3 records on file.",
                "query": "SELECT complaint_outcome_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "climbing",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the mountains with height more than 5000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the mountains with height more than 5000",
                "query": "SELECT Name FROM mountain WHERE Height  >  5000 "
            },
            {
                "isuser": true,
                "text": "Which of those has a prominence greater than 1000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of mountains with a height more than 5000 and prominence more than 1000.",
                "query": "SELECT Name FROM mountain WHERE Height  >  5000 AND prominence > 1000"
            },
            {
                "isuser": true,
                "text": "And in what range is each of those located?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ranges of mountains with a height more than 5000 and prominence more than 1000",
                "query": "SELECT range FROM mountain WHERE Height  >  5000 AND prominence > 1000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "find the name and college of students whose player position are goalie in the tryout",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and colleges of students whose player position is goalie. For example, one of them is Andrew\tfrom LSU.\n",
                "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  'goalie'"
            },
            {
                "isuser": true,
                "text": "find the training hours for the player id 10001",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the training hours for the player id 10001 is 1200.",
                "query": "SELECT hs FROM PLAYER WHERE pID = \"10001\""
            },
            {
                "isuser": true,
                "text": "find the college name for the player id 10001",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the college names for the player id 10001 are ASU and LSU.",
                "query": "SELECT T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.Pid  =  '10001'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "mountain_photos",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the name of each camera lens and the number of photos taken by it?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the name of each camera lens and the number of photos taken by it",
                "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id "
            },
            {
                "isuser": true,
                "text": "Can you order the table by the count of photos in ascending order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the name of each camera lens and the number of photos taken by it. The list is ordered by  the count of photos in ascending orde",
                "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
            },
            {
                "isuser": true,
                "text": "What are the names of all photos taken by Olympus brand cameras?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of all photos taken by Olympus brand cameras lens",
                "query": "SELECT T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id  where T1.brand = \"Olympus\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you please list all of the product names that have the color description of \"white\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the all of the product names that have the color description of \"white\"",
                "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""
            },
            {
                "isuser": true,
                "text": "Thank you for that! Can you update this list to show the typical selling price for each?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the  typical selling price for each product",
                "query": "SELECT t1.product_name,t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you tell me what the average typical selling price is of all of the product types?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!  Can you provide me with the average typical selling price of all product category code?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!  Can you provide me with the average typical selling price of all product category code?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here are the average typical selling price of all product category code",
                "query": "select product_category_code, avg(typical_buying_price) from Products group by product_category_code"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "driving_school",
        "turns": [
            {
                "isuser": true,
                "text": "Which last names are both used by customers and staff?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name Mertz is used by both by customers and staff.",
                "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
            },
            {
                "isuser": true,
                "text": "What is the most common first name of staff?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most common first name of staff is Camylle.",
                "query": "SELECT first_name FROM Staff group by first_name order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "What's the most common last name of staff?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The most common last name of staff is Weissnat.",
                "query": "SELECT last_name FROM Staff group by first_name order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "What about the least common?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The least common last name of staff is Weissnat",
                "query": "SELECT last_name FROM Staff group by first_name order by count(*) limit 1"
            },
            {
                "isuser": true,
                "text": "What are the first names of the customers with the last name Mertz?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the first name of the customer with the last name Mertz is Kaitlin.",
                "query": "SELECT first_name FROM Staff where last_name = 'Mertz'"
            },
            {
                "isuser": true,
                "text": "What about the staff?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "sorry, the first name of the customer with the last name Mertz is Leif. and the first name of the staff with the last name Mertz is Kaitlin.",
                "query": "SELECT first_name FROM staff where last_name = 'Mertz'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "I need to know the names of artists with at least one English Song",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of all artists who have at least one English song are \"Enrique\" and \"Michel\".",
                "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"english\" GROUP BY T2.artist_name HAVING count(*) >= 1"
            },
            {
                "isuser": true,
                "text": "I also need to know the number of works of artists with at least one English song",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The number of works of all artists who have at least one English song is 2.",
                "query": "select count(*) from artist,song where artist.artist_name=song.artist_name and song.languages='english' group by artist.artist_name having count(*)>=1"
            },
            {
                "isuser": true,
                "text": "What is the country of origin of artists with at least one English song",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the countries of the artists with at least one English song.",
                "query": "select T1.country from artist AS T1 JOIN song AS T2 ON T1.artist_name=T2.artist_name WHERE T2.languages='english' group by T1.artist_name having count(*)>=1"
            },
            {
                "isuser": true,
                "text": "What is the gender of artists with at least one English song?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the genders of the artists with at least one English song.",
                "query": "select T1.gender from artist AS T1 JOIN song AS T2 ON T1.artist_name=T2.artist_name WHERE T2.languages='english' group by T1.artist_name having count(*)>=1"
            },
            {
                "isuser": true,
                "text": "What is the rating of artists with at least one English song?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the rating of the artists with at least one English song.",
                "query": "select T2.rating from artist AS T1 JOIN song AS T2 ON T1.artist_name=T2.artist_name WHERE T2.languages='english' group by T1.artist_name having count(*)>=1"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "hello there!  Can you please provide me with a list of all college names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college names are listed in the result table. ",
                "query": "SELECT cName FROM college "
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you show me the names of all colleges with an enrollment value that is greater than the total enrollment of all of the colleges in the state of FL?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of all the colleges enrollment is greater than that of all colleges in the FL state are shown in the result table. ",
                "query": "SELECT cName FROM college "
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you update this list to show me the enrollment quantity associated with each college?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names, and enrolment quanitity of all the colleges with an enrollment greater than that of all colleges in the FL state are shown in the result tab.",
                "query": "SELECT cName, enr FROM college WHERE enr > (SELECT max(enr) FROM college WHERE state = 'FL')\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!  ",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "flight_company",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, which companies have operated more than one flight? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows information about companies that have operated more than one flight.",
                "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Great, can you show me the top 3 companies that have operated the most flights?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows information about top 3 companies that have operated the most flights.",
                "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id order by count(*) limit 3"
            },
            {
                "isuser": true,
                "text": "Which type of principal activity, cargo airline or airline, operates the most flights?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Cargo airline is the principal activity that operates the most number of flights.",
                "query": "SELECT Principal_activities FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY Principal_activities order by count(*) limit 1"
            },
            {
                "isuser": true,
                "text": "What are the top 3 companies operating the most cargo flights?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the top 3 companies operating the most cargo flights.",
                "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id where T1.Principal_activities = \"Cargo\" group BY T1.name order by count(*) limit 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "How many states that have some college students playing in the mid position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count of states that have some college students playing in the mid position  is 2",
                "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' )"
            },
            {
                "isuser": true,
                "text": "How many states that have some college students not playing in the goalie position?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count  of  states that have college students not playing in the goalie position is 3",
                "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos != 'goalie' )"
            },
            {
                "isuser": true,
                "text": "Find college names with students playing in the goalie position",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college names with students playing in the goalie position are  shown  in the table ",
                "query": "SELECT cName from Tryout   where \tpPos=\"goalie\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the products with the color description \"red\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the products with the color description \"red\" are sesame and caraway",
                "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" "
            },
            {
                "isuser": true,
                "text": "What are the names of the products that have the characteristic name \"fast\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the names of the products that have the characteristic name \"fast\". For example, they are chervil.",
                "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE  t3.characteristic_name  =  \"fast\""
            },
            {
                "isuser": true,
                "text": "What are the names of the products that have the characteristic name \"fast\" and the color description \"red\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The products that have the characteristic name \"fast\" and the color description \"red\" are sesame and caraway",
                "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\""
            },
            {
                "isuser": true,
                "text": "What about products with the characteristic name \"slow\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the products with characteristic name \"slow\". For example, one of them is cinnam.",
                "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t3.characteristic_name  =  \"slow\""
            },
            {
                "isuser": true,
                "text": "What are the color descriptions of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the color descriptions of products with the characteristic name \"slow\". For example, one of them is green.",
                "query": "SELECT t4.color_description FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t3.characteristic_name  =  \"slow\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "company_employee",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Please show me the names of employees that work for companies with sales bigger than 200",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of employees that work for companies with sales bigger than 200",
                "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200"
            },
            {
                "isuser": true,
                "text": "please show me the average age of those employees\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average age of employees that work for companies with sales bigger than 200 is 32.666666666666664",
                "query": "SELECT avg(T2.age) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200"
            },
            {
                "isuser": true,
                "text": "and now just of those employees whose nationality is United States",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the names of employees that work for companies with sales bigger than 200 and nationality United States.",
                "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200 AND T2.Nationality = \"United States\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "gas_company",
        "turns": [
            {
                "isuser": true,
                "text": "How many gas stations opened after 2000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 8 gas stations that opened after 2000",
                "query": "SELECT count(*) from gas_station where open_year > 2000"
            },
            {
                "isuser": true,
                "text": "What's the name of the manager that opened the most gas stations after 2000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Colin Denman is the name of the manager that opened the most gas stations after 2000",
                "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the locations of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of locations of the gas stations that belong to the manager that opened the most gas stations after 2000.",
                "query": "select location from gas_station where manager_name = (SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What are the vice manager names of those locations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of locations and their corresponding vice manager names of the gas stations that belong to the manager that opened the most gas stations after 2000.",
                "query": "select location, vice_manager_name from gas_station where manager_name = (SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What years did those open?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of locations and the corresponding open years of the gas stations that belong to the manager that opened the most gas stations after 2000.",
                "query": "select location, open_year from gas_station where manager_name = (SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "Please find all the papers published by \"Aaron Turon\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title  published by \"Aaron Turon\"  is\nFunctional Pearl: Modular Rollback through Control Logging",
                "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""
            },
            {
                "isuser": true,
                "text": "Please find all the papers published by \"Ralf Hinze\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  titles  published by \"Ralf Hinze\" are \nJust do it: Simple Monadic Equational Reasoning,\nProving the Unique Fixed-Point Principle Correct: An Adventure with Category Theory",
                "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Ralf\" AND t1.lname  =  \"Hinze\""
            },
            {
                "isuser": true,
                "text": "Can you add the paper IDs of those to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  titles and paper ID   published by \"Ralf Hinze\"  are  shown  in the table",
                "query": "SELECT t3.title,t3.paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Ralf\" AND t1.lname  =  \"Hinze\""
            },
            {
                "isuser": true,
                "text": "What is the name of the author who wrote the most papers?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Both please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Both please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The lname is  Hinze and the fname is \tRalf   of  the author who wrote the most papers",
                "query": "SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid \ngroup by t1.authID order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "What are the lname and fname of all authors that wrote exactly 1 paper?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the lname and fname of all authors that wrote exactly 1 paper are  shown  in  the  table ",
                "query": "SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid \ngroup by t1.authID  having count(*) =1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many drivers have participated in 30 or fewer races?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the number of drivers that have participated in 30 or fewer races is 642",
                "query": "SELECT COUNT(*) FROM (SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30)"
            },
            {
                "isuser": true,
                "text": "What are the ID's of those drivers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the IDs of those drivers that have participated in 30 or fewer races",
                "query": "SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"
            },
            {
                "isuser": true,
                "text": "How many races did each of these drivers participate in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the driver IDs and the number of races each of these drivers participate in.",
                "query": "SELECT T1.driverid,count(*)  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid"
            },
            {
                "isuser": true,
                "text": "How many of those drivers placed in the top 3 of any race?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all drivers placed in the top 3 of any race.",
                "query": "SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid having t2.rank < 3"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Drama_Workshop_Groups",
        "turns": [
            {
                "isuser": true,
                "text": "show the minimum order quality of all invoices",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the minimum order quality of all invoices is 1",
                "query": "SELECT min(Order_Quantity)  FROM INVOICES"
            },
            {
                "isuser": true,
                "text": "show the maximum order quality of all invoices",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the maximum order quality of all invoices is 2",
                "query": "SELECT max(Order_Quantity) FROM INVOICES"
            },
            {
                "isuser": true,
                "text": "show the average order quantity of all invoices",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average order quantity of all invoices is 2",
                "query": "SELECT avg(Order_Quantity) FROM INVOICES"
            },
            {
                "isuser": true,
                "text": "show the order id, product id with order quantity\t",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the order id, product id with order quantity. For example, order id 14 with product id being 4 has order quantity of 2.",
                "query": "SELECT order_id, product_id, order_quantity FROM INVOICES"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you tell me how many total employees are on this list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are 107 employees are on this list",
                "query": "SELECT count(distinct EMPLOYEE_ID\t) from  employees"
            },
            {
                "isuser": true,
                "text": "Very good!  Can display a list of all of the employees first names which contain a letter Z in their first name?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "which colums to return?",
                "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "Oh thanks! You went ahead and added the last name and city!  Could you also add to this list which country each of these people live in?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the first name ,the last name, city and  country of all of the employees first names which contain a letter Z in their first name ",
                "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city ,T3.COUNTRY_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
            },
            {
                "isuser": true,
                "text": "Thanks!  That City and Country ID for Elizabeth is unusual...  Can you please show her street address and state province?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows  Elizabeth's  street address and state province",
                "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city ,T3.COUNTRY_ID,T3.STREET_ADDRESS,T3.STATE_PROVINCE\t FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%' and T1.FIRST_NAME='Elizabeth'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wedding",
        "turns": [
            {
                "isuser": true,
                "text": "What are all church names? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of church names.",
                "query": "SELECT name from church"
            },
            {
                "isuser": true,
                "text": "How about church names for weddings of people older than 30?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Pure Church of Christ and Church of Christ (Parrishite) are the names of the churches for the weddings of all people older than 30.",
                "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30"
            },
            {
                "isuser": true,
                "text": "What are their opening years? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names and open dates of the churches for the weddings of all people older than 30.",
                "query": "SELECT T4.name, T4.Open_Date FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names of the course authors who teach the course with the name \"operating system\" or \"data structure\" please?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "All of those, please?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "All of those, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are personal, middle, and family names of the course authors who teach the course with the name \"operating system\" or \"data structure\".",
                "query": "SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""
            },
            {
                "isuser": true,
                "text": "What are their login names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The login names of the course authors who teach the course with the name \"operating system\" or \"data structure\" are ekshlerin and dschaefer.",
                "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""
            },
            {
                "isuser": true,
                "text": "What are the full names of the course authors who teach the course with the name \"advanced database\" please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are personal, middle, and family names of the course author who teaches the course with the name \"advanced database\".",
                "query": "SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you give me the names of the movies that has the top 3 highest rating star?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names of the movies that have the top 3 highest rating star are Snow White, Avatar, and Gone with the Wind",
                "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Can you show me the years of those movies as well?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names and years of the movies that have the top 3 highest rating star. For example, the year of Snow White is 1937.",
                "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "How about their directors?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names, years, and directors of the movies that have the top 3 highest rating star. For example, the year of Avatar is 2009, with director James Cameron.",
                "query": "SELECT T2.title ,  T2.year, T2.DIRECTOR FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Can you add rating stars too?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names, years, directors and rating stars of the movies that have the top 3 highest rating star. For example, the year of Avatar is 2009, with director James Cameron and 5 rating stars.",
                "query": "SELECT T2.title ,  T2.year, T2.DIRECTOR, t1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Can you please tell me the average stars as well?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the average stars of all ratings are 3.2857142857142856.",
                "query": "SELECT avg(stars) from rating"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "party_host",
        "turns": [
            {
                "isuser": true,
                "text": "What are some parties with theme \"Spring\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the party with theme \"Spring\" ",
                "query": "SELECT * FROM party WHERE Party_Theme  =  \"Spring\" "
            },
            {
                "isuser": true,
                "text": "What are the first year and last year of the parties with theme \"Teqnology\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the first year and last year of the parties with theme \"Teqnology\" are 2002 and 2004",
                "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Teqnology\""
            },
            {
                "isuser": true,
                "text": "OK, can you show me the first year and last year of parties with theme of both \" Spring\" and \"Teqnology\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the first years and last years of parties with the theme of both \" Spring\" and \"Teqnology\" ",
                "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the average invoice sizes of each country?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average invoice sizes of each country are  shown   in the  table ",
                "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country"
            },
            {
                "isuser": true,
                "text": "What was the country that had the highest invoice size?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the country that had the highest invoice size is  Czech Republic",
                "query": "SELECT billing_country FROM invoices order by \ttotal desc  limit 1"
            },
            {
                "isuser": true,
                "text": "What are the top 10 countries with the highest invoice size along with their amount?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the top 10 countries with the highest invoice size along with their amount  are shown  in the table ",
                "query": "SELECT billing_country , total FROM invoices ORDER BY total DESC LIMIT 10;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome  and bye ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "browser_web",
        "turns": [
            {
                "isuser": true,
                "text": "What distinct accelerator names are compatible with Firefox.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "CACHEbox and Fasterfox are the accelerator names that are compatible with Firefox",
                "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name =\"Firefox\""
            },
            {
                "isuser": true,
                "text": "What distinct accelerator names are compatible with the browsers that have a market share higher than 15.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the names of the accelerators that are compatible with the browsers that have a market share higher than 15",
                "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 15;"
            },
            {
                "isuser": true,
                "text": "What distinct accelerator names have been compatible since at least 1996.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the distinct accelerator names that have been compatible since at least 1996",
                "query": "SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id = T2.id where compatible_since_year >= 1996"
            },
            {
                "isuser": true,
                "text": "Out of these accelerators which are compatible with browsers that have a market share higher than 25.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Fasterfox and Nitro are compatible with browsers that have a market share higher than 25 since at least 1996",
                "query": "SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id = T2.id join browser as T3 on T3.id = T1.browser_id where T1.compatible_since_year >= 1996 and T3.market_share > 25"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "sports_competition",
        "turns": [
            {
                "isuser": true,
                "text": "what are the name of the countries who have participated in both the friendly and tournament type competitions",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the country that has participated in both the friendly and tournament type competitions are shown is Russia. ",
                "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'"
            },
            {
                "isuser": true,
                "text": "what is the competition id of the country",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "list all the competition id for russia",
                "query": ""
            },
            {
                "isuser": true,
                "text": "list all the competition id for russia",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The competition ids that are associated with Russia are shown in the result table. ",
                "query": "SELECT Competition_ID FROM competition WHERE country = \"Russia\""
            },
            {
                "isuser": true,
                "text": "include the year in the table",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The competition ids and years that are associated with Russia are shown in the result table.",
                "query": "SELECT Competition_ID, year FROM competition WHERE country = \"Russia\""
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What is the average age of all the male students (sex with M) from each city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the average age of all male students from each city. For example,the average age of ATL is 20.",
                "query": "SELECT  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"
            },
            {
                "isuser": true,
                "text": "What are the average number of all the male students (sex with M) from each city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the number of male students from each city. For example, the average age of ATL is 20.",
                "query": "SELECT count(*) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"
            },
            {
                "isuser": true,
                "text": "What are the names of the students from ATL?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the first and last names of the student from ATL",
                "query": "SELECT FName, Lname FROM student WHERE city_code = 'ATL'"
            },
            {
                "isuser": true,
                "text": "What is his age?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The age of the student from ATL is 20",
                "query": "SELECT Age FROM student WHERE city_code = 'ATL'"
            },
            {
                "isuser": true,
                "text": "What is the average age of all the female students (sex with F) from each city?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of average year of all the female students from each city. For example, the average year of BAL is 18.666666666666668.",
                "query": "SELECT avg(age) ,  city_code FROM student WHERE sex  =  'F' GROUP BY city_code"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "network_2",
        "turns": [
            {
                "isuser": true,
                "text": "What is the total number of people who has no friend living in the city of Austin?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "v2/network_2/query_feedback/U0VMRUNUIGNvdW50KERJU1RJTkNUIG5hbWUpIEZST00gUGVyc29uRnJpZW5kIFdIRVJFIGZyaWVuZCBOT1QgSU4gKFNFTEVDVCBuYW1lIEZST00gcGVyc29uIFdIRVJFIGNpdHkgPSAnQXVzdGluJyk=/eBrsD8MaEEwaGzvdy/",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What about in New York City?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 people who have no friend living in the city of \"New York City\".",
                "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'new york city')"
            },
            {
                "isuser": true,
                "text": "What about Salt Lake City?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 people who have no friend living in the city of \"Salt Lake City\".",
                "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'salt lake city')"
            },
            {
                "isuser": true,
                "text": "What are their names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the people who have no friend living in the city of \"Salt Lake City\" are \"Zach\" and \"Bob\".",
                "query": "SELECT distinct name FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'salt lake city')"
            },
            {
                "isuser": true,
                "text": "What are the names of the people with no friends in New York City?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of the people with no friends in \"New York City\".",
                "query": "SELECT distinct name FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city = 'new york city')"
            },
            {
                "isuser": true,
                "text": "How many people in New York City have friends?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 people in \"New York City\" has friends.",
                "query": "select count(*) from Person AS T1 JOIN PersonFriend AS T2 ON T1.name=T2.name WHERE Person.city='new york city'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "train_station",
        "turns": [
            {
                "isuser": true,
                "text": "What are the top three total number of passengers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the top 3  total number of passengers",
                "query": "SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What are the names and main services for train stations for these?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and main services for the train stations with the top 3 number of passengers",
                "query": "SELECT name, main_services FROM station ORDER BY total_passengers DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What about the names and main services for the train stations with the least 3 number of passengers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and main services for the train stations with the least 3 number of passengers",
                "query": "SELECT name, main_services FROM station ORDER BY total_passengers asc LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "inn_1",
        "turns": [
            {
                "isuser": true,
                "text": "List all the room names. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of room names.",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId"
            },
            {
                "isuser": true,
                "text": "List all the room names with 2 beds.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of room names with 2 beds.",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.beds = 2"
            },
            {
                "isuser": true,
                "text": "List all the room names booked with 1 adult. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the room names booked with 1 adult.",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Adults = 1"
            },
            {
                "isuser": true,
                "text": "List all the room names booked with 1 adult and their check in date. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the room names with 1 adult and their check in date. For example, the check in date for Harbinger but bequest is 23-OCT-10.",
                "query": "SELECT T2.roomName, T1.Checkin FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Adults = 1"
            },
            {
                "isuser": true,
                "text": "List all the room names booked with 1 adult and a check in date in October. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of room names with 1 adult and a check in date in OCT.",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Adults = 1 AND T1.checkin LIKE \"%OCT%\""
            },
            {
                "isuser": true,
                "text": "List the names of rooms booked by a customer whose first name is Roy. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of rooms booked by the customer with first name \"Roy\"",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.firstname = \"ROY\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "Show me the medicine name which can interact as 'inhibitor'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the names of the medicines with interaction type 'inhibitor'.",
                "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor'"
            },
            {
                "isuser": true,
                "text": "Show me the medicine name which can interact as 'activitor' with enzymes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the names of the medicines that can interact as type 'activitor' with enzymes.",
                "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"
            },
            {
                "isuser": true,
                "text": "Show me the name of the medicines that are present in both the tables?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names of the medicines that can both interact as 'inhibitor' and 'activitor' with enzymes are Asenapine and Iloperidone.",
                "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customer_deliveries",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you show me a list of all customer IDs for customers not located in the state of California?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of IDs of customers who are not located in the state of California",
                "query": "SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you update this list to show both the city name and state associated with each of these customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of IDs of customers who are not located in the state of California, along with their cities and states.",
                "query": "select t1.customer_id, t3.city, t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  !=  'California'"
            },
            {
                "isuser": true,
                "text": "This is excellent!  Can you filter this list to show data for the top 3 customers who have been members the longest?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here are IDs of three customers who have become customers the earliest and are not located in the state of California, along with their cities and states.",
                "query": "select t1.customer_id, t3.city, t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  !=  'California' order by t1.date_became_customer limit 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "solvency_ii",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you show me a list of all of the different product type codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. The product type codes are shown in the result table. There are books, food, etc.",
                "query": " SELECT Product_Type_Code FROM Products"
            },
            {
                "isuser": true,
                "text": "Nice!  Can you filter this list to show the Product Type Codes for the entries which have either a product price higher than 4500 or a product price lower than 3000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product type codes for the products that have either a product price higher than 4500 or a product price lower than 3000 are books, electronics, and food",
                "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000"
            },
            {
                "isuser": true,
                "text": "Awesome!  What product price is associated with the Product Type Code of \"food\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product prices for product type code of food are shown in the result table. We have different prices of 2894.94, 3574.56, and so on",
                "query": "SELECT Product_Price FROM Products WHERE Product_Type_Code = \"Food\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_fnol",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you provide me with a list of all of the service names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all of the service names. For example, one of them is New policy application.",
                "query": "SELECT service_name FROM services "
            },
            {
                "isuser": true,
                "text": "Thank you very much for that!  Could you please filter this list to show only the Service Names which occur more than once on the First Notification of Loss table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of all of the service names which occur more than once on the first notification of loss table. For example, one of them is New policy application",
                "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "My apologies!  I meant to ask for the list to be filtered to show only the Service Names which occur more than 2 times on the First_Notification_of_Loss table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "New policy application is the name of the service that has been used more than 2 times in first notification of loss.",
                "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "Awesome!  Can you show me how many times New policy application has been used?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of times that New policy application has been used is 3.",
                "query": "SELECT t2.service_name, count(*) FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING Service_name = \"New policy application\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "shop_membership",
        "turns": [
            {
                "isuser": true,
                "text": "Show the city and the number of branches opened before 2010 for each city",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the city and the number of branches opened before 2010 for each city. For example, London has 2 branches opened before 2010.",
                "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
            },
            {
                "isuser": true,
                "text": "Which year were those branches opened?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the opening years of the branches which opened before 2010. For example, one of them is 2001.",
                "query": "SELECT open_year FROM branch WHERE open_year  <  2010 "
            },
            {
                "isuser": true,
                "text": "Give me the membership amount for those cities",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Cities that were opened before 2010",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Cities that were opened before 2010",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Give me names of branches opened before 2010",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Give me names of branches opened before 2010",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of branches opened before 2010. For example, one of them is Alexandre.",
                "query": "SELECT name FROM branch WHERE open_year  <  2010 "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "network_2",
        "turns": [
            {
                "isuser": true,
                "text": "is there any person who has no student friends",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the information of the persons who have no student friends is shown in the result table. ",
                "query": "SELECT * FROM person EXCEPT SELECT T1.* FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'"
            },
            {
                "isuser": true,
                "text": "is there any person friend for this persons",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "None of the persons who have no student friends  have any person friends. ",
                "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student' INTERSECT SELECT T3.name FROM Person AS T4 JOIN PersonFriend AS T3 ON T4.name  =  T3.friend"
            },
            {
                "isuser": true,
                "text": "ok, list the name of the person who has no student friend in ascending order",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is one student, Dan, who has no student friends in ascending order. ",
                "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend  order by name desc"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the names of all instructors in the Art department who have taught some course and the course id.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the names of all instructors in the Art department who have taught some course and the course id is  empty ",
                "query": "SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
            },
            {
                "isuser": true,
                "text": "Find the names of all instructors in the Art department",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  names  of all instructors in the Art department is  empty",
                "query": "select  name  from instructor where dept_name= 'Art'"
            },
            {
                "isuser": true,
                "text": "Find the instructor id of all instructors in the Statistics department",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the instructor ids  of all instructors in the Statistics department are  shown  in  the table ",
                "query": "select  \nID  from instructor where dept_name= 'Statistics'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the lowest duration of songs that have mp3 format and resolution below 800?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the lowest duration of songs that have mp3 format and resolution below 800 is 2:56",
                "query": "SELECT min(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
            },
            {
                "isuser": true,
                "text": "What is the highest duration of songs that have mp3 format and resolution below 800?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the highest duration of songs that have mp3 format and resolution below 800 is 4:34",
                "query": "SELECT max(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
            },
            {
                "isuser": true,
                "text": "What is the average duration of songs that have mp3 format and resolution below 800?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average duration of songs that have mp3 format and resolution below 800 is 3.0",
                "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "e_learning",
        "turns": [
            {
                "isuser": true,
                "text": "List the author ids listed more than once in the courses",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the author ids listed more than once in the courses.",
                "query": "select author_id from Courses group by author_id having count(author_id)>1"
            },
            {
                "isuser": true,
                "text": "Find the addresses and author IDs of the course authors that teach at least two courses.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the addresses and author IDs of the course authors that teach at least two courses.",
                "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count(*) >= 2"
            },
            {
                "isuser": true,
                "text": "How about those who teaches at least one course?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the addresses and author IDs of the course authors that teach at least one courses.",
                "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count(*) >= 1"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_card_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please list the first and last names of all the customers that have at least two cards?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the first and last names of all the customers that have at least two cards.",
                "query": "SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2\n\n"
            },
            {
                "isuser": true,
                "text": "Please add their IDs into the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the ids, first and last names of all the customers that have at least two cards.",
                "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2\n\n"
            },
            {
                "isuser": true,
                "text": "What are the addresses of all the customers with credit cards?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the addresses of the customers with card of card type code credit.",
                "query": "SELECT T2.customer_address FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_type_code = \"Credit\"\n\n"
            },
            {
                "isuser": true,
                "text": "What is the email of the customer that has the credit card with the earliest date valid from?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The email of the customer that has the credit card with the earliest date valid from is idickinson@example.com.",
                "query": "SELECT T2.customer_email FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_valid_from = (SELECT MIN(date_valid_from) FROM Customers_Cards) \n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Good bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "what is the name of the dorms with capacity of greeter than  300 ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Fawlty Towers and Dorm-plex 2000 are the names of the dorms with the capacity of greater than 300.",
                "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
            },
            {
                "isuser": true,
                "text": "what are  the dorm ids? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of the dorms with the capacity of greater than 300 are 140 and 160.",
                "query": "SELECT dormid FROM dorm WHERE student_capacity  >  300"
            },
            {
                "isuser": true,
                "text": "whats the student capacity? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The student capacities of the dorms with the capacity of greater than 300 are 355 and 400.",
                "query": "SELECT student_capacity FROM dorm WHERE student_capacity  >  300"
            },
            {
                "isuser": true,
                "text": "Thanks! ",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "Please show me a list of the top 5 countries by number of invoices. List country name.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names of top 5 countries by number of invoices.",
                "query": "SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "OK! Can you also show me the number of invoices for these 5 countries.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names and the number of invoices of the top 5 countries by number of invoices.",
                "query": "SELECT billing_country,COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "May I also see the names of bottom 5 countries by number of invoices. Please show me country names and number of invoices.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names and the number of invoices of bottom 5 countries by number of invoices.",
                "query": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) LIMIT 5;"
            },
            {
                "isuser": true,
                "text": "Can you show me the postal codes for these countries.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table shows the names and postal codes for the bottom 5 countries by number of invoices.",
                "query": "SELECT billing_country,billing_postal_code FROM invoices GROUP BY billing_country ORDER BY count(*) LIMIT 5;"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, can you please tell me the average training hours of all the players?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What about the average training hours of all the players whose names contain the letter 'a'?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What about the average training hours of all the players whose names contain the letter 'a'?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Can you tell me the player id of each player with the letter 'a' in their name?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Can you tell me the player id of each player with the letter 'a' in their name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the player id of each player with the letter 'a' in their name.",
                "query": "SELECT pid FROM Player WHERE pName LIKE '%a%'"
            },
            {
                "isuser": true,
                "text": "How many of those players have a yes card?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2 players have letter 'a' in their name and yes card.",
                "query": "SELECT count(*) FROM Player WHERE pName LIKE '%a%' and yCard = \"yes\""
            },
            {
                "isuser": true,
                "text": "What are those players' names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "David and Drago are the names of players with letter 'a' in their name and yes card.",
                "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%' and yCard = \"yes\""
            },
            {
                "isuser": true,
                "text": "How many hours have each of those two players trained?",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "chinook_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Can you show me the customer names that have an invoice?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the full names of the customers who have an invoice.",
                "query": "SELECT FirstName, LastName from Customer where customerid in (select customerid from Customer intersect select customerid from Invoice)"
            },
            {
                "isuser": true,
                "text": "Hmm, I want to know all the customer names that live in Brazil and have an invoice.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the distinct first names of all the customer that live in Brazil and have an invoice.",
                "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""
            },
            {
                "isuser": true,
                "text": "Can you also list their customer ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the distinct first names and ids of customers that live in Brazil and have an invoice.",
                "query": "SELECT DISTINCT T1.FirstName, T1.customerid FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dorm_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name of the amenities that Smith Hall dorm has. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the name of amenities that Smith Hall dorm has. For example, they are  Study room,.",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"
            },
            {
                "isuser": true,
                "text": "Order that by amenity name please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the name of amenities that Smith Hall dorm has ordered by amentity name. ",
                "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"
            },
            {
                "isuser": true,
                "text": "What are the amenity id of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the amentity id of Smith Hall has ordered by the amenity names. For example, they are 904.",
                "query": "SELECT T2.amenid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"
            },
            {
                "isuser": true,
                "text": "What dorm id have the amenity id 901?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of dorm id which have the amentity id 901. For example, they are 109.",
                "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid = 901"
            },
            {
                "isuser": true,
                "text": "What dorm id have the amenity id 904?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of dorm id which have the amentity id 904. For example, they are 109.",
                "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid = 904"
            },
            {
                "isuser": true,
                "text": "What dorm id have the amenity id 922?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of dorm id which have the amentity id 922. For example, they are 109.",
                "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid = 922"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "What is the color description of the product with the name \"catnip\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The color description of the product with the name \"catnip\" is white",
                "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\""
            },
            {
                "isuser": true,
                "text": "What are the product names of all products with the color description red?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the products name of all products with the color desciption red . For example, they are  basil.",
                "query": "SELECT t1.product_name\t FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"red\""
            },
            {
                "isuser": true,
                "text": "Could you add in the typical buying price of each of those please?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The price of basil is 503.8431967. The price of sesame is 1284268.0659 and price of caraway is 24493",
                "query": "SELECT t1.product_name, t1.typical_buying_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"red\""
            },
            {
                "isuser": true,
                "text": "What are the product descriptions of all products with the color description green?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product descripton of all products with the color desciption green are \"et\" and \"nisi\".",
                "query": "SELECT t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"green\""
            },
            {
                "isuser": true,
                "text": "Can you add into the table their product names, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product with color desciption green is flax and its  product description is \"et\". Cinnam is also product with color decription green and its product description is \"nisi\".",
                "query": "SELECT t1.product_name, t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"green\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "assets_maintenance",
        "turns": [
            {
                "isuser": true,
                "text": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids and details of the assets that have 2 parts and have less than 2 fault logs.",
                "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"
            },
            {
                "isuser": true,
                "text": "What is the asset make and asset model for asset id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the asset make and asset model for asset id 2 are IN and 35 xt.",
                "query": "SELECT asset_make,asset_model from assets where asset_id = 2"
            },
            {
                "isuser": true,
                "text": "What are the asset acquired date and asset disposed date for asset id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the asset acquired date and asset disposed date for asset id 2 are 2018-01-27 00:59:46 and 2018-03-20 04:24:09.",
                "query": "SELECT asset_acquired_date,asset_disposed_date from assets where asset_id = 2"
            },
            {
                "isuser": true,
                "text": "How many other asset details are there labeled in Bad condition?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of assets that have  other asset details labeled as Bad condition is 4",
                "query": "SELECT count(*) from assets where other_asset_details = \"Bad condition\""
            },
            {
                "isuser": true,
                "text": "What is the maintenance contract id and supplier company id for asset id 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the maintenance contract id and supplier company id for asset id 2 are 14 and 1.",
                "query": "SELECT maintenance_contract_id,supplier_company_id from assets where asset_id = 2"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Display the employee ID and salary of all employees who report to payam (First name)",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee ids and salaries of all employees who report to Payam (first name) are shown in the result table. ",
                "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"
            },
            {
                "isuser": true,
                "text": "What is the highest salary? who did earn it",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee details of the employee with the highest salary is shown in the result table. ",
                "query": "SELECT * from employees order by salary desc limit 1"
            },
            {
                "isuser": true,
                "text": "What is the lowest salary? who did earn it",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee details of the employee with the lowest salary is shown in the result table. ",
                "query": "SELECT * from employees order by salary limit 1"
            },
            {
                "isuser": true,
                "text": "What is the name of the following phone number 515.123.4569? Tell me Employer ID",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id, first name, and last name of the employee with the phone number 515.123.4569 are shown in the result table.  ",
                "query": "SELECT employee_id, first_name, last_name from employees where phone_number = \"515.123.4569\""
            },
            {
                "isuser": true,
                "text": "Who is the senior employee and tell me first name? Tell me the hire date",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the lowest hire date? tell me the first name.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the lowest hire date? tell me the first name.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name and hire date of the employee that was first hired is shown in the result table. ",
                "query": "SELECT first_name, hire_date from employees order by hire_date limit 1"
            },
            {
                "isuser": true,
                "text": "Good, Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "Which African countries have a smaller population than that of any Asian country?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of  African countries that have a smaller population than that of any Asian country. For example, one of the African countries is British Indian Ocean Territory. ",
                "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")"
            },
            {
                "isuser": true,
                "text": "Which Asian countries have a smaller population than that of any African country?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "No Asian countries have a smaller population than that of any African country.",
                "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")"
            },
            {
                "isuser": true,
                "text": "Which Asian country has the highest life expectancy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The Asian country with the highest life expectancy is Macao.",
                "query": "SELECT Name FROM country WHERE Continent = \"Asia\" ORDER BY LifeExpectancy DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thank you!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you tell me how many dogs have not gone through any treatment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 6 dogs have not gone through any treatment.",
                "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )"
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you tell me how many of these dogs were abandoned?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 0 dogs have not gone through any treatment and were abandoned.",
                "query": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 AND dog_id NOT IN ( SELECT dog_id FROM Treatments )"
            },
            {
                "isuser": true,
                "text": "Can you provide me with a list of all dog Ids for all of the abandoned dogs, as well as their associated treatment type code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All the dog ids of the abandoned dogs and their associated treatment type code are listed in the result table. For example, dog id 14 has treatment type code WALK",
                "query": "SELECT T1.dog_id, T2.treatment_type_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE abandoned_yn = 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "What are the enrollments of all colleges in the state of FL?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total enrollment of colleges in the state of FL is 19000.",
                "query": "SELECT SUM(enr) FROM college WHERE state = 'FL'"
            },
            {
                "isuser": true,
                "text": "What are the names of all colleges that have an enrollment greater than at least one of the colleges in FL?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the colleges with enrollment greater than at least one college in FL is OU.",
                "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"
            },
            {
                "isuser": true,
                "text": "What are the names of all colleges that have an enrollment greater than at least one of the colleges in OK?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no colleges with enrollment greater than at least one of the colleges in OK.",
                "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'OK')"
            },
            {
                "isuser": true,
                "text": "How about the names of all colleges that have an enrollment less than at least one of the colleges in OK?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of all colleges with enrollment less than at least on of the colleges in OK.",
                "query": "SELECT DISTINCT cName FROM college WHERE enr  <  (SELECT max(enr) FROM college WHERE state  =  'OK')"
            },
            {
                "isuser": true,
                "text": "What are the names of all colleges that have an enrollment less than at least one of the colleges in FL?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of all colleges with enrollment less than at least one of the college in FL.",
                "query": "SELECT DISTINCT cName FROM college WHERE enr  <  (SELECT max(enr) FROM college WHERE state  =  'FL')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  How are you!  Can you provide me with a list of all patient names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. The patient names are John Smith, Grace Ritchie, Random J. Patient, and Dennis Doe.",
                "query": "SELECT name FROM Patient"
            },
            {
                "isuser": true,
                "text": "Thank you so much!  Can you filter this list to show only the patients who had more than one appointment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The patient names who had more than one appointment are John Smith, Grace Ritchie, and Dennis Doe.",
                "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Great! Can you update this list to include the phone number of each of these patients?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The patient names and phone for who had more than one appointment are listed in the result table. For example, patient John Smith has phone number 555-0256",
                "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem. Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the names of all customers who don't have any address information, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the  list the names of all customers who don't have any address information",
                "query": "SELECT customer_name  FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
            },
            {
                "isuser": true,
                "text": "Can you find their addresses and add them to the chart?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the names and  addresses of all customers who don't have any address information",
                "query": "SELECT customer_name ,customer_address FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
            },
            {
                "isuser": true,
                "text": "Can you list the customer names for all the customers that don't have anything listed under the customer_address column?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the list the customer names for all the customers that don't have anything listed under the customer_address column",
                "query": "SELECT customer_name  FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome,goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many stations have an average bike availability above 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 19 stations having an average bike availability above 10",
                "query": "select count(*) from (SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 )"
            },
            {
                "isuser": true,
                "text": "How many of those are not in San Jose City?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 16 stations having an average bike availability above 10 and not in San Jose city",
                "query": "select count(*) from (SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city = \"San Jose\")"
            },
            {
                "isuser": true,
                "text": "What are the names of those stations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the stations that have an average bike availability above 10 and are not in San Jose city",
                "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city = \"San Jose\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "device",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all of the shop names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of all the shop names is shown.",
                "query": "SELECT Shop_Name FROM shop "
            },
            {
                "isuser": true,
                "text": "Beautiful!  Can you update this list to include the stock quantity for all of these shops?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the shop names with their stock quantity are listed.",
                "query": "SELECT T2.Shop_Name,T1.Quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID "
            },
            {
                "isuser": true,
                "text": "Can you filter this list to show the name of the shop that has the largest quantity of stock, and please also display the quantity of stock?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the shop that have the largest quantity of devices in stock and its quantity of stock are Dinas Device and 100.",
                "query": "SELECT T2.Shop_Name,T1.quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Doc_Template_Mgt",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  How are you?  First, I'll start with a straightforward request...  Can you show me all document IDs and their corresponding document names and number of paragraphs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hi! Welcome. Here is the result table of all the document IDs and their corresponding document names and number of paragraphs. For example, Document ID 3 corresponds to  the document name Summer Show and 1 paragraph.",
                "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you update this list to show only the Document_IDs and corresponding document_names for the documents that have 2 or more paragraphs, and then add the values from the paragraph text category?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Okay...  I'll ask something different.  Can you show me a list of all of the paragraph text values?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Okay...  I'll ask something different.  Can you show me a list of all of the paragraph text values?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows a list of all the paragraph text values.",
                "query": "SELECT Paragraph_Text FROM Paragraphs"
            },
            {
                "isuser": true,
                "text": "Thanks!  Can you filter this list to show the Paragraph_Texts which have something other than \"NULL\" as the Other Details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no paragraph texts with a non NULL other details.",
                "query": "SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details != \"NULL\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "I don't think so...  Thank you for you time!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I don't think so...  Thank you for you time!",
                "type": "NEGATE"
            },
            {
                "isuser": false,
                "text": "Goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "How many professors are there in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors is 22.",
                "query": "SELECT count(*) FROM professor"
            },
            {
                "isuser": true,
                "text": "What are the names of the departments they teach classes for?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the department names that professors teach for.",
                "query": "SELECT DISTINCT T4.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code"
            },
            {
                "isuser": true,
                "text": "How many of the 22 professors are part of the Accounting department?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors in the Accounting department is 3.",
                "query": "SELECT count(*) FROM Professor WHERE Dept_code = \"ACCT\""
            },
            {
                "isuser": true,
                "text": "How many of those 3 are currently teaching courses?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors in the Accounting department that are teaching courses is 3.",
                "query": "SELECT count(DISTINCT t3.emp_num) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T3.dept_code  =  'ACCT'"
            },
            {
                "isuser": true,
                "text": "Could you tell me the number of them that are teaching in a physical class room instead of through online classes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of professors in the Accounting department who are teaching a course in a classroom is 3.",
                "query": "SELECT count(DISTINCT t3.emp_num) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T3.dept_code  =  'ACCT'"
            },
            {
                "isuser": true,
                "text": "What are their first names and the class rooms where they teach?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the first names of all professors in the Accounting department who are teaching some course and the class room. For example, Arnelle is teaching in BUS200 and BUS311.",
                "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_1",
        "turns": [
            {
                "isuser": true,
                "text": "can you how me a list of artists?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "All artist names are listed in the result table. There are Enrique, Farida, etc.",
                "query": "SELECT artist_name FROM artist"
            },
            {
                "isuser": true,
                "text": "can you show me their ratings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ratings for each artist are listed in the result table. For example, Shrikanta has a rating of 8",
                "query": "SELECT artist_name, rating FROM song"
            },
            {
                "isuser": true,
                "text": "can you show me song's language?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Each song name and its corresponding language are shown in the result table. For example, song name Tumi robe nirobe's language is bangia.",
                "query": "SELECT song_name, languages FROM song"
            },
            {
                "isuser": true,
                "text": "thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "musical",
        "turns": [
            {
                "isuser": true,
                "text": "list the names of the musicals with more than three actors",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the musical with more than 3 actors is The Book of Mormon.",
                "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Are there any musicals with at least three actors",
                "type": ""
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the name of the musical with at least three actors is The Book of Mormon.",
                "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
            },
            {
                "isuser": true,
                "text": "Is it possible for you to show me the name of the musicals with nothing less than three actors",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the name of the musical with at least 3 actors is The Book of Mormon.",
                "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "Can you tell me the total amount spent on tickets by visitors with membership level 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total ticket spent of the visitors whose membership level is 1 is 570.84",
                "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1"
            },
            {
                "isuser": true,
                "text": "Can you tell me how many visitors there are at membership level 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 visitors at membership level 1.",
                "query": "SELECT COUNT(id) FROM visitor WHERE Level_of_membership = 1"
            },
            {
                "isuser": true,
                "text": "How many membership levels are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 different level of membership",
                "query": "SELECT COUNT(DISTINCT level_of_membership) FROM visitor"
            },
            {
                "isuser": true,
                "text": "Can you show me the names of each visitor with membership level 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of visitors with level of membership 1 are Arjen Robben and Rafael van der Vaart",
                "query": "SELECT name FROM visitor WHERE Level_of_membership = 1"
            },
            {
                "isuser": true,
                "text": "I'd like to know how much was spent on tickets at each membership level, can you show me?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total spent at level of membership 1 is 570.84 and the total spent at level of membership 6 is 410.12",
                "query": "SELECT  t1.level_of_membership, sum(Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id group by Level_of_membership"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem. bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "Who is the professor in the office DRE 102?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "last name and hire date please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "last name and hire date please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows the last name and the hire date of professor in the office DRE 102. Yukon and Smith are in the DRE 102, and their hire dates are 1992-5-1 and 1992-8-1.",
                "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"
            },
            {
                "isuser": true,
                "text": "Thanks. What are those professors' degree?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "* I have left the chat *",
                "query": "SELECT T1.emp_lname , T2.prof_high_degree FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The degrees of the professors in the office DRE 102 are master and P.H.D correspondingly.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "medicine_enzyme_interaction",
        "turns": [
            {
                "isuser": true,
                "text": "What are the interaction type of ALA synthase?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the interaction type of ALA synthase is inhibitor",
                "query": "SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE name = \"ALA synthase\""
            },
            {
                "isuser": true,
                "text": "Find the product of enzyme id 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the product of enzyme id 1 is \u03b4-Aminolevulinic acid",
                "query": "SELECT product FROM enzyme where  id = 1"
            },
            {
                "isuser": true,
                "text": "Where is the location for medicine id 3?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the id and name of the enzyme with most number of medicines that can interact as 'activator' are 4 and Uroporphyrinogen III synthase.",
                "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "What are the response received dates for the documents described as 'Regular'?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the response received dates for the documents described as 'Regular' is shown.",
                "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular'"
            },
            {
                "isuser": true,
                "text": "What are the response received dates for the documents with a grant amount more than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The response received dates for the documents granted with more than 100 are listed.",
                "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T3.grant_amount  >  100"
            },
            {
                "isuser": true,
                "text": "How many documents have the document description \"Initial Application\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of documents whose document description is\"Initial Application\" is 10.",
                "query": "SELECT count(*) FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description = 'Initial Application'"
            },
            {
                "isuser": true,
                "text": "Can you list all of the grant start dates of those documents please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grant start dates of documents whose document description is\"Initial Application\"  are listed.",
                "query": "SELECT T3.grant_start_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description = 'Initial Application'"
            },
            {
                "isuser": true,
                "text": "What are the grant amounts of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The grant amounts of documents whose document description is\"Initial Application\" are listed. ",
                "query": "SELECT T3.grant_amount\t FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description = 'Initial Application'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "loan_1",
        "turns": [
            {
                "isuser": true,
                "text": "Please show me the greatest total amount of loans to customers for each bank branch.",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "I want to know what is the greatest amount of loan to customers that each bank branch has made.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I want to know what is the greatest amount of loan to customers that each bank branch has made.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the greatest amount of loan to customers for each bank and the corresponding bank name.",
                "query": "SELECT T2.bname, max(T1.amount) FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id GROUP BY T2.bname"
            },
            {
                "isuser": true,
                "text": "Can you show me the credit score of the customer receiving the greatest amount of loan? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "210 is the credit score of the customer who received the greatest amount of loan.",
                "query": "SELECT T2.credit_score FROM loan AS T1 JOIN customer AS T2 ON T1.cust_id  =  T2.cust_id ORDER BY T1.amount DESC limit 1"
            },
            {
                "isuser": true,
                "text": "Can you show me the name of the bank branch providing the greatest total amount of loans to customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Broadway is the name of the bank that provided the greatest total amount of loans to customers.",
                "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id GROUP BY T2.bname ORDER BY sum(T1.amount) DESC limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome! Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_assessment",
        "turns": [
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "what is the course id of English course?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The course id of the English course is 302.",
                "query": "SELECT course_id FROM courses where course_name = \"English\""
            },
            {
                "isuser": true,
                "text": "name the student ids who attend the statastic course?in order of attendance date",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the ids of students who attended statistics courses in the order of attendance date.",
                "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance"
            },
            {
                "isuser": true,
                "text": "what is the date of attendance of the student is 121? ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "the date of attendance of the student with id 121 is 2012-04-09 11:44:34.",
                "query": "SELECT date_of_attendance FROM student_course_attendance where student_id = 121"
            },
            {
                "isuser": true,
                "text": "which student id attend english and french both course?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no student who attended both English and French courses.",
                "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\" intersect SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"French\" "
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the share counts for all transactions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the share counts for all transactions.",
                "query": "SELECT share_count FROM TRANSACTIONS"
            },
            {
                "isuser": true,
                "text": "Can you add to the table the amount of transaction associated with each share count?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the share counts and amount of transactions for all transactions",
                "query": "SELECT share_count, amount_of_transaction FROM TRANSACTIONS"
            },
            {
                "isuser": true,
                "text": "Can you filter the table to only include transactions with share counts that are at least 100, or with amounts bigger than 100?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the share counts and amount of transactions for all transactions with at least 100 share count or amount bigger than 100.",
                "query": "SELECT share_count, amount_of_transaction FROM TRANSACTIONS where share_count >= 100 or amount_of_transaction >= 100"
            },
            {
                "isuser": true,
                "text": "Can you add to the table the dates of those transactions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dates, share counts, and amount of transactions for all transactions with at least 100 share count or amount bigger than 100.",
                "query": "SELECT date_of_transaction,share_count, amount_of_transaction FROM TRANSACTIONS where share_count >= 100 or amount_of_transaction >= 100"
            },
            {
                "isuser": true,
                "text": "Can you filter the table to only include the dates?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Sure. Here are the dates for all transactions with at least 100 share count or amount bigger than 100.",
                "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wta_1",
        "turns": [
            {
                "isuser": true,
                "text": "find the total ranking point for each player and their first name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the total ranking point for each player and their first name. For example, one of the players is Aastha with the total ranking point being 68.",
                "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
            },
            {
                "isuser": true,
                "text": "which player got first rank and their name",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "first name",
                "query": ""
            },
            {
                "isuser": true,
                "text": "first name",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of the different first names of players who got the first rank. For example, one of them is Serena",
                "query": "SELECT distinct T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking = 1"
            },
            {
                "isuser": true,
                "text": "is this correct?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here are the distinct first names of players who got the first rank.",
                "query": "SELECT distinct T1.first_name, T2.ranking FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id WHERE T2.ranking = 1"
            },
            {
                "isuser": true,
                "text": "ok,thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Hello. What are the IDs of guests with gender code Female?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the list of  IDs of guests with gender code Female.",
                "query": "SELECT guest_id FROM Guests WHERE gender_code  =  \"Female\""
            },
            {
                "isuser": true,
                "text": "Show me the start dates of apartment bookings by these IDs please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the start dates of apartment bookings made by guests with gender code \"Female\".",
                "query": "SELECT T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""
            },
            {
                "isuser": true,
                "text": "Show me the start dates and end dates of apartment bookings by these IDs please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the start and end dates of apartment bookings made by guests with gender code \"Female\".",
                "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""
            },
            {
                "isuser": true,
                "text": "Can you give me the apartment ids for the same list?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The table shows the ids of the apartments booked by guests with gender code \"Female\".",
                "query": "SELECT T1.apt_id FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "student_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Find the name of the teacher who teaches the largest number of students.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the first and last name of the teacher who teaches the largest number of students is GORDON KAWA.",
                "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What grade do they teach?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here are the grades of the students taught by the teacher who teaches the largest number of students.",
                "query": "select grade from list where classroom = (SELECT T1.classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "isuser": true,
                "text": "What is their class room?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The classroom of the class taught by the teacher who teaches the largest number of students is 109.",
                "query": "SELECT T1.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "What was the start date of the most recent appointment?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The start date of the most recent appointment is 2008-04-24 10:00.",
                "query": "SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the patient associated with the appointment on 2008-04-24 10:00?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the patients with the appointment time of 2008-04-24 10:00.",
                "query": "SELECT Patient FROM Appointment WHERE Start = '2008-04-24 10:00'"
            },
            {
                "isuser": true,
                "text": "Are there any appointments that happened later than 2008-04-24? I need the appointment that happened closest to today's date.",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. Here is a table of the appointment IDs that happened later than 2008-04-24 10:00 as well as their dates. For example, the appointment with ID 36549879 started at 2008-04-25 10:00.",
                "query": "SELECT AppointmentID, Start FROM Appointment WHERE Start > '2008-04-24 10:00'"
            },
            {
                "isuser": true,
                "text": "Can you list the patient IDs associated with appointment IDs 93216548 and 86213939?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of patients with appointment IDs 93216548 and 86213939.",
                "query": "SELECT Patient FROM Appointment WHERE AppointmentID = 93216548 OR AppointmentID = 86213939;"
            },
            {
                "isuser": true,
                "text": "Can you list the names associated with those patient ID 100000004 and 100000002?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of patient 100000004 and 100000002 are Dennis Doe and Grace Ritchie.",
                "query": "SELECT DISTINCT(T1.name) FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient WHERE T2.patient = 100000004 OR T2.patient = 100000002"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wta_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you list the average ranking for each player with their first name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all the first name of each player and their average ranking.",
                "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id"
            },
            {
                "isuser": true,
                "text": "Could you add in their last names please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all the first name and the last name of each player and their average ranking. ",
                "query": "SELECT avg(ranking) ,  T1.first_name, t1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id"
            },
            {
                "isuser": true,
                "text": "What are the full names of all left-handed players (hand value \"L\")?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists the first and last names of all the left-handed players. ",
                "query": "SELECT  T1.first_name, t1.last_name FROM players AS T1 where t1.hand = \"L\";"
            },
            {
                "isuser": true,
                "text": "Could you just show their last names, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all the last name of all left-handed players. ",
                "query": "SELECT T1.last_name FROM players AS T1 where t1.hand = \"L\";"
            },
            {
                "isuser": true,
                "text": "Would you also add in their rankings?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table that lists all the last name and the average ranking of all left-handed players",
                "query": "SELECT avg(ranking) ,  T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id where T1.hand = \"L\" GROUP BY T1.first_name;"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you show me a list of all courses that were offered in the Chandler building?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I would like both please!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I would like both please!",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The information for the courses offered in the Chandler building are shown in the result table. ",
                "query": "SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' "
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you filter that list to show only the rows that correspond to Fall of 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The information for the courses offered in the Chandler building in Fall, 2010 are shown in the result table.",
                "query": "SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester = 'Fall' AND YEAR = 2010\n\n"
            },
            {
                "isuser": true,
                "text": "Can you please tell me how many credits that course was worth?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The number of credits this course that was offered in the Chandler building in Fall, 2010 is 3. ",
                "query": "SELECT credits FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester = 'Fall' AND YEAR = 2010\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What are the IDs of all the products supplied by supplier 2?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the IDs of all the products supplied by supplier with id 2.",
                "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2"
            },
            {
                "isuser": true,
                "text": "What is the average price of these products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the average price of these the products supplied by supplier with id 2 is 708.2975",
                "query": "SELECT avg(T2.product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2"
            },
            {
                "isuser": true,
                "text": "Show me the ID's from the products from supplier number 2 that are more expensive than this average, please. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the IDs from the products from supplier number 2 that are more expensive than the average price of these the products supplied by the supplier with id 2.",
                "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(T2.product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2)"
            },
            {
                "isuser": true,
                "text": "Thanks!!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  How are you?  Could you please provide me with a list of all trip IDs for the zip code 94002?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table  of all the Ids of the trips for the zip code 94002 is shown.",
                "query": "SELECT id FROM trip WHERE zip_code  =  94002 "
            },
            {
                "isuser": true,
                "text": "Great! Can you tell me which bike id has the most trips within the area with the zipcode 94002?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The bike id which has the most trips in zip code 94002 is 252.",
                "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you tell me what the total number of trips is, within zip code 94002, for bike 252?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of trips within zip code 95002 for bike 252 is 4.",
                "query": "SELECT COUNT(*) FROM trip WHERE zip_code  =  94002 and bike_id='252'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "music_4",
        "turns": [
            {
                "isuser": true,
                "text": "What are the issue dates of volumes associated with the artist aged 23 or younger?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the issue date of volumes associated with the artist aged 23 or younger is 6 June",
                "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
            },
            {
                "isuser": true,
                "text": "What are the issue dates of volumes associated with the artist aged 24 or older?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are  issue dates of volumes associated with the artist aged 24 or older",
                "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >= 24"
            },
            {
                "isuser": true,
                "text": "How many weeks on top for volumes associated with the artist aged 23 or younger?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "here is 1 week on top for volumes associated with the artist aged 23 or younger",
                "query": "SELECT count(weeks_on_top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
            },
            {
                "isuser": true,
                "text": "How many weeks on top for volumes associated with the artist aged 24 or older?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are 9 weeks on tops for volumes associated with the artist aged 24 or older",
                "query": "SELECT count(weeks_on_top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >= 24"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "twitter_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show all user ids that have more than 1 tweet?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of users that have more than 1 tweet are 1, 4 and 6.",
                "query": "SELECT T1.uid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks, can you show the names associated with those user ids?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of users that have more than 1 tweet are shown in the table.",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Can you list the names in alphabetical order from top to bottom?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of users that have more than 1 tweet are shown in alphabetical order in the table.",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1 order by T1.name"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the number of papers published by Tokohu University",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no papers published by the institution \"Tokohu University\".",
                "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Tokohu University\""
            },
            {
                "isuser": true,
                "text": "What about the numbers of papers published by University of Oxford?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 2 papers published by the institution \"University of Oxford\".",
                "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"University of Oxford\""
            },
            {
                "isuser": true,
                "text": "Do you have a comparison of how many papers were published by each institution?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of course, here is the result table shows the names of the institution and the number of the papers published by each institution.",
                "query": "SELECT t3.name,count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid group by t3.name"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "book_2",
        "turns": [
            {
                "isuser": true,
                "text": "how many publishers are there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 different publishers. ",
                "query": "SELECT count(distinct Publisher) FROM publication "
            },
            {
                "isuser": true,
                "text": "How many of them have publications with price higher than 10000000?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 publisher with publications with prices higher than 10000000. ",
                "query": "SELECT count(Publisher) FROM publication WHERE Price  >  10000000 "
            },
            {
                "isuser": true,
                "text": "Can you please list its name along with the price?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The name and price of the publisher with publications with prices higher than 10000000 is listed in the result table. ",
                "query": "SELECT Publisher, Price FROM publication WHERE Price  >  10000000 "
            },
            {
                "isuser": true,
                "text": "Can you also include the publishers with price lower than 5000000?  ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "in  the table that you just created, add the names of the publishers with price lower than 5000000, and include their price  in the table too.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "in  the table that you just created, add the names of the publishers with price lower than 5000000, and include their price  in the table too.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and price of the publisher with publications with a price higher than 10000000 or lower than 5000000 is listed in the result table.",
                "query": "SELECT Publisher, Price FROM publication WHERE Price  >  10000000 or Price  <  5000000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Hi - can you please tell me the average room count of all Provisional bookings?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average room count of all apartments that have the booking status \"Provisional\" is  6.5.",
                "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
            },
            {
                "isuser": true,
                "text": "Great - can you list all apartments with more than one bathroom and more than three bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The apartments with more than one bathroom and more than three bedrooms are shown in the result table. ",
                "query": "SELECT * FROM Apartments where bathroom_count > 1 and bedroom_count > 3"
            },
            {
                "isuser": true,
                "text": "Which apartment has the most bedrooms?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The apartment with the most bedrooms is shown in the result table. ",
                "query": "SELECT * FROM Apartments order by bedroom_count desc limit 1"
            },
            {
                "isuser": true,
                "text": "OK - what was the total number of bookings in 2016?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There were 9 total number of booking that has a start date in 2016. ",
                "query": "SELECT count(*) FROM apartment_bookings where booking_start_date like \"%2016%\""
            },
            {
                "isuser": true,
                "text": "How many of those bookings were studio apartments?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is 1 apartment that has a start date in 2016 and is also of apartment type studio. ",
                "query": "SELECT count(*) FROM apartment_bookings as T1 join apartments as T2 on T1.apt_id = T2.apt_id where T1.booking_start_date like \"%2016%\" and T2.apt_type_code = \"Studio\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "Could you please tell me the names on all accounts in the bank?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of all the accounts in the bank are listed.",
                "query": "SELECT name from  ACCOUNTS"
            },
            {
                "isuser": true,
                "text": "What are the checking and savings balances on those accounts? Could you please sort them by their total balances in descending order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The checking and savings balances of all the accounts are in the first and second column respectively. They are sorted by their total checking and savings balances in descending order.",
                "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"
            },
            {
                "isuser": true,
                "text": "What is the average of all savings accounts?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": " The average savings balance of all the accounts is 166751716.5.",
                "query": "SELECT avg(balance) from savings "
            },
            {
                "isuser": true,
                "text": "Thanks! Have a great night!",
                "type": "GREETING"
            },
            {
                "isuser": false,
                "text": "Do you mean the average saving balance of all the accounts?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customer_complaints",
        "turns": [
            {
                "isuser": true,
                "text": "What is the phone number of the customer who has filed the most recent complaint?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The phone number of the customer who has filed the most recent complaint is +38(3)9011433816.",
                "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "The customer who filed the latest complaint uses which phone number?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The phone number of the customer who filed the latest complain is +38(3)9011433816.",
                "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the address of the customer who filed the most recent complaint?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The address line 1 and address line 2 of the customer who filed the most recent complaint are 425 Roman Tunnel and Apt. 495.",
                "query": "SELECT t1.address_line_1, t1.address_line_2 FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me the top 3 highest room counts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the top 3 highest room counts.",
                "query": "SELECT room_count FROM Apartments order by room_count DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "For each apartment, can you tell me the average of the bedroom count, bathroom count, and room count?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "yes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "yes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average of the bedroom count, bathroom count, and room count for each apartment type is shown in the following table.",
                "query": "SELECT apt_type_code, avg(bathroom_count), avg(bedroom_count), avg(room_count) FROM Apartments GROUP BY apt_type_code"
            },
            {
                "isuser": true,
                "text": "Can you tell me the average number of rooms for each apartment type code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average number of rooms for each apartment type code is shown in the following table.",
                "query": "SELECT apt_type_code, avg(room_count) FROM Apartments GROUP BY apt_type_code"
            },
            {
                "isuser": true,
                "text": "Can you sort them in descending order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average number of rooms for each apartment type code in descending order is shown in the following table.",
                "query": "SELECT apt_type_code, avg(room_count) FROM Apartments GROUP BY apt_type_code order by avg(room_count) desc"
            },
            {
                "isuser": true,
                "text": "Can you show me just the apartment type codes of the top 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " Here are the apartment type codes with the top 3 average room counts for each apartment type.",
                "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code order by avg(room_count) desc"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_invoices",
        "turns": [
            {
                "isuser": true,
                "text": "What is the customer ID of the customer with the most number of accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the customer ID of the customer with the most number of accounts  is  8",
                "query": "SELECT T1.customer_id  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is their first name?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the customer first name of the customer with the most number of accounts?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the customer first name of the customer with the most number of accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name of the customer with the most number of accounts is Meaghan",
                "query": "SELECT T2.customer_first_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the customer last name of the customer with the most number of accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The last name  of the customer with the most number of accounts is Keeling",
                "query": "SELECT T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "soccer_2",
        "turns": [
            {
                "isuser": true,
                "text": "what are the college names of the students whose tryout decision is yes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The college names of students whose tryout decision is yes are ASU and FSU",
                "query": "SELECT cName FROM Tryout WHERE decision = \"yes\""
            },
            {
                "isuser": true,
                "text": "what is the average and maximum hours for these students",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average and maximum hours for the students whose tryout decision is yes are 1400.0 and 1600 respectively.",
                "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
            },
            {
                "isuser": true,
                "text": "add the player id and college names in the same list",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The player id and college names are added in the list along with the average and maximum hours for the students whose tryout decision is yes",
                "query": "SELECT avg(T1.HS) ,  max(T1.HS), T1.pid, T2.cname FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
            },
            {
                "isuser": true,
                "text": "thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of all reviewers. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is list of the names of the reviewers.",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
            },
            {
                "isuser": true,
                "text": "What is the average rating of each reviewer.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name and average rating of each reviewer.",
                "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
            },
            {
                "isuser": true,
                "text": "List the names of all reviewers based on their average rating in ascending order. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the reviews based on their average rating in ascending order.",
                "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC"
            },
            {
                "isuser": true,
                "text": "List all movie id associated with Brittany Harris. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the movie IDs associated with Brittany Harris.",
                "query": "SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name = \"Brittany Harris\""
            },
            {
                "isuser": true,
                "text": "List all movie id associated with Brittany Harris and their rating date. \n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the movie IDs and rating dates associated with Brittany Harris. For example, the move ID 103 had a rating date of 2011-01-20.",
                "query": "SELECT T1.mID, T1.ratingDate FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name = \"Brittany Harris\""
            },
            {
                "isuser": true,
                "text": "What is the average rating of all movies reviewed by Brittany Harris. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average rating of movies reviewed by Brittany Harris is 2.6666666666666665.",
                "query": "SELECT avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name = \"Brittany Harris\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "mountain_photos",
        "turns": [
            {
                "isuser": true,
                "text": "How many camera lenses are not used in taking any photos?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Six camera lenses are not used in taking any photos.",
                "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"
            },
            {
                "isuser": true,
                "text": "What lenses are those?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "What is the name of the lenses not used for taking photos?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "What is the name of the lenses not used for taking photos?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the names of the lenses not used for taking photos. For example, one of them is Olympus M.Zuiko Digital ED 45mm f/1.8.",
                "query": "SELECT name FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"
            },
            {
                "isuser": true,
                "text": "What is the max aperture for the Olympus M.Zuiko Digital ED 45mm f/1.8?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the max aperture for the Olympus M.Zuiko Digital ED 45mm f/1.8 is 1.8",
                "query": "SELECT max_aperture FROM camera_lens WHERE name = \"Olympus M.Zuiko Digital ED 45mm f/1.8\""
            },
            {
                "isuser": true,
                "text": "How does this compare to the Olympus 15mm f/8.0 Body Cap?\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Olympus 15mm f/8.0 Body Cap has a higher max aperture than the Olympus M.Zuiko Digital ED 45mm f/1.8.",
                "query": "SELECT max_aperture FROM camera_lens WHERE name = \"Olympus 15mm f/8.0 Body Cap\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_in_alabama",
        "turns": [
            {
                "isuser": true,
                "text": "HI there!  How many events have more than one participant?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There are 5 events having more than one participant.",
                "query": "SELECT T1.Event_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Excellent!  Can you show me a list of the event IDs and event details for each of those five events which have more than one participant?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The event IDs and event details of those events that have more than one participant are listed in the result table. For example, event ID 3 has event details of success.",
                "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "I appreciate you doing that for me!  Can you update this list to include a column with the total number of participants for each event?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The participants for each event are listed in the result table. For example, event id 3 have participant ids 26 and 66.",
                "query": "SELECT T1.Event_ID , T2.Participant_ID FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "school_finance",
        "turns": [
            {
                "isuser": true,
                "text": "yes, i want to know about the mascots for schools.",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I want to know that what are the mascots for schools with enrollments above the average?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I want to know that what are the mascots for schools with enrollments above the average?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the mascots for schools with enrollments above average.",
                "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"
            },
            {
                "isuser": true,
                "text": "anymore mascots did you find?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of mascots for schools with enrollment below average.",
                "query": "SELECT mascot FROM school WHERE mascot NOT IN (SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school))"
            },
            {
                "isuser": true,
                "text": "but i want above average list only.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list of mascots for schools with enrollment above average. There are no others.",
                "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"
            },
            {
                "isuser": true,
                "text": "Fine, thank you for your help.",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_for_hire",
        "turns": [
            {
                "isuser": true,
                "text": "Could you show me the maximum booked count for the booked products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the maximum booked count for the booked products is 9",
                "query": "SELECT max(booked_count) FROM products_booked"
            },
            {
                "isuser": true,
                "text": "Could you also add the minimum number of booked products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the maximum booked count for the booked products is 9 and the minimum booked count for booked products is 1",
                "query": "SELECT max(booked_count) ,  min(booked_count) FROM products_booked"
            },
            {
                "isuser": true,
                "text": "Finally, could you add the average booked count for the products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the maximum booked count for the booked products is 9. the minimum booked count of booked products is 1. the average booked count for the products is 4.0.",
                "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "behavior_monitoring",
        "turns": [
            {
                "isuser": true,
                "text": "Find the start date of behavior incidents of students with the last name \"Fahey\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the start date of behavior incidents of students with the last name \"Fahey\"  is \n2017-07-09 10:04:13",
                "query": "SELECT T1.date_incident_start  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
            },
            {
                "isuser": true,
                "text": "Find the incident type code of behavior incidents of students with the last name \"Fahey\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the incident type code of behavior incidents of students with the last name \"Fahey\"  is\nNOISE",
                "query": "SELECT T1.\tincident_type_code  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
            },
            {
                "isuser": true,
                "text": "What is the date left university of the student with the last name \"Fahey\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the date left university of the student with the last name \"Fahey\"  is\n2018-03-20 22:01:07",
                "query": "SELECT T2.date_left_university  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
            },
            {
                "isuser": true,
                "text": "How many students have the incident type code \"VIOLENCE\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  count  of  students have the incident type code \"VIOLENCE\" is  6",
                "query": "SELECT count(*) from Behavior_Incident  where incident_type_code=\"VIOLENCE\""
            },
            {
                "isuser": true,
                "text": "What are the names of the students that have the incident type code \"VIOLENCE\"?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Both, please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Both, please.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": " The full names of the students that have the incident type code \"VIOLENCE\" are  shown  in the  table ",
                "query": "SELECT T2.first_name , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.incident_type_code = \"VIOLENCE\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_campaigns_ecommerce",
        "turns": [
            {
                "isuser": true,
                "text": "what are the names of the payment method of customers who have both mailshot in 'Order' outcome and mailshot in 'No response' outcome.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " The names of the payment method of customers who have both mailshot in 'Order' outcome and mailshot in 'No response' outcome are debit card and credit card.",
                "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'"
            },
            {
                "isuser": true,
                "text": "How many customers pay by Credit card?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Four customers pay by credit card.",
                "query": "select count(*) from customers where payment_method = \"Credit Card\""
            },
            {
                "isuser": true,
                "text": "which customers pay with debit card?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the info about all the customers who pay with direct debit.",
                "query": "select * from customers where payment_method = \"Direct Debit\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "Thanks. What is the visit details of the visitor whose detail is Vincent? \n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the visit details of the visitor whose detail is Vincent.",
                "query": "SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
            },
            {
                "isuser": true,
                "text": "What about the visit dates? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The visit dates of the visitor whose details is Vincent are 2013-08-06 05:35:51 and 2007-09-17 10:12:45.",
                "query": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
            },
            {
                "isuser": true,
                "text": "Can you please show me the dates within the last 10 years?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The visit dates of the visitor whose details is Vincent, within the last 10 years is 2013-08-06 05:35:51",
                "query": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\" and Visit_Date > \"2009-05-06 00:00:00\""
            },
            {
                "isuser": true,
                "text": "Can you show me dates of all visits before the year 2013 only? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the dates of all visits before the year 2013. For example, one of them is 2004-08-21 03:06:14.",
                "query": "SELECT Visit_Date  FROM visits where visit_date < \"2013-01-01 00:00:00\""
            },
            {
                "isuser": true,
                "text": "What are the visit date and details of the visitor whose detail is Toney? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no records for the visit date and details of the visitor whose detail is Toney.",
                "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Toney\""
            },
            {
                "isuser": true,
                "text": "What about for Graciela? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are no records for the visit date and details of the visitor whose detail is Graciela.",
                "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Graciela\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi!  Do most professors have a higher education degree?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "I'd like to know how many professors have a Ph.D. or MA?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I'd like to know how many professors have a Ph.D. or MA?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The count of  professors  who have a Ph.D. or MA is  20",
                "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'"
            },
            {
                "isuser": true,
                "text": "Are there more Ph.D. or more MA degrees?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There are more professors with a Ph.D. degree. The count of professors  who  have ph.D or  MA  are  shown  in  the table ",
                "query": "SELECT PROF_HIGH_DEGREE ,count(*) FROM professor group by  PROF_HIGH_DEGREE having prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'"
            },
            {
                "isuser": true,
                "text": "How many of them are Ph.D. degrees?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The count of   professors  who  have  Ph.D. degrees is  18",
                "query": "SELECT count(*) FROM professor where prof_high_degree = 'Ph.D.' "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "small_bank_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Find the name of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the top 3 accounts with the highest saving balance sorted by saving balance in descending order.",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Can you add in their customer IDs to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and ids of the top 3 accounts with the highest saving balance sorted by saving balance in descending order.",
                "query": "SELECT T1.name , T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What is the average balance of all accounts?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average balance of all acconts is 166751716.5",
                "query": "SELECT avg(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid "
            },
            {
                "isuser": true,
                "text": "What is the name on the account with the lowest balance?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The name of the account with the lowest saving balance is Weeks",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid order by T2.balance limit 1"
            },
            {
                "isuser": true,
                "text": "What is the name on the account with the third highest saving balance?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Brown is the name of the account that has the third highest saving balance",
                "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid order by T2.balance desc limit 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_1",
        "turns": [
            {
                "isuser": true,
                "text": "Tell me the chip model which has screen mode greater than 2.0 ? And also tell me the company name of that...",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "this shows the chip model and company name of the phone that has screen mode greater than 2.0",
                "query": "SELECT chip_model, Company_name FROM phone where screen_mode>2"
            },
            {
                "isuser": true,
                "text": "Tell me the Approved (awarded 15.11.12) of the company LG-P760...",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Sorry, I typed the question wrongly...\nWhat is the hardware model name of Lumia 620 ?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Sorry, I typed the question wrongly...\nWhat is the hardware model name of Lumia 620 ?",
                "type": "CANNOT_UNDERSTAND"
            },
            {
                "isuser": false,
                "text": "Find the accreditation level that more than 3 phones use.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Find the accreditation level that more than 3 phones use.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "joyn is the accreditation level that more than 3 phones use.",
                "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome, goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "apartment_rentals",
        "turns": [
            {
                "isuser": true,
                "text": "What are the apartment type codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows all apartment type codes.",
                "query": "SELECT apt_type_code FROM Apartments "
            },
            {
                "isuser": true,
                "text": "What are the Maximum rooms for each Apartment type code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the apartment type codes and the maximum number of rooms for each apartment type code.",
                "query": "SELECT apt_type_code ,  max(room_count) FROM Apartments GROUP BY apt_type_code"
            },
            {
                "isuser": true,
                "text": "What are the Minimum rooms for each Apartment type code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the Apartment type codes and the minimum number of rooms for each apartment type code",
                "query": "SELECT apt_type_code ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
            },
            {
                "isuser": true,
                "text": "What is the Apartment type code of building id 808? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Flat is the Apartment type code of the apartment with building id 808.",
                "query": "SELECT apt_type_code FROM Apartments where building_id = 808"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_policies",
        "turns": [
            {
                "isuser": true,
                "text": "Which claims caused more than 2 settlements? Please list the date the claim was made and the claim id?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the date when the claims were made and id of the claim that caused more than 2 settlements.",
                "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2"
            },
            {
                "isuser": true,
                "text": "Which claims had the maximum claim value? Please list the date the claim was made and the claim id?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Which claim had the highest claim value? Please list the date the claim was made and the claim id.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Which claim had the highest claim value? Please list the date the claim was made and the claim id.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the date when the claim was made and id of the claim that had the highest claim value.",
                "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id order by T1.Amount_Claimed desc limit 1"
            },
            {
                "isuser": true,
                "text": "What date was that claim made?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2017-08-03 is the date when the claim with the highest claim value was made.",
                "query": "SELECT T1.Date_Claim_made FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id order by T1.Amount_Claimed desc limit 1"
            },
            {
                "isuser": true,
                "text": "What date was that claim settled?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2018-02-18 was the date when the claim with the highest claim value was settled.",
                "query": "SELECT T1.Date_Claim_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id order by T1.Amount_Claimed desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "icfp_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you provide me with a list of the First and Last names of all authors with the last name of \"Ohori\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "there are the First and Last names of all authors with the last name of \"Ohori\".",
                "query": "SELECT fname, lname FROM authors where lname  =  \"Ohori\""
            },
            {
                "isuser": true,
                "text": "Thank you so much!  Can you please provide me with Atsushi Ohori's author ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the author named Atsushi Ohori is 57.",
                "query": "SELECT authID FROM authors where lname  =  \"Ohori\" and fname = 'Atsushi'"
            },
            {
                "isuser": true,
                "text": "Can you please provide me with a list of all paper IDs that are associated with author ID 57?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The paper id that is associated with author ID 57 is 204.",
                "query": "SELECT paperID FROM Authorship where authID = 57"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you provide me with the paper title of PaperID 204?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The title of the paper with id 204 is 'Making Standard ML a Practical Database Programming Language'.",
                "query": "SELECT title FROM Papers where paperID = 204"
            },
            {
                "isuser": true,
                "text": "Thank you!  Can you confirm that the author of 'Making Standard ML a Practical Database Programming Language' is Atsushi Ohori whose institution is located in Japan?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes! Atsushi Ohori is one of the authors whose institution is located in Japan and published the paper titled 'Making Standard ML a Practical Database Programming Language'.",
                "query": "SELECT t1.lname, t1.fname, t4.country FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t3.title = 'Making Standard ML a Practical Database Programming Language'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "formula_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello, how many drivers are there in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 842 drivers in total.",
                "query": "SELECT count(*) from drivers"
            },
            {
                "isuser": true,
                "text": "Perfect, how many drivers had 11 pit stops and participated in more than 5 total races?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no driver who had 11 pit stops and participated in more than 5 total races.",
                "query": "select count(*) from (SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5)"
            },
            {
                "isuser": true,
                "text": "Okay, which driver had the most amount of pit stops?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is no information about the pit stops. Thus we cannot find the driver who had the most amount of pit stops",
                "query": "SELECT T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid order by count(*) desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "I want to know the store chains with the largest department stores",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the department store chain that has the largest number of department stores is 4",
                "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What about the ID of the department store chain that has the second largest number of department stores?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the department store chain that has the second largest number of department stores is 3",
                "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2 except SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "OK, do you have the names of the above stores?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the store names of the stores in the store chain that has the top 2 largest number of department stores",
                "query": "SELECT store_name FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2 "
            },
            {
                "isuser": true,
                "text": "What about their store address?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the store addresses of the stores that are in the store chain that has the top 2 largest number of department stores",
                "query": "SELECT store_address FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2 "
            },
            {
                "isuser": true,
                "text": "Kindly let me know the store emails of the above stores",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the store emails of the stores in the store chain that has the top 2 largest number of department stores",
                "query": "SELECT store_email FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2 "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Docs_and_Epenses",
        "turns": [
            {
                "isuser": true,
                "text": "What are the ids of documents with the letter 's' in the name with any expense budgets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of documents with the letter 's' in the name with any expense budgets are listed.",
                "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
            },
            {
                "isuser": true,
                "text": "What are the document type codes of documents with the letter 's' in the name with any expense budgets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The document type codes of documents with the letter 's' in the name with any expense budgets are listed.",
                "query": "SELECT T1.Document_Type_Code\t FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
            },
            {
                "isuser": true,
                "text": "What are the project id of documents with the letter 's' in the name with any expense budgets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The project ids of documents with the letter 's' in the name with any expense budgets are listed.",
                "query": "SELECT T1.Project_ID\t FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
            },
            {
                "isuser": true,
                "text": "What are the ids of documents with the letter 'a' in the name with any expense budgets?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ids of documents with the letter 'a' in the name with any expense budgets are listed.",
                "query": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%a%'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_addresses",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the names of all the customers who never placed a single order?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of all the customers who never placed a single order.",
                "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
            },
            {
                "isuser": true,
                "text": "What date did they each become customers?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the date that each of the customers who never placed a single order became customers.",
                "query": "SELECT date_became_customer FROM customers where customer_name in (SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id)"
            },
            {
                "isuser": true,
                "text": "What are the names of the customers who cancelled their orders?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the list that contains the names of the customers who cancelled their orders.",
                "query": "SELECT distinct t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id where t2.order_status = \"Cancelled\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "car_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi! which countries are in europe?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of countries in Europe.",
                "query": "SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe'"
            },
            {
                "isuser": true,
                "text": "How many car manufacturers are in each of those countries?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the names of countries in Europe and the number of car manufacturers in each. For example, france has 3.",
                "query": "SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName"
            },
            {
                "isuser": true,
                "text": "which of those has at least 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of countries that have at least three car manufacturers.",
                "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
            },
            {
                "isuser": true,
                "text": "how many do each of those have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the names of countries in Europe with at least three care manufacturers and the number of care manufacturers in each. For example, France has 3.",
                "query": "SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
            },
            {
                "isuser": true,
                "text": "how many total car manufacturers does europe have?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of car manufacturers in Europe is 11.",
                "query": "SELECT count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe'"
            },
            {
                "isuser": true,
                "text": "what about america?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The total number of car manufacturers in America is 4.",
                "query": "SELECT count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'america'"
            },
            {
                "isuser": true,
                "text": "what are those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the car manufacturers in America.",
                "query": "SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'america'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "museum_visit",
        "turns": [
            {
                "isuser": true,
                "text": "Hello there!  Can you tell me the total number of visitors who did not visit any museum that was opened after 2010?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 3 visitors who did not visit any museum that was opened after 2010",
                "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)"
            },
            {
                "isuser": true,
                "text": "Can you please provide me with the names and membership levels of these three members?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and their level of memberships of the visitors who did not visit any museum that was opened after 2010",
                "query": "SELECT name, level_of_membership FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the details of all the customers please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details of all the customers are listed.",
                "query": "SELECT customer_details FROM customers "
            },
            {
                "isuser": true,
                "text": "Can you list the names of all the customers who have the letter \"B\" in their name, please?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "The details of the customers with a letter \"B\" in their customer details are listed.",
                "query": "SELECT Customer_Details FROM customers where customer_details like '%B%'"
            },
            {
                "isuser": true,
                "text": "Can you list the details and IDs of all the staff in a table, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The details and IDs of all the staff in the table are listed.",
                "query": "SELECT Staff_ID,Staff_Details from staff"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Do you mean the details of the customers with a letter \"B\" in their customer details?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "local_govt_and_lot",
        "turns": [
            {
                "isuser": true,
                "text": "How many things are there with status \"close\"?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 7 things with status of thing code \"close\".",
                "query": "select count(*) as num from Timed_Status_of_Things where \tStatus_of_Thing_Code = 'Close'"
            },
            {
                "isuser": true,
                "text": "What is their distinct id and type?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the distinct id and type of the things with the status of thing code 'Close'",
                "query": "SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close'"
            },
            {
                "isuser": true,
                "text": "Which ones have status record before the date '2017-06-19 02:59:21' ?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": true,
                "text": "* I have left the chat *",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table that shows thing IDs and type of thing codes for the record before the date '2017-06-19 02:59:21'.",
                "query": "SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' and T1.Date_and_Date < '2017-06-19 02:59:21'"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cinema",
        "turns": [
            {
                "isuser": true,
                "text": "How many movie theatres have a capacity of at least 300 people?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 7 movie theaters with a capacity of at least 300 people.",
                "query": "SELECT count(*) FROM cinema WHERE capacity  >=  300"
            },
            {
                "isuser": true,
                "text": "What are their names?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the movie movie theaters with a capacity of at least 300 people are shown in the table.",
                "query": "SELECT name FROM cinema WHERE capacity  >=  300"
            },
            {
                "isuser": true,
                "text": "What are their specific locations?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The locations of movie theaters with a capacity of at least 300 people are listed in the table.",
                "query": "SELECT LOCATION FROM cinema WHERE capacity  >=  300"
            },
            {
                "isuser": true,
                "text": "Which theatre has the largest capacity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the cinema with the largest capacity.",
                "query": "SELECT * FROM cinema order by capacity desc limit 1"
            },
            {
                "isuser": true,
                "text": "Which year was Codling open?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "2010 is the opening year of the cinema named Codling.",
                "query": "SELECT openning_year FROM cinema where name = \"Codling\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_and_products_contacts",
        "turns": [
            {
                "isuser": true,
                "text": "What was the product id for the customer that ordered the most product quantity?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer id for the customer with the most ordered product quantity is 10.",
                "query": "SELECT  T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the name and phone of the customer with the most ordered product quantity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name and phone of the customer with the most ordered product quantity are Cleo and 1-202-928-5395 respectively.",
                "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the address for the customer Cleo?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer address for customer name cleo is 91702 Hilpert Pines Suite 177",
                "query": "SELECT customer_address FROM customers WHERE customer_name = \"Cleo\""
            },
            {
                "isuser": true,
                "text": "What is the email for Customer name of Cleo with phone number 1-202-928-5395?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The email for Customer name of Cleo with phone number 1-202-928-5395 is xrosenbaum@example.org",
                "query": "SELECT customer_email FROM customers WHERE customer_name = \"Cleo\" AND customer_phone = \"1-202-928-5395\""
            },
            {
                "isuser": true,
                "text": "What is the customer number for customer name Cleo?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The customer number for customer name Cleo is 795",
                "query": "SELECT customer_number FROM customers WHERE customer_name = \"Cleo\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome! BYE BYE",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "roller_coaster",
        "turns": [
            {
                "isuser": true,
                "text": "what is the country name?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "what are the country names which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "what are the country names which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " Austria is the name of the country which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55.",
                "query": "SELECT T1.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55"
            },
            {
                "isuser": true,
                "text": "what are the country id ?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes!",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The  country ID which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55 is 1",
                "query": "SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55"
            },
            {
                "isuser": true,
                "text": "how about is the status operate in country?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hospital_1",
        "turns": [
            {
                "isuser": true,
                "text": "Find the patient order by the date they underwent treatment. Recent first.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the patients ordered by the date they underwent treatment. Recent treatment shows up first.",
                "query": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC"
            },
            {
                "isuser": true,
                "text": "Only show the first result.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the first result of the information about the patients ordered by the date they underwent treatment. Recent treatment shows up first.",
                "query": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "twitter_1",
        "turns": [
            {
                "isuser": true,
                "text": "Show me all the users.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names of all the users.",
                "query": "SELECT name FROM user_profiles"
            },
            {
                "isuser": true,
                "text": "Which of these users have more than one tweet?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the names of users that have more than 1 tweet.",
                "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Show me the number of tweets for each of these users.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name of each user and their number of tweets. For example, Iron Man has 2 tweets.",
                "query": "SELECT T1.name, count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "what instructors teach courses?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, the first names of all instructors who teach courses,",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, the first names of all instructors who teach courses,",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "The following table shows the first names of all instructors who teach courses.",
                "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
            },
            {
                "isuser": true,
                "text": "Great. I need to know which first name of the instructor goes with each class and class description.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the first names of all instructors who teach courses and the course descriptions.",
                "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
            },
            {
                "isuser": true,
                "text": "great, I also need to know the first name of each instructor with the course name, and where their office is located.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the first names of all instructors who teach courses, their offices, and the course descriptions. ",
                "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cinema",
        "turns": [
            {
                "isuser": true,
                "text": "what is the total number of showtimes at each cinema?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the name and total number of show times per day for each cinema. For example, Codling has 10 show times per day.",
                "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id"
            },
            {
                "isuser": true,
                "text": "what cinema has the most showings in one day?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the cinema that has the most show times per day is Codling.",
                "query": "SELECT T2.name FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What cinema has the highest capacity?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the cinema with highest capacity is Codling.",
                "query": "SELECT Name FROM cinema ORDER BY Capacity DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "what cinema is in Cork county?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the cinema in County Cork is Carrowleagh.",
                "query": "SELECT Name FROM cinema WHERE Location = \"County Cork\""
            },
            {
                "isuser": true,
                "text": "Thanks!\n",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "singer",
        "turns": [
            {
                "isuser": true,
                "text": "which singers were born before 1945?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are all the info of the singers were born before 1945.",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945"
            },
            {
                "isuser": true,
                "text": "how about after 1955?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are all the info of the singers were born after 1955. ",
                "query": "SELECT * FROM singer WHERE Birth_Year  >  1955"
            },
            {
                "isuser": true,
                "text": "which singers born before 1945 have the same citizenship?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "No singers born before 1945 have the same citizenship.",
                "query": "SELECT * FROM singer WHERE Birth_Year < 1945"
            },
            {
                "isuser": true,
                "text": "which singers born after 1955 have the same citizenship?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The same. No singers born after 1955 have the same citizenship.",
                "query": "SELECT * FROM singer WHERE Birth_Year > 1955"
            },
            {
                "isuser": true,
                "text": "which singers born before 1945 and after 1955 have the same citizenship?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "what is the citizenship of the singers born before 1945?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "what is the citizenship of the singers born before 1945?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the citizenships of the singers born before 1945 are France, Chile, and United States.",
                "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945"
            },
            {
                "isuser": true,
                "text": "and after 1955?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the citizenships of the singers born before 1945 or after 1955. ",
                "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955"
            },
            {
                "isuser": true,
                "text": "Which singers with a citizenship of United States were born before 1945?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the singer born before 1945 and with citizenship of the United States.",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship = 'United States'"
            },
            {
                "isuser": true,
                "text": "and after 1955\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the singers with citizenship of the United States born before 1945 or after 1955,",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship = 'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship = 'United States'"
            },
            {
                "isuser": true,
                "text": "Which singers with a citizenship of France were born before 1945?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the singer born before 1945 and with citizenship of France.",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship = 'France'"
            },
            {
                "isuser": true,
                "text": "and after 1955?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the singers with citizenship of France born before 1945 or after 1955,",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship = 'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship = 'France'"
            },
            {
                "isuser": true,
                "text": "Which singers with a citizenship of Chile were born before 1945 or after 1955?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There is all the info of the singer with citizenship of Chile was born before 1945 or after 1955,",
                "query": "SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship = 'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship = 'Chile'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "decoration_competition",
        "turns": [
            {
                "isuser": true,
                "text": "Please show the names of all members who go to Saskatchewan School",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of members whose college name is Saskatchewan School are Jack Nicklaus and Billy Casper.",
                "query": "SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T1.Name = 'Saskatchewan School'"
            },
            {
                "isuser": true,
                "text": "Now please show the names of all members, and the locations of the colleges they go to\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the results for all member names and the corresponding college locations.",
                "query": "SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID"
            },
            {
                "isuser": true,
                "text": "now can you show the those same results, but ordered in ascending order of member names",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the results for all member names and the corresponding college locations in ascending order of member names.",
                "query": "SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you! Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "activity_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you please list all the ranks and the number of male faculty members for those ranks?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the ranks and the number of male faculty for each rank. For example, AssocProf has 7 male faculty members.",
                "query": "SELECT rank ,  sex ,  count(*) FROM Faculty WHERE sex = \"M\" GROUP BY rank ,  sex"
            },
            {
                "isuser": true,
                "text": "Can you add the number of female faculty members for each of the ranks to the table please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the ranks and the number of male and female faculty for each rank. For example, AssocProf has 1 female and 7 male faculty members.",
                "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
            },
            {
                "isuser": true,
                "text": "Are there more male faculty members or female faculty members?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "There are 51 male faculty members and 7 female faculty members, so there are more male faculty members.",
                "query": "SELECT count(*) FROM Faculty WHERE Sex = \"M\" UNION SELECT count(*) FROM Faculty WHERE Sex = \"F\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hi, what is the population of the Caribbean?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The sum of the populations of Caribbean countries is 38140000.",
                "query": "SELECT sum(Population) FROM country WHERE Region = \"Caribbean\""
            },
            {
                "isuser": true,
                "text": "What continents have an average life expectancy shorter than 72?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The continents with average life expectancies shorter than 72 are Africa, Asia, Oceania, and South America.",
                "query": "SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
            },
            {
                "isuser": true,
                "text": "Can you give me the total population for each of those continents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the total populations for the continents with an average life expectancy shorter than 72.  For example, Africa has a population of 784475000.",
                "query": "SELECT sum(Population),  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
            },
            {
                "isuser": true,
                "text": "What is the average life expectancy of those continents?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the average life expectancies for the continents with an average life expectancy shorter than 72.  For example, Africa has an average life expectancy of 52.571929824561394.",
                "query": "SELECT avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
            },
            {
                "isuser": true,
                "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the average life expectancies and total populations for continents having an average life expectancy shorter than 72.  For example, Africa has a population of 784475000 and a life expectancy of 52.571929824561394.",
                "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you. Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "wine_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the name of the grape whose wine products had the highest average price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the grape whose wine products had the highest average price is \"Roussanne\".",
                "query": "SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the color of that grape?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The color of the grape whose wine products had the highest average price is white.",
                "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is the color of the grape whose wine products had the lowest average price?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The color of the grape whose wine products had the lowest average price is red.",
                "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thank you!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "riding_club",
        "turns": [
            {
                "isuser": true,
                "text": "Which coach has been at the school longer?",
                "type": "CANNOT_ANSWER"
            },
            {
                "isuser": false,
                "text": "Which coach started in 2010?\n",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Which coach started in 2010?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The coaches with IDs 1 and 5 started in 2010.",
                "query": "SELECT Coach_ID from player_coach where starting_year = 2010"
            },
            {
                "isuser": true,
                "text": "What are the names of the coaches that started in 2010?\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the coaches that started in 2010 are Jameson Tomas and Smith Brown.",
                "query": "SELECT coach_name from coach as t1 join player_coach as t2 on t1.coach_id = t2.coach_id where starting_year = 2010"
            },
            {
                "isuser": true,
                "text": "What are the names of the players who were coached by Jameson Tomas?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the players who were coached by Jameson Tomas.",
                "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID where t2.coach_name = \"Jameson Tomas\""
            },
            {
                "isuser": true,
                "text": "What are the names of the players who were coached by Smith Brown?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Rachel Heinrichs is the player coached by Smith Brown.",
                "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID where t2.coach_name = \"Smith Brown\""
            },
            {
                "isuser": true,
                "text": "What is the name of the coach who started in 2011?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the coaches who started in 2011.",
                "query": "SELECT T1.Coach_name FROM coach AS T1 JOIN player_coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID where T2.Starting_year = 2011"
            },
            {
                "isuser": true,
                "text": "What are the names of the players who were coached by Robert Chen?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the names of the players who were coached by Robert Chen.",
                "query": "SELECT T3.player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID where T2.coach_name = \"Robert Chen\""
            },
            {
                "isuser": true,
                "text": "What are the names of the coaches from 2012?",
                "type": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "products_gen_characteristics",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you please show me a list of all of the product names and their associated product IDs?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of all the product names and their associated product ids. For example, the id of cumin is 1.",
                "query": "SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code"
            },
            {
                "isuser": true,
                "text": "Thank you very much!  Can you filter this list to show only the item with the product id of 11, and show me the associated product category code?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The product name of the product with id 11 is chervil and its product category code is Herbs",
                "query": "SELECT t1.product_id,t1.product_name,t1.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code where t1.product_id =11"
            },
            {
                "isuser": true,
                "text": "Thank you very much!  Can you update this to display the product category code, product category description, and unit of measure?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the product category code, product category description, and unit of measure of the product with id 11.",
                "query": "SELECT t2.product_category_code,t2.product_category_description, t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code where t1.product_id =11"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "university_basketball",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show me which school is founded most recently?   ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The university that was founded most recently is shown in the result table. ",
                "query": "SELECT * FROM university order by founded desc LIMIT 1"
            },
            {
                "isuser": true,
                "text": "How about the school that's the oldest? ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The university that was founded first is shown in the result table. ",
                "query": "SELECT * FROM university order by founded LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Can you please also include its acc regular season score?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The acc regular season score, and university details of the university that was founded first are shown in the result table. ",
                "query": "SELECT t2.ACC_Regular_Season, t1.* FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id order by t1.founded LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_2",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show all rooms with a capacity larger than 50?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows information about rooms with a capacity larger than 50.",
                "query": "SELECT * FROM classroom WHERE capacity  >  50 "
            },
            {
                "isuser": true,
                "text": "Can you display only the number of rooms currently in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the number of rooms of all classrooms with a capacity larger than 50.",
                "query": "SELECT room_number FROM classroom WHERE capacity  >  50 "
            },
            {
                "isuser": true,
                "text": "How many unique room numbers are currently in the table?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 11 unique room numbers among all rooms with a capacity larger than 50",
                "query": "SELECT count(distinct room_number) FROM classroom WHERE capacity  >  50 "
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "city_record",
        "turns": [
            {
                "isuser": true,
                "text": "Which cities are host cities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The  host  cities  are  shown   in the table",
                "query": "SELECT T1.city FROM city AS T1 JOIN  hosting_city AS T4 ON T1.city_id  =  T4.host_city"
            },
            {
                "isuser": true,
                "text": "Okay, which cities have not hosted? \n ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The cities that have not hosted are shown  in the table ",
                "query": "SELECT city  FROM city  where  City_ID  not  in ( select  Host_City from hosting_city)"
            },
            {
                "isuser": true,
                "text": "Great! Out of those cities, which ones have temperatures lower in March compared to their December temperature? ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Hangzhou ( Zhejiang ) and Nantong ( Jiangsu ) are cities that never hosted and have temperatures lower in March compared to their December temperature",
                "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city"
            },
            {
                "isuser": true,
                "text": "Fantastic! Between Hangzhou and Nantong, which city has the cooler weather? ",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Oh, sorry! Yes, which city has the lowest temperature in March? ",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Oh, sorry! Yes, which city has the lowest temperature in March? ",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "They  are  the  same  as 19.4,The temperature of Hangzhou and Nantongin March  are  shown  in the table ",
                "query": "SELECT T2.Mar,T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.City=\"Hangzhou ( Zhejiang )\"  or T1.City=\"Nantong ( Jiangsu )\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "welcome  and  bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "college_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the first name and last name of the youngest student whose GPA is above 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first name and last name for the youngest student whose GPA is above 3 is Anne\tSmithson.",
                "query": "SELECT stu_fname ,  stu_lname  FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What is her GPA?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the gpa the youngest student whose GPA is above 3 is for 3.27",
                "query": "SELECT stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "What are the full name and GPA of the oldest student whose GPA is below 3?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The full name of the oldest student whose GPA is below 3 is John Smith and his GPA is 2.11",
                "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  <  3 ORDER BY stu_dob ASC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "That's all, thanks! Have a great night!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "That's all, thanks! Have a great night!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You too! Bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "Do any states have owners living there?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, they do. Here is the result table of the states that have owners living there. For example, one of them is Wisconsin.",
                "query": "SELECT state FROM Owners"
            },
            {
                "isuser": true,
                "text": "Which states have professionals living there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the states that have professionals living there. For example, one of them is Indiana.",
                "query": "SELECT state FROM Professionals"
            },
            {
                "isuser": true,
                "text": "May I have a list of states that has both owners and professionals living there?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the states that have both owners and professionals living there. For example, one of them is Mississippi.",
                "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "dog_kennels",
        "turns": [
            {
                "isuser": true,
                "text": "List the first name of professionals",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the first names of all the professionals.",
                "query": "SELECT DISTINCT first_name FROM professionals "
            },
            {
                "isuser": true,
                "text": "List the first name of professionals along with the description",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first names of all professionals with the description of their treatment. ",
                "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
            },
            {
                "isuser": true,
                "text": "List the first name of professionals along with the description of the treatment they have done?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a table of the first name of all professionals along with the description of the treatment they have done. ",
                "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Docs_and_Epenses",
        "turns": [
            {
                "isuser": true,
                "text": "Show the document name and the document date for all documents on project with details 'Graph Database project'",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the document name and the document date for all documents on project with details 'Graph Database project'. For example, one of the document name and the document date is Review on Canadian files, 2012-12-27 19:09:18.",
                "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'"
            },
            {
                "isuser": true,
                "text": "Which of those documents is the oldest?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Give me the document name from those documents that has the earliest document date.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Give me the document name from those documents that has the earliest document date.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Chapter on private files is the name of the document with the earliest document date on a project with details 'Graph Database project'.",
                "query": "SELECT document_name FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project' order by document_date limit 1"
            },
            {
                "isuser": true,
                "text": "What is its document date?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "1970-01-30 10:53:35 is the date of the document with the earliest document date on a project with details 'Graph Database project'.",
                "query": "SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project' order by document_date limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "What is the average price of all products?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The average price of all the products is 747.7386666666666.",
                "query": "SELECT avg(product_price) FROM products"
            },
            {
                "isuser": true,
                "text": "Find the product type whose average price is higher than the average price of all products.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": " the product type code of the product with the average price is higher than the average price of all products is Hardware.",
                "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "What is the product name of that?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the products whose product type has an average price higher than the average price of all products",
                "query": "SELECT product_name FROM products where product_type_code = (SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products))"
            },
            {
                "isuser": true,
                "text": "Find the product type whose average price is lower than the average price of all products.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the product type code of the product with the average price is lower than the average price of all products is Clothes.",
                "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  <  (SELECT avg(product_price) FROM products)"
            },
            {
                "isuser": true,
                "text": "What are the product names?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names of the products whose product type has an average price lower than the average price of all products",
                "query": "SELECT product_name FROM products where product_type_code = (SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg(product_price)  <  (SELECT avg(product_price) FROM products))"
            },
            {
                "isuser": true,
                "text": "What are the prices of them?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the prices of the products whose product type has an average price lower than the average price of all products",
                "query": "SELECT product_price FROM products where product_type_code = (SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg(product_price)  <  (SELECT avg(product_price) FROM products))"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "hr_1",
        "turns": [
            {
                "isuser": true,
                "text": "Display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The employee ids and job ids  for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN are listed in the result table. One example is employee id 103 and job id IT_PROG.",
                "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"
            },
            {
                "isuser": true,
                "text": "Show me salaries for those employees",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The salaries for those employees whose salary is smaller than any salary of those employees whose job title is MK_MAN are listed. They are 9000, 6000, and so on.",
                "query": "SELECT salary FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"
            },
            {
                "isuser": true,
                "text": "Give me names for those employees",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Thanks!",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "No problem, bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "aircraft",
        "turns": [
            {
                "isuser": true,
                "text": "plese list me about airports\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, I just needs the name of aircrafts in airports",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, I just needs the name of aircrafts in airports",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of aircrafts in all the airports are listed.",
                "query": "SELECT Aircraft FROM aircraft"
            },
            {
                "isuser": true,
                "text": "Show me the name of aircraft assosciated with london heathrow and london gatwick airport\n",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Sorry, none of the aircraft in the table is associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\".",
                "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "customers_campaigns_ecommerce",
        "turns": [
            {
                "isuser": true,
                "text": "Show the shipping charge and customer id for customer orders with order status \"Cancelled\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The shipping charge and customer id for customer orders with order status \"Cancelled\"  are  shown     in the table",
                "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' "
            },
            {
                "isuser": true,
                "text": "Show the shipping charge and customer id for customer orders with order status \"Paid\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The shipping charge and customer id for customer orders with order status \"Paid\"    are  shown in the table.",
                "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code = 'Paid'"
            },
            {
                "isuser": true,
                "text": "Show the shipping method code for customer orders with order status \"Paid\"",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The shipping method code for customer orders with order status \"Paid\" are  shown  in  the  table ",
                "query": "SELECT shipping_method_code  FROM customer_orders WHERE order_status_code = 'Paid'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Welcome and goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "store_1",
        "turns": [
            {
                "isuser": true,
                "text": "Yes",
                "type": "AFFIRM"
            },
            {
                "isuser": true,
                "text": "Hello. Can you give me the state in the US with most invoices?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here is the state in the USA with the most invoices",
                "query": "SELECT billing_state  FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"
            },
            {
                "isuser": true,
                "text": "Can you give me the billing cities for these invoices?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "here are the billing cities of the invoices from the state in the USA with the most invoices",
                "query": "SELECT DISTINCT billing_city FROM invoices WHERE billing_state = (SELECT billing_state FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1);"
            },
            {
                "isuser": true,
                "text": "How about postal codes for these invoices?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the billing postal codes of the invoices from the state in the USA with the most invoices",
                "query": "SELECT DISTINCT billing_postal_code FROM invoices WHERE billing_state = (SELECT billing_state FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1);"
            },
            {
                "isuser": true,
                "text": "Can you give me the billing dates as well?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, date of invoice please",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, date of invoice please",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "here are the invoice dates of the invoices from the state in the US with the most invoices",
                "query": "SELECT DISTINCT invoice_date FROM invoices WHERE billing_state = (SELECT billing_state FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1);"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "GOOD_BYE"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "Show the role description of the project staff involved in the most number of project outcomes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The role description of the project staff involved in the most number of project outcomes is \"Project Researcher\".",
                "query": "SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show the role code of the project staff involved in the most number of project outcomes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "\"Researcher\" is the role code of the project staff involved in the most number of project outcomes",
                "query": "SELECT T1.role_code FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Show me other details of the project staff involved in the most number of project outcomes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Other details of project staff involved in most number of project outcomes is NULL",
                "query": "SELECT T2.other_details FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_management",
        "turns": [
            {
                "isuser": true,
                "text": "Can you list the states where the secretaries of the Treasury department were born?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the states where the secretaries of the Treasury department were born.",
                "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury'"
            },
            {
                "isuser": true,
                "text": "Can you list the states where the secretaries of the Homeland Security department were born?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "California is the state where  the secretaries of the Homeland Security department were born.",
                "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'"
            },
            {
                "isuser": true,
                "text": "Are there any states where both the secretaries of the Treasury department and the secretaries of the Homeland Security department were born?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. California is the state where both the secretaries of the Treasury department and the secretaries of the Homeland Security department were born",
                "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'"
            },
            {
                "isuser": true,
                "text": "What departments employ more than 100,000 employees?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the information about the departments with more than 100000 employees.",
                "query": "select * from department where num_employees > 100000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "bike_1",
        "turns": [
            {
                "isuser": true,
                "text": "What are the station ids for San Francisco?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes.",
                "type": "AFFIRM"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the station ids for San Francisco. For example, one of them is 39.",
                "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" "
            },
            {
                "isuser": true,
                "text": "Which of these have bikes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the station ids which have bikes for San Francisco. For example, one of them is 39.",
                "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status where bikes_available  >  0"
            },
            {
                "isuser": true,
                "text": "Which of these have an average bike availability above 10?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the result table of the station ids which have an average bike availability above 10. For example, one of them is 45.",
                "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_grants_for_research",
        "turns": [
            {
                "isuser": true,
                "text": "hi. can you tell me which product made the highest number of outcomes?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "I would like to know the most number of outcomes for all outcome codes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "I would like to know the most number of outcomes for all outcome codes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The outcome code with the highest number of outcomes has 10 instances. ",
                "query": "SELECT count(outcome_code) from project_outcomes group by outcome_code order by count(outcome_code) desc limit 1"
            },
            {
                "isuser": true,
                "text": "can you give me the project ID?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "the project that had the highest number of outcomes",
                "query": ""
            },
            {
                "isuser": true,
                "text": "the project that had the highest number of outcomes",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The project id for the project that had the highest number of outcomes is 7.",
                "query": "SELECT T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "and can you please also give me the project details?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The project details and project id for the project that had the highest number of outcomes are shown in the result table. ",
                "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_injury",
        "turns": [
            {
                "isuser": true,
                "text": "How many injury accidents are there in total?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are 15 injury accidents",
                "query": "SELECT count(*) from injury_accident"
            },
            {
                "isuser": true,
                "text": "Can you list them with the date  of the game and the name of the player who got injured?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dates of the games and the names of the players who got injured",
                "query": "SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id"
            },
            {
                "isuser": true,
                "text": "Can you please also sort thw result by decending order of game seasons?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is a list of the dates of the games and the names of the players who got injured. The list is sorted  by decending order of game seasons",
                "query": "SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id ORDER BY T1.season DESC"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "movie_1",
        "turns": [
            {
                "isuser": true,
                "text": "Please show me the names and years of the movies that has the top 3 highest rating stars",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the titles and years of the movies that have the top 3 highest rating stars,",
                "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Can you show me the director names together with the name and years?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes, director names, movie names and years please.",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes, director names, movie names and years please.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the directors, titles, and years of the movies that have the top 3 highest rating stars.",
                "query": "SELECT T2.title ,  T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Please give me the same information for the movies that have the 3 lowest rating stars.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result shows the directors, titles, and years of the movies that have the 3 lowest rating stars.",
                "query": "SELECT T2.title ,  T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "ship_mission",
        "turns": [
            {
                "isuser": true,
                "text": "show names of ships involved in a mission launched after 1928.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The names of the ships involved in a mission launched after 1928 are shown in the table. ",
                "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
            },
            {
                "isuser": true,
                "text": "which ships were lost?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The ships that were lost are shown in the result table. ",
                "query": "SELECT T2.* FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Fate Like \"%Lost%\""
            },
            {
                "isuser": true,
                "text": "which among them was the biggest?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Of the ships that were lost, the ship with the greatest tonnage is shown in the result table. ",
                "query": "SELECT T2.* FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Fate Like \"%Lost%\" order by T2.tonnage desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "network_2",
        "turns": [
            {
                "isuser": true,
                "text": "Find the name and age of the person who is a friend of both Dan and Alice.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "the name and age of the person who is a friend of both Dan and Alice are shown in the table.",
                "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"
            },
            {
                "isuser": true,
                "text": "Find the name and age of the person who is a friend of both Dan and Zach",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There isn't a person who is a friend of both Dan and Zach.",
                "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach'"
            },
            {
                "isuser": true,
                "text": "Find the name and age of the person who is a friend of both Dan and Bob.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There isn't a person who is a friend of both Dan and Bob .",
                "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"
            },
            {
                "isuser": true,
                "text": "Find the name and age of the person who is a friend of both Bob and Zach.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There isn't a person who is a friend of both Bob and Zach.",
                "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "tracking_share_transactions",
        "turns": [
            {
                "isuser": true,
                "text": "What are the dates of transactions with amount smaller than 3000?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here is the table of dates of transcation with amount smaller than 3000. For example, it is on 1982-06-06 17:19:00.",
                "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
            },
            {
                "isuser": true,
                "text": "What are the sale details of those?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the table of the sale details of transcation with an amount smaller than 3000. For example, they are o\uff0cf, y",
                "query": "SELECT T1.sales_details  FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
            },
            {
                "isuser": true,
                "text": "What are the transaction ids of those?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the table of the transaction ids of transcation with an amount smaller than 3000. For example, they are  2, 4 , 5",
                "query": "SELECT T2.transaction_id FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
            },
            {
                "isuser": true,
                "text": "What are the transaction type codes of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The transaction type codes of transcation with an amount smaller than 3000 are PUR  and SALE",
                "query": "SELECT T2.transaction_type_code FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
            },
            {
                "isuser": true,
                "text": "What are the dates of those transactions?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Here is the table of dates of transcations with an amount smaller than 3000. For example, they are 1982-06-06 17:19:00.",
                "query": "SELECT distinct T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "phone_1",
        "turns": [
            {
                "isuser": true,
                "text": "What is the hardware model name for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The following table shows the hardware model name for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.",
                "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"
            },
            {
                "isuser": true,
                "text": "What are the pixels of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The pixels for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text are shown in the following table.",
                "query": "SELECT DISTINCT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"
            },
            {
                "isuser": true,
                "text": "What are the char cells of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The char cells for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text are shown in the following table.",
                "query": "SELECT DISTINCT T1.char_cells FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"
            },
            {
                "isuser": true,
                "text": "What are the used kb of those?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The used kb for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text are shown in the following table.",
                "query": "SELECT DISTINCT T1.used_kb FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "restaurant_1",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you provide me with the time spent in all restaurants by Linda Smith?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The time that Linda Smith spends in restaurants is 6.53.",
                "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";"
            },
            {
                "isuser": true,
                "text": "Are there any other students with the same city code as Linda Smith?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes, the student information of the students with the same city code as Linda Smith are listed in result table.",
                "query": "SELECT * FROM Student where city_code = (select city_code from student where Fname = \"Linda\" AND Lname = \"Smith\") and Fname != \"Linda\" AND Lname != \"Smith\""
            },
            {
                "isuser": true,
                "text": "Of those three students, can you tell me which of them have more time spent in restaurants than Linda Smith?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "None of the students have more time spent than in restaurants than Linda Smith. ",
                "query": "SELECT T1.StuID, sum(T2.Spent) FROM Student AS T1 JOIN Visits_Restaurant AS T2 where city_code = (select city_code from student where Fname = \"Linda\" AND Lname = \"Smith\") and Fname != \"Linda\" AND Lname != \"Smith\" GROUP BY T1.StuID HAVING sum(T2.Spent) > (SELECT sum(Spent) FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID WHERE T1.Fname = \"Linda\" AND T1.Lname = \"Smith\")"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "shop_membership",
        "turns": [
            {
                "isuser": true,
                "text": "What are the names for the top three branches with most number of membership?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names for top three branches with most number of membership",
                "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What year did they open?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and corresponding open yeras for top three branches with most number of membership ",
                "query": "SELECT name, open_year FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "What are their cities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and corresponding cities for top three branches with most number of membership",
                "query": "SELECT name, city FROM branch ORDER BY membership_amount DESC LIMIT 3"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thanks. bye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "allergy_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you get me the first names of students that have a milk allergy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The first names of the students that have milk allergies are shown in the result table. ",
                "query": "SELECT DISTINCT T1.fname  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" "
            },
            {
                "isuser": true,
                "text": "Can you list the cities of these students?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Yes. Can you please provide both simultaneously?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Yes. Can you please provide both simultaneously?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The cities and first names of the students that have milk allergies are shown in the result table. ",
                "query": "SELECT DISTINCT T1.city_code, T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" "
            },
            {
                "isuser": true,
                "text": "Can you add the first names of the students with a cat allergy, as well?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The cities and first names of the students that have milk allergies or cat allergies are shown in the result table.",
                "query": "SELECT DISTINCT T1.city_code, T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" or T2.Allergy  =  \"Cat\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "Thank you, good bye. ",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "manufactory_1",
        "turns": [
            {
                "isuser": true,
                "text": "Can you show the Name of the Products of Code 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The name of the product code 1 is Hard Drive.",
                "query": "SELECT Name FROM Products WHERE Code=1"
            },
            {
                "isuser": true,
                "text": "Can you show the Price of the Product Code 1?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. This is the price of the product with product code 1.",
                "query": "SELECT Price FROM Products WHERE Code=1"
            },
            {
                "isuser": true,
                "text": "Can you show the number of different products that are produced by companies at different headquarter cities?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Yes. This is the number of different products that are produced by companies at different headquarter cities.",
                "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "insurance_and_eClaims",
        "turns": [
            {
                "isuser": true,
                "text": "Hello!  Can you provide me with a list of all customer ids and their associated policy type codes?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are all customer ids and their associated policy type codes",
                "query": "select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id"
            },
            {
                "isuser": true,
                "text": "Great!  Can you update this list to include the customer details values for each customer_ID?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are all the customer ids, policy type codes, and customer details of the customers with policies",
                "query": "select t2.Customer_ID, t1.Policy_Type_code, t2.Customer_Details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id"
            },
            {
                "isuser": true,
                "text": "Awesome! Can you filter this list to show only the customer IDs  and customer names associated with either a deputy policy or an uninformed policy?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "here are the customer IDs and customer names of customers with either a deputy policy or an uninformed policy",
                "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "you are welcome goodbye",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "battle_death",
        "turns": [
            {
                "isuser": true,
                "text": "Show the names of all the battles. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are  the names of all the battles",
                "query": "SELECT name  FROM battle"
            },
            {
                "isuser": true,
                "text": "Show the names of all the battles and their Bulgarian commanders.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are  the names of all the battles and their Bulgarian commanders",
                "query": "SELECT name, bulgarian_commander FROM battle"
            },
            {
                "isuser": true,
                "text": "Show the names of all the battles with no ships lost in the English Channel.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are  the names of all the battles with no ships lost in the English Channel",
                "query": "SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'"
            },
            {
                "isuser": true,
                "text": "Show the names and results of all battles with no ships lost in the English channel.",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names and results of all battles with no ships lost in the English channel",
                "query": "SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'"
            },
            {
                "isuser": true,
                "text": "Show the names,results, and Bulgarian commanders of all battles with no ships lost in the English channel.\n",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the names,results, and Bulgarian commanders of all battles with no ships lost in the English channel",
                "query": "SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'\n\n"
            },
            {
                "isuser": true,
                "text": "What are the dates of all the battles with the result of Bulgarian victory. ",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "Here are the dates of all the battles with the result of Bulgarian victory",
                "query": "SELECT date FROM battle WHERE result = \"Bulgarian victory\"\n\n"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "bye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "game_injury",
        "turns": [
            {
                "isuser": true,
                "text": "What game id did the player Walter Samuel get injured during, please?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The game id of the player named Walter Samuel got injured during is 6.",
                "query": "SELECT  game_id FROM injury_accident where Player = 'Walter Samuel'"
            },
            {
                "isuser": true,
                "text": "What season was that game in?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The game which causes the player 'Walter Samuel' to get injured was in the season 2008.",
                "query": "SELECT Season from game as T1 where T1.id = (select game_id from injury_accident where Player = 'Walter Samuel')"
            },
            {
                "isuser": true,
                "text": "What was the date of that game?",
                "type": "INFER_SQL"
            },
            {
                "isuser": false,
                "text": "The date of the game which causes the player 'Walter Samuel' to get injured is October 31th, 2008.",
                "query": "SELECT Date from game as T1 where T1.id = (select game_id from injury_accident where Player = 'Walter Samuel')"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome. Goodbye.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "cre_Theme_park",
        "turns": [
            {
                "isuser": true,
                "text": "Hello! Can you provide me with a list of the tourist attractions that are walking distance?",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "Ah yes!  For now could you please return both the tourist attraction id and the name?",
                "query": ""
            },
            {
                "isuser": true,
                "text": "Ah yes!  For now could you please return both the tourist attraction id and the name?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names and ids of the tourist attractions where can get there by walk.",
                "query": "SELECT Name, Tourist_Attraction_ID FROM Tourist_Attractions WHERE How_to_Get_There  =  \"walk\""
            },
            {
                "isuser": true,
                "text": "Thank you could you also add to this list any tourist attractions located at 660 Shea Crescent?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "There are the names and ids of the tourist attractions where can get there by walk or whose address is 660 Shea Crescent.",
                "query": "SELECT T2.Name, t2.Tourist_Attraction_ID FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""
            },
            {
                "isuser": true,
                "text": "Thank you very much!  Could you add the Opening Hours to that list for each of the tourist attractions?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "You are welcome! There are the names, ids, and Opening Hours of the tourist attractions where can get there by walk or whose address is 660 Shea Crescent. ",
                "query": "SELECT T2.Name, t2.Tourist_Attraction_ID, t2.Opening_Hours FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "goodbye!",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "department_store",
        "turns": [
            {
                "isuser": true,
                "text": "Hi there!  Can you provide me with a list of all Staff Department Assignments \"date assigned to\" values?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The date assigned to values in table Staff Department Assignments are listed.",
                "query": "SELECT date_assigned_to  from Staff_Department_Assignments "
            },
            {
                "isuser": true,
                "text": "Thank you!  Now I realize that I should probably be asking for the date assigned from values... Therefore, can you provide me with a list of all staff IDs and their corresponding \"date assigned from\" values?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The result table of the staff ids and the dates that they are assigned from is shown.",
                "query": "SELECT staff_id, date_assigned_from  from Staff_Department_Assignments "
            },
            {
                "isuser": true,
                "text": "Thank you for that!  Can you please filter this list to show only the row of the staff member who has the most recent date_assigned_from value?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The id of the staff member that was most recent assigned is 1 and the date the staff was assigned from is 2018-02-14 03:15:29.",
                "query": "SELECT staff_id, date_assigned_from  from Staff_Department_Assignments order by date_assigned_from desc limit 1"
            },
            {
                "isuser": true,
                "text": "Thank you!  Could you please display the name and job title of this staff person?",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "The staff name and job title code of staff id i are Tom and Clerical Staff.",
                "query": "SELECT staff_name,job_title_code from Staff_Department_Assignments as T1 join Staff as T2 on T1.staff_id = T2.staff_id where T1.staff_id = '1'"
            },
            {
                "isuser": true,
                "text": "Thanks!",
                "type": "THANK_YOU"
            },
            {
                "isuser": false,
                "text": "You are welcome.",
                "query": ""
            }
        ]
    },
    {
        "goal_question": "originCosql",
        "evidence": "nan",
        "db_name": "world_1",
        "turns": [
            {
                "isuser": true,
                "text": "what are the official unique official language spoken in the country\n",
                "type": "AMBIGUOUS"
            },
            {
                "isuser": false,
                "text": "what are the unique official languages spoken that are found before 1930",
                "query": ""
            },
            {
                "isuser": true,
                "text": "what are the unique official languages spoken that are found before 1930",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "These are the unique official languages spoken that are found before 1930.",
                "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
            },
            {
                "isuser": true,
                "text": "what is the total number of unique official languages spoken in the countries that are founded before 1930",
                "type": "INFORM_SQL"
            },
            {
                "isuser": false,
                "text": "This is the total number of unique official languages spoken in the countries that are founded before 1930.",
                "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
            }
        ]
    }
]